

                       AN INTRODUCTION TO TYMNET
                       -- ------------ -- ------

            TYMNET  is  a  geographically  distributed  virtual  circuit
       switching  computer  network.   Circuit  switching  involves  the
       dicipline of utilizing preestablished phone line  routes  between
       each  entry  point and each computer host.  If any path blockage,
       deterioration of signal quality or  overload  condition  develops
       along  this  'preferred  route'  an alternate phone line path for
       subsequent  traffic  can  be  automatically  substituted  by  the
       centralized network control supervisor.  This is possible because
       the geographical distribution of the network  uses  an  'expanded
       ring' structure:  there are two (or more) possible paths to route
       data from any point in the net to any destination computer.

            Since TYMNET  became  fully  operational  in  1971,  it  has
       expanded  and  evolved  into an international data communications
       network with considerable scope and flexibility.   The  principle
       use  of  the  network  has  been providing users with timesharing
       services and applications.  It is therefore  organized  around  a
       'terminal  to  computer'  technology  involving  low  speed, full
       duplex, voice grade communications lines.   TYMNET  nulifies  any
       geographical  distances between the user and the user's data.  In
       fact, the  geographical  location  of  the  user's  data  becomes
       irrelevant  once the user dials a local rotor number and accesses
       the  net.   An  additional   advantage   of   this   geographical
       distribution  is  the  ability  to  level usage loads across time
       zones:  for example, daytime European users can take advantage of
       the light loads that exist at night on California computers.

            TYMNET also insulates the  user  from  phoneline  errors  by
       checking  all  data packets each time the data is passed from one
       point to another along a given route.  If this checksum indicates
       an  error,  the 'store and forward' of the data is deferred until
       an automatic retransmission of correct data is performed.

            The ability to accomodate a variety of users  requires  that
       TYMNET  be  able  to understand a wide variety of terminal types.
       The network accomplishes this at the entry  points  into  TYMNET.
       Once  the  user  has  entered the network, the local minicomputer
       (remote or Tymsat), the system prompts for a terminal identifier.
       This  identifier  sets  up  all  the  parameters  which allow the
       terminal to understand the net and vice versa.

            TYMNET also has a 'computer to computer' capability so  that
       data and computing can be dispersed throughout the network.  This
       enables  remote  job  entry  and  distributed  processing.    For
       example, local tax return data can be entered into regional batch
       computers and then transmitted over the network  to  large  scale
       systems where the main processing can be accomplished.

            Still another way to use TYMNET is for a client organization
       to  use  only the network to interconnect terminals and computers
       owned by the client.  This saves the client the cost  and  effort
       of   setting   up  and  maintaining  a  separate  network.   This
       illustrates how TYMNET is a 'VAN' - Value Added Network.


                           TYMNET DEVELOPMENT

            In  1969,  a  centrally  directed  network  of  Varian   620
       mini-computers  was  developed  by  Tymshare.   When  the network
       became fully operational in 1971 it consisted of 30 nodes  and  a
       central supervisor (with 3 backup supervisors) that ran on an SDS
       940 computer system.  The network has since undergone a prolonged
       evolution  and  has  grown  to 200 nodes.  These nodes connect 90
       domestic and international cities utilizing over 50,000 miles  of
       leased  telephone lines, including two independent trans-Atlantic
       cables and a trans-Pacific cable.  Over 4000 users perform a wide
       range  of  data  processing  activies  on  95  large  scale  host
       computers tied into Tymnet.  The nodes (or TYMSATS) are  equipped
       with  hardware  to  handle  up to 32 or 64 asynchronous low speed
       ports (110 - 300 baud) and up to 12  synchronous  ports  (2400  -
       9600  baud)  and  4  bisynchronous  ports  (2400  to  4800 baud).
       Connected to the  asynchronous  ports  are  either  Bell  103/113
       modems  or Tymshare's equivalent MARK XV modems.  The TYMSATS are
       connected using Bell long lines with Bell modems (201C, 208,  209
       and Bell's D.D.S.  service).  Virtually every TYMSAT is connected
       with  multiple   phone   lines   permitting   alternate   routing
       capability.   Routing within the nodes is done implicitly through
       routing tables called permuter tables.  Each permuter table entry
       points to one buffer of a buffer pair.  One buffer of the pair is
       for incoming characters, one for outgoing characters.

                       ESTABLISHING A CONNECTION

                A user connects  his/her  terminal  to  a  host  on  the
       network  by  dialing  a  local node.  After typing a character to
       identify  his/her  terminal  characteristics,  the  user   enters
       his/her user name, host number and password.  This information is
       sent,  by  the  local  node,  to  the  network  supervisor.   The
       supervisor  verifies the user's name in the Master User Directory
       (MUD) and then checks for a  correct  password.   (Passwords  are
       stored  in  the  MUD  only in ciphered form.  To check a password
       given at login, it is enciphered and compared to  the  cipher  in
       the  MUD.)  If  the  user  did not specify a host number, his/her
       standard "home" host number is taken from the MUD.       The
       supervisor now knows the node which the user called (origination)
       and the node to which he wishes a connection (destination).   The
       supervisor  then  computes  the minimum cost path for the virtual
       circuit.  Once a path has been plotted, the supervisor  allocates
       buffer  pairs  and  permuter  table positions in each node on the
       path to create the virtual circuit.  Messages  are  sent  to  all
       nodes  along  the  path  to  make  the appropriate permuter table
       entries.  This implicitly causes buffer assignments in the nodes.
       Nodes  send  an  acknowledgement to the supervisor after making a
       permuter table entry.  Once all the acknowledgements are in,  the
       supervisor sends the user name, the user's status (from the MUD),
       the originating node number and port  number,  and  the  terminal
       characteristics  to  the destination node, plus a message to tell
       the attached host that there is a new login.


                The host may now read the user name to verify that  this
       user  name  is  valid  on  this  host.   No  further  checking is
       required!  All the security checking has been done for the  host,
       with  access  restricted to network personnel.  And all passwords
       are virtually invulnerable to theft.  This  allows  a  host  with
       minimal  login  security  to  be  connected  to the network, with
       confidence that only authorized people may  log  in  through  the
       network.   Additional  log in security may, of course, be imposed
       by the host computer system.


                 ERROR MESSAGES ASSOCIATED WITH LOGINS

            The following messages are transmitted to the  user  when  a
       login attempt fails:

       1. HOST NOT AVAILABLE THROUGH NET
          ------------------------------

          THIS MESSAGE INDICATES THAT THE SUPERVISORS ARE NOT AWARE OF
          THE HOST NUMBER THE USER REQUESTED. IT CAN OCCUR WHEN (1) THE 
          SUPERVISOR HAS NOT TAKEN OVER THE BASE ASSOCIATED WITH THE 
          REQUESTED HOST (I.E., ITS BASE IS DOWN), OR (2) IF THE SUPER-
          VISOR IS IN THE PROCESS OF TAKING OVER ALL OR A PORTION OF THE
          NETWORK AND HAS NOT TAKEN OVER THE BASE OR HOST BEING
          REQUESTED.

       2. HOST DOWN
          ---------

          THIS MESSAGE INDICATES THE BASE ASSOCIATED WITH THE REQUESTED
          HOST IS UP; HOWEVER, THE HOST ITSELF IS DOWN. THIS MESSAGE
          SHOULD ONLY OCCUR WHEN THE HOST IS TRULY DOWN.

       3. HOST SHUT
          ---------

          THIS INDICATES THE BASE AND HOST ARE UP; HOWEVER, LINES
          HAVE NOT BEEN ANSWERED. CERTAIN USERS (IE. OPER) CAN STILL
          LOGIN WITH THE 'SHUT OVERRIDE' BIT. THIS WILL NOT AFFECT
          ANY USERS ALREADY LOGGED ON THE SYSTEM.

       4. HOST OUT OF PORTS
          -----------------

          THIS MESSAGE INDICATES EVERYTHING IS UP AND OPERATIONAL;
          THERE ARE NO MORE PORTS AVAILABLE BETWEEN THE BASE AND HOST.
          IN OTHER WORDS, THE SYSTEM IS FULL.

       5. CIRCUITS BUSY
          -------------

          THIS MESSAGE INDICATES EVERYTHING IS WORKING; HOWEVER, THERE
          IS NOT ENOUGHT CAPACITY BETWEEN THE USER AND SELECTED HOST
          TO COMPLETE THE CIRCUIT.  TRY A DIFFERENT PHONE NUMBER,
          OR WAIT AND TRY AGAIN LATER.

       6. TRY AGAIN IN 5 MINS.
          --------------------

          DURING A SUPERVISOR TAKEOVER, LOG-INS ARE INHIBITED.
          THIS WAS DONE AS PART OF THE FIX TO PREVENT GARBAGE FROM
          ACCUMULATING IN THE NETWORK, AND THE HUNG USERS. DURING
          THE TWO TO FIVE MINUTES THE SUPERVISOR RETAKES THE NETWORK
          THE ABOVE MESSAGE WILL BE SENT.


                            NETWORK CONTROL

                The network supervisor is a program that  runs  under  a
       special   time   sharing   system  on  an  Interdata  7/32.   The
       supervisor, like any piece of software, and the  7/32,  like  any
       piece of hardware, are subject to failure.  Although failures are
       infrequent (on the order of one every 3 weeks) the absence  of  a
       supervisor to build virtual circuits cannot be tolerated for very
       long.  To deal with this problem 4 potential supervisors exist in
       the  network,  only  one of which is active at any one time.  The
       active supervisor keeps the other supervisors dormant by  sending
       "sleeping  pills"  to  them  at regular intervals.  If the active
       supervisor fails, the operators at the network control center can
       immediately  awaken one of the dormant supervisors.  Even without
       human intervention,  the  dormant  supervisors  will  notice  the
       absence  of  the  active  supervisor  when  they cease to receive
       "sleeping  pills".   The  various  supervisors   have   staggered
       'drowsiness  factors', at the end of which they will awaken if no
       sleeping pills have arrived.   Thus,  in  case  of  a  supervisor
       failure  one  of  the  dormant  supervisors  will awaken and take
       control of the network.  It is possible for multiple  supervisors
       to  be  trying  to  take  over  the network simultaneously.  This
       situation is resolved gracefully by the less dominant  supervisor
       going  to sleep when it discovers the presence of a more dominant
       supervisor.

                            NETWORK TAKEOVER

                In order to control nodes and carry out the supervisor's
       function  of  building virtual circuits, the supervisor must know
       the capacity of all nodes, their  link  capacities,  the  network
       topology  and  the  value  of  every  permuter table entry in the
       network.         A supervisor starting network  takeover  has  no
       presupposed  knowledge  of  the network topology.  The supervisor
       first sends a takeover command to its own  node,  and  learns  of
       that  node's  capacity, the capacity of its links, every permuter
       table entry in that node and the neighbors of that node  on  each
       link.   The latter is the basis on which the supervisor discovers
       the topology of the network.  The supervisor now  sends  takeover
       commands  to  each  neighbor  of  its own node.  As each of these
       nodes comes under complete control of the supervisor, each of its
       neighbors  is  checked  to discover previously unknown nodes, and
       these are in turn taken over.    In  this  way   the   supervisor
       learns  the topology of the network, all its capacities and (from
       the permuter tables) which resources are in  use.   In  1975  the
       supervisor  running  on  the SDS 940 reached its capacity and was
       replaced by a supervisor running on an Interdata  7/32,  reducing
       network  takeover  time from 15 minutes to 2.5 minutes.  The time
       determining factors are the number of  nodes,  the  bandwidth  of
       links  in  the vicinity of the supervisor, the number of permuter
       table entries and the connectivity of the network  vis-a-vis  the
       supervisor's  own node.  From a control standpoint the supervisor
       views the network as a tree.  The control tree comprises a subset
       of  the links in the network.  The balance and depth of this tree
       is the measure of connectivity of the network in relation to  the
       supervisor's own node.   If  a  previously  non-operational  link


       becomes operational it may reveal one or  more  nodes  that  were
       previously  inaccessible.   The  supervisor would then extend the
       control tree by taking over these newly discovered nodes.  On the
       other  hand, if a link that is part of the control tree goes out,
       the supervisor loses control of the nodes in that  subtree.   The
       control  tree  is  then rebuilt to regain control of all the lost
       nodes that are still accessible through the network topology.

                The original TYMNET I nodes allowed  only  3  links  per
       node.   Presently  TYMNET I  nodes  allow 16 links per node.  The
       cost of more links is increased CPU and memory  requirements  for
       the  node.   However,  even  16  links  per  node  will  soon  be
       inadequate for the  growth  of  TYMNET.   One  solution  to  this
       problem  is  the use of node clusters.  A node cluster is a group
       of 2 or more nodes  in  close  proximity,  interconnected  by  an
       inexpensive  high  speed  distributed memory transfer device.  We
       call this device a "memory shuffler", and it is capable  of  data
       transfers  at  memory  bandwidth  rates.   A fully interconnected
       eight node cluster at TYMNET's Cupertino center, with 72 links to
       the  rest  of  the  network  is planned.  This approach creates a
       logically very large node  (including  two  supervisor  machines)
       that  does  not  change  the fundamental logical structure of the
       network.  
   