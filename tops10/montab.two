                                                                 Page 151


|  66.0  JBTST3 -- JOB STATUS TABLE 3
|
|
|  Description:   Contains the address of the CPU data block for the  CPU
|                 on  which  the  job  ran  last.   This table applies to
|                 multi-CPU KL systems only.
|
|  Defined in:    COMMON
|
|  Used By:       ?
|
|                +-------------------------------------------------------+
|  Job       0   |                          |      CDB Address           |
|  Number        |-------------------------------------------------------|
|            1   |                          |      CDB Address           |
|                |-------------------------------------------------------|
|            2   |                          |      CDB Address           |
|                |-------------------------------------------------------|
|                                     .     .     .
|                |-------------------------------------------------------|
|            n   |                          |      CDB Address           |
|                +-------------------------------------------------------+
|  Bits 18 through 35 contain the address of the CPU Data Block  for  the
|  CPU that last ran the job.
                                                                 Page 152


   67.0  JBTSWP -- JOB SEGMENT SWAP AREA


   Description:   Contains  information  used  when  swapping   segments.
                  There is one entry for each job number and high segment
                  number.  It is  indexed  by  the  job  number  or  high
                  segment number.

   Defined by:    COMMON

   Used by:       COMCON, KISER, KLSER, KSSER,  SCHED1,  SEGCON,  SWPSER,
                  UUOCON, VMSER

   GETTAB Table:  .GTSWP (7)
|
|
|                +-------------------------------------------------------+
|  Job     0     |F|JBYSUN|    JBYLKN         |        Disk address      |
|  Number        |-------------------------------------------------------|
|          1     |F|JBYSUN|    JBYLKN         |        Disk address      |
|                |-------------------------------------------------------|
|          2     |F|JBYSUN|    JBYLKN         |        Disk address      |
|                |-------------------------------------------------------|
|                                         .   .   .
|                |-------------------------------------------------------|
|          n     |F|JBYSUN|    JBYLKN         |        Disk address      |
|                |-------------------------------------------------------|
|  High    n+1   |F|JBYSUN|    JBYLKN         |        Disk address      |
|  Segment       |-------------------------------------------------------|
|  Number  n+2   |F|JBYSUN|    JBYLKN         |        Disk address      |
|                |-------------------------------------------------------|
|                                         .   .   .
|
|
|
|       Bit       Name      Description        ___       ____      ___________
|
|           0     FRGSEG    1 if low or high segment is fragmented on the
|                           swapping device.
|         2-4     JBYSUN    Index to unit number in SWPTAB.
|        5-17     JBYLKN    First logical K on the unit.
|       18-35               Disk address, if Bit 0 is off.  Core  address
|                           of fragment table if Bit 0 is set.
|
|  Notes:
|
|
|        o  For swapped out segments, Out-Core Size is the  size  of  the
|           area  in which the segment is written on the swapping device,
|           in 1K blocks;  In-Core Size is the size of the core area into
|           which  it  should  be  read when it is swapped in.  These are
|           usually, but not always, the same.  One case  in  which  they
|           would be different is when a segment is expanding in size.
                                                                 Page 153


|        o  The fragment table is documented separately.
|
                                                                 Page 154


   68.0  JBTUPM -- UPT ADDRESS TABLE


   Description:   Contains the address for the user  page  map  page  for
                  each  job and high segment that is in core.  This table
                  is also called JBTHSA.

   Defined in:    COMMON

   Used by:       KILOCK, KISER, KLSER, SCHED1,  SEGCON,  SWPSER,  SYSINI
                  UUOCON, VMSER

   GETTAB Table:  .GTUPM (100)

   Job           +-------------------------------------------------------+
   Number    0   |    HSO     |      0     |      HSS   |     UPT addr   |
                 |-------------------------------------------------------|
             1   |    HSO     |      0     |      HSS   |     UPT addr   |
                 |-------------------------------------------------------|
             2   |    HSO     |      0     |      HSS   |     UPT addr   |
                 |-------------------------------------------------------|
                                       .   .   .
                 |-------------------------------------------------------|
             n   |    HSO     |      0     |      HSS   |     UPT addr   |
                 |-------------------------------------------------------|
   High     n+1  |    HSO     |            |            |    HSA         |
   Segment       |-------------------------------------------------------|
   Number   n+2  |    HSO     |            |            |    HSA         |
                 |-------------------------------------------------------|
                                       .   .   .



   Description for Low Segment Entry:

        Bit       Pointer   Meaning        ___       _______   _______

         0-8      JBYHSO    Virtual page number of hi-seg.  origin
        18-22     JBYHSS    Number of pages less one in high segment
        23-35               Physical page number of UPT


   Description for High Segment Entry

         0-8      JBYHSO    Virtual page number of high-seg origin
        23-35     JBYHSA    Physical page number of first  page  of  high
                            segment
                                                                 Page 155


|  69.0  JBTVIR -- PAGING RATE TABLE
|
|
|  Description:   Virtual size of program
|
|  Defined in:    COMMON
|
|  GETTAB Table:  .GTVIR
|
|  Related Tables:  JBTIMI
|
|                 0---5  6------------14 15---------------------------35
|  Job           +-------------------------------------------------------+
|  Number     0  |      | HIVSIZ        |        LOVSIZ                  |
|                |-------------------------------------------------------|
|             1  |      | HIVSIZ        |        LOVSIZ                  |
|                |-------------------------------------------------------|
|             2  |      | HIVSIZ        |        LOVSIZ                  |
|                |-------------------------------------------------------|
|                                       .   .   .
|                |-------------------------------------------------------|
|             n  |      | HIVSIZ        |        LOVSIZ                  |
|                +-------------------------------------------------------+
|
|
|       Bits      Symbol    Contents        ____      ______    ________
|
|       0-5                 Reserved
|       6-14      HIVSIZ    High segment size (non-shareable).   If  this
|                           field is 0, the high segment is sharable.
|       15-35     LOVSIZ    Low segment size.
                                                                 Page 156


   70.0  JBTWCH -- WATCH TABLE


   Description:   This table  is  assembled  if  FTWATCH  is  assigned  a
                  non-zero  value  in  S.MAC.  It determines the specific
                  watch parameters to be displayed.  There is  one  entry
                  per  job  number  including the null job.  The null job
                  entry is not referenced.

   Defined in:    COMMON

   Used by:       COMCON, MTXSER, UUOCON

   GETTAB Table:  .GTWCH (35)

   Job           +-------------------------------------------------------+
   Number     0  |      Conditions          |        Time of day         |
                 |-------------------------------------------------------|
              1  |      Conditions          |        Time of day         |
                 |-------------------------------------------------------|
              2  |      Conditions          |        Time of day         |
                 |-------------------------------------------------------|
                                         .  .  .
                 |-------------------------------------------------------|
              n  |      Conditions          |        Time of day         |
                 +-------------------------------------------------------+


        Bit       Name      Description        ___       ____      ___________

            1     JB.WDY    Watch time of day started to wait.
            2     JB.WRN    Watch runtime when return to command level.
            3     JB.WWT    Watch waiting time  when  return  to  command
                            level.
            4     JB.WDR    Watch number of 128 word disk block read.
            5     JB.WDW    Watch number of 128 word disk blocks written.
            6     JB.WVR    Watch versions.
            7     JB.WMT    Watch number MTA performace statistics.
            8     JB.WFL    Watch file activity.
            9     JB.WLM    Long error messages.
           10     JB.WNM    Normal error messages.
           11     JB.WPM    Prefix error messages.
        13-35               Time of day  (in  jiffies)  user  started  to
                            wait.
                                                                 Page 157


   71.0  JDA -- DEVICE ASSIGNMENT TABLE


   Description:   Associates a device or file with each active channel in
                  a user job, and tells which UUOs have been done on that
                  channel.

                  The JDA is part of the job's UPT.  Each JDA contains 16
                  entries  corresponding to the 16 software channels of a
                  user job.

                  Indexed by channel number.

   Defined in:    COMMON

   Used by:       COMCON, CORE1, DTASRN, FILIO, FILUUO,  MSGSER,  PTYSER,
                  SEGCON, UUOCON, VMSER


                 +-------------------------------------------------------+
   Channel    0  |        UUO bits*      |    Device Data Block address  |
                 |-------------------------------------------------------|
              1  |        UUO bits*      |    Device Data Block address  |
                 |-------------------------------------------------------|
              2  |        UUO bits*      |    Device Data Block address  |
                 |-------------------------------------------------------|
                                    .    .    .
                 |-------------------------------------------------------|
             17  |        UUO bits*      |    Device Data Block address  |
                 +-------------------------------------------------------+
                                                                 Page 158


        Bit       Label     Meaning        ___       _____     _______

            0     INITB     INIT or OPEN has been done
            1     IBUFB     Input ring header specified (by INIT)
            2     OBUFB     Output ring header specified (by INIT)
            3     LOOKB     A LOOKUP has been done
            4     ENTRB     An ENTER has been done
            5     INPB      An INPUT has been done
            6     OUTPB     An OUTPUT has been done
            7     ICLOSB    An input CLOSE has been done
            8     OCLOSB    An output CLOSE has been done
            9     INBFB     An input buffer ring has been set up
           10     OUTBFB    An output buffer ring has been set up
           11     SYSDEV    This is the system tape device or  SYSPPN  on
                            DSK
           12     RENMB     RENAME UUO in progress
           13     RESETB    RESET UUO in progress
        18-35               Address of Device Data Block for I/O on  this
                            software channel

   Notes:

        1.  If both LOOKB and ENTRB are on, the file is being accessed in
            update mode.

        2.  Extended channel information is kept in a  64-word  table  in
            funny  space  pointed  to  by the .UPCTA word in the UPT.  If
            extended channels are not in use, the  word  is  zero.   Each
            entry  in  the  table is formatted the same as entries in the
            JDA table.

                                                                 Page 159


   72.0  JOBDAT -- DATA AREA


   Description:   Storage area for items of interest to both the  monitor
                  and the user.

                  There is one Job Data Area for  each  job  that  has  a
                  non-zero  core  allocation.   It occupies the first 140
                  locations of the job's core area, and  is  swapped  out
                  along with the job.

   Defined in:    COMMON

   Used by:       COMMON

    Offset    Symbol   Map    ______    ______   ___
                      +---------------------------------------------+
    0 - 17    .JBBAC  | User ACs during UUO (16 words)              |
                      |---------------------------------------------|
   20 - 37    .JBBAC  | Hardware ACs while job inactive (16 words)  |
                      |---------------------------------------------|
        40    .JBUUO  | User UUO stored here                        |
                      |---------------------------------------------|
        41    .JB41   | User UUO branch instruction                 |
                      |---------------------------------------------|
        42    .JBERR  | Unused              | Error cnt for RPG     |
                      |---------------------------------------------|
        43    .JBENB  | Unused              | User APR trap flags   |
                      |---------------------------------------------|
        44    .JBREL  |   0                 | Length of low seg     |
                      |---------------------------------------------|
        45    .JBPD1  | Push down list (21 words)                   |
                      |---------------------------------------------|
        72    .JBHCU  | Highest I/O  channel in use                 |
                      |---------------------------------------------|
        73    .JBPC   | Job PC when job inactive                    |
                      |---------------------------------------------|
        74    .JBDDT  | Unused              | Start addr of DDT     |
                      |---------------------------------------------|
        76    .JBBPT  | Address of unsolicited breakpoint           |
                      | entry into DDT                              |
                      |---------------------------------------------|
                                                                 Page 160


                      |---------------------------------------------|
       114    .JBSDD  | JOBDDT here on SAVE/Protected from I/O      |
                      |---------------------------------------------|
       115    .JBHRL  | First free loc      | Length of high        |
                      | in high seg         | seg                   |
                      |---------------------------------------------|
       116    .JBSYM  | Symbol table pointer                        |
                      |---------------------------------------------|
       117    .JBUSY  | Undefined symbol table pointer              |
                      |---------------------------------------------|
       120    .JBSA   | First free loc      | Program start         |
                      | in low seg-         | address               |
                      | when loaded         |                       |
                      |---------------------------------------------|
       121    .JBFF   | Current first free location in low seg.     |
                      |---------------------------------------------|
       122    .JBS41  | .JB41 here on SAVE                          |
                      |---------------------------------------------|
       123    .JBEXM  | Address of last D or E command              |
                      |---------------------------------------------|
       124    .JBREN  | Address for REENTER command                 |
                      |---------------------------------------------|
       125    .JBAPR  | Branch loc on user enabled APR error        |
                      |---------------------------------------------|
       126    .JBCNI  | APR conditions on APR trap                  |
                      |---------------------------------------------|
       127    .JBTPC  | PC stored here on APR trap                  |
                      |---------------------------------------------|
       130    .JBOPC  | Old PC stored here on START, DDT, REENTER,  |
                      | & CSTART commands                           |
                      |---------------------------------------------|
       131    .JBCHN* | Used for FORTRAN job chaining (root link)   |
                      |---------------------------------------------|
       132    .JBFDV  | DDB addr for FINISH command                 |
                      |---------------------------------------------|
       133    .JBCOR  | Highest loc in low  |   Low seg core        |
                      | seg actually loaded |   assignment          |
                      |---------------------------------------------|
       134    .JBINT  |                |   Data block adr for  |
                      |                     |   error intercept     |
                      |---------------------------------------------|
       135    .JBOPS  | Reserved for runtime operating system       |
                      |---------------------------------------------|
       136    .JBCST  | Reserved for customer                       |
                      |---------------------------------------------|
       137    .JBVER  | Job version number                          |
                      |---------------------------------------------|
       140            | First loc in user's program area            |
                      +---------------------------------------------+
                                                                 Page 161


   Notes:

        1.  The actual tables are  included  at  the  beginning  of  each
            user's area.

        2.  Many of these words contain different values while a SAVE  or
            GET  is  in  progress,  and  therefore have several different
            labels.

        3.  .JBCHN is also symbolized by .JBOVL.

        4.  System-sensitive locations for all machines are stored in the
            UPT instead of the user's core image.  If .JBxxx is stored in
            location yyy, VJBDAT will define the value of the  symbol  as
            -1000+yyy (octal).

                                                                 Page 162


   73.0  JOB QUEUES AND WAIT STATE CODES


   Defined in:    (See JBTCQ and JBTSTS)

   Used In:       (See JBTCQ and JBTSTS)

   Job queues keep track of a job's priority to run and to be in core and
   are  maintained  in  table  JBTCQ.  Wait State Codes keep track of the
   runnability of a job and are defined  in  parallel  so  that  a  queue
   number and a wait state code that have the same meaning will also have
   the same numeric value.  Values will differ at different sites due  to
   conditional assembly.

   Symbol   Value  Usage  Feature      Meaning   ______   _____  _____  _______      _______

   RNQ        00     N               Ready to run
   WSQ        01     U               I/O Wait Satisfied
   TSQ        02     U               TTY I/O Wait Satisfied
   DSQ        03     U               Disk I/O Wait Satisfied
   PSQ        04     U               Paging I/O Wait Satisfied

   AUQ        05     R               Alter UFD Wait
   DAQ        06     R               Disk Space Allocation Wait
   CBQ        07     R               Disk core block scan wait
   D1Q        11     R               DECtape Controller 1 Wait (DTA)
   D2Q        12     R               DECtape Controller 2 Wait (DTB)
   D3Q        13     R               DECtape Controller 3 Wait (DTC)
   D4Q        14     R               DECtape Controller 4 Wait (DTD)
   D5Q        15     R               DECtape Controller 5 Wait (DTE)
   D6Q        16     R               DECtape Controller 6 Wait (DTF)
   D7Q        17     R               DECtape Controller 7 Wait (DTG)
   D8Q        20     R               DECtape Controller 8 Wait (DTH)
   DCQ        21     R               DECtape/Magtape Control Wait
   MMQ        22     R     FTMP      Memory Management Wait
   CAQ        23     R    FTLOCK     Semi-permanent core Wait (LOCK)
   EVQ        24     R  FTKI|FTKL    Exec virtual memory Wait
   EQQ        25     R   FTEQDQ      Enqueue-Dequeue Wait

   IOWQ       26     C               I/O Wait
   TIOWQ      27     CQ              TTY I/O Wait
   DIOWQ      30     C               Disk I/O Wait
   PIOWQ      31     C               Paging I/O Wait
   SLPQ       32     CQ              Sleeping (>= 1 second)
   EWQ        33     CQ              Event Wait (see JBTST2)
   NAPQ       34     C               Napping (sleep < 1 second)
   NULQ       35     CQ              Unassigned Jobs
   JDCQ       36     CQ   FTDAEM     Job Waiting for DAEMON
   STOPQ      37     CQ              Job Stopped (^C State)

   PQ1        40     Q               Jobs Starting Up or coming
                                     out of TTY I/O wait
   PQ2        41     Q               Non interactive jobs
   CMQ        42     Q               Command Wait for Swapper
                                     (^W State)
                                                                 Page 163


   Symbol   Value  Usage  Feature      Meaning   ______   _____  _____  _______      _______

   HPQ1       43     Q    FTHPQ      High Priority (Realtime) Jobs
   HPQ2       44     Q    FTHPQ      Higher Priority (Realtime) Jobs
   HPQ3       45     Q    FTHPQ      Highest Priority (Realtime) Jobs

   The number of HPQs is determined by the MONGEN dialogue.

   Key to Usage:

       N     No queue header for this WSC.  (JBTCQ+0 contains
             0).  Defined in QUEUES macro.

       U     Wait State Codes for jobs that have become unblocked
             but need to be processed by QREQ in SCHED1 before
             being considered to run.  Defined in QUEUES macro.

       R     Wait State Codes for jobs that blocked at UUO
             level requiring a sharable resource that was unavail-
             able (see REQTAB).  Jobs will be unblocked by the
             scheduler when the resource becomes available (see
             AVALTB).  Defined in RWAITS macro.

       C     Wait State Codes for jobs that are blocked waiting
             for a monitor event, such as I/O complete, clock ticks,
             command input, or DAEMON activity, before they will be
             runnable.  Defined in CODES macro.

       Q     These queues in JBTCQ actually hold jobs.  Other
             symbols have queue headers reserved for them, but
             jobs are never placed in them.  RNQ has no queue
             header at all.


   Notes:

        1.  RNQ, IOWQ,  DIOWQ,  PIOWQ,  WSQ,  TSQ,  DSQ,  and  PSQ  never
            actually  hold  jobs.   The queues are defined only to define
            the corresponding Wait State Codes.

        2.  The values of PQ1, PQ2, CMQ, and STOPQ are never used as wait
            state codes.  Jobs in any of the PQs have wait state codes of
            000.  When jobs are put into CMQ or STOPQ they  retain  their
            previous  codes,  so  that  they  can  be  returned  to their
            previous queues.

                                                                 Page 164


   74.0  KON -- KONTROLLER DATA BLOCK


   Description:    There is one KON per  disk  controller.   It  contains
                  information  specific  to that controller, for example,
                  dispatch  addresses  into  the   controller   dependent
                  routines.    Controller   data   blocks  are  generated
                  dynamically by AUTCON when the system is started.

   Defined in:    COMMOD

   Used by:       FILIO, ONCE, ONCMOD, RPXKON, RNXKON, SYSINI, VMSER

|                +-------------------------------------------------------+
|  KONBSY,, (1)  | K | Reserved |      | B |    Max. unit #              |
|  KONMUN        |   |          |      |   |                             |
|                |-------------------------------------------------------|
|  KONTBP (2)    |  AOBJN ptr to KONTAB    |   Offset into KDB           |
|                |-------------------------------------------------------|
|  KONCAM (3)    |                                           |5|4|3|2|1|0|
|                |-------------------------------------------------------|
|  KONIIO        |  Offset into the KDB of the first I/O instruction     |
|                |-------------------------------------------------------|
|  KONCOM        |  Negative of CCWMAX     |         KONLST              |
|                |-------------------------------------------------------|
|  KONRED (4)    | Table of controller-dependent dispatch instructions   |
|                |-------------------------------------------------------|
|  KONCUA        | UDB address of unit doing transfer (or last one)      |
|                |-------------------------------------------------------|
|  KONIOC        | Address of controller-channel pair in low core        |
|                |-------------------------------------------------------|
|  KONCHN        | Address of channel data block for this controller     |
|                |-------------------------------------------------------|
|  KONPTR        | Indirect pointer to index KONTAB    (P3)              |
|                |-------------------------------------------------------|
|  KONDMP        | Holds DEVDMP during dump-mode I/O                     |
|                |-------------------------------------------------------|
|  KONERR        | Dispatch to controller-dependent error-recovery prog. |
|                |-------------------------------------------------------|
|  KONECC        | Used for ECC mask and position                        |
|                |-------------------------------------------------------|
|  KONRRG        | Used to hold drive registers                          |
|                |-------------------------------------------------------|
|  KONECR        | Control register on error                             |
|                |-------------------------------------------------------|
|  KONEDB        | Data buffer register on error                         |
|                |-------------------------------------------------------|
|  KONREG        | Length of KONEBK                                      |
|                |-------------------------------------------------------|
|  KONEBK        | Place to save drive registers on error                |
|                +-------------------------------------------------------+
|
|
|  Notes:
                                                                 Page 165


|       1.  The CONSO skip chain entry  for  the  controller  immediately
|           precedes the Kontroller Data Block for the controller.  These
|           skip chain entries differ for each type of controller.

        2.  KONBSY contains the following bits:

            Bit 0 (KOPBSY) is set if the controller is busy.

            Bits 1-6 are reserved.

            Bit 17 (KOPBND) is set for  CI  disk  controllers  when  disk
            units on the controller are bound.

            Bits 18-35 (KOPMUN) contain the maximum unit  number  on  the
            controller.


        3.  KONTBP contains the AOBJN pointer to the  the  table  of  UDB
            address  (KONTAB)  in  the left half, and the offset into the
            KDB in the right half.


        4.  KONCAM contains a bit mask that tells which CPU(s) can access
            the  controller.   Bit  35 is set for CPU0, Bit 34 is set for
            CPU1, Bit 33 for CPU2, and so forth.

        5.  KONRED, the table of controller-dependant dispatch addresses,
            is described below.

                                                                 Page 166


   KONRED (Controller-Dependent Dispatch Addresses)


                 +-------------------------------------------------------+
   KONRED (1)    | PI   |   Address of read program                      |
                 |-------------------------------------------------------|
   KONRDS        |         Address of read, stop-on-error program        |
                 |-------------------------------------------------------|
   KONRDF        |         Read header and data                          |
                 |-------------------------------------------------------|
   KONRDC        |         Read in 10/11 compatibility mode              |
                 |-------------------------------------------------------|
   KONWRT        |         Entry point to write program                  |
                 |-------------------------------------------------------|
   KONWTS (2)    |         Entry point to write, stop on error           |
                 |-------------------------------------------------------|
   KONWTF        |         Write format                                  |
                 |-------------------------------------------------------|
   KONWTC        |         Write in 10/11 compatibility mode             |
                 |-------------------------------------------------------|
   KONUNL        |         Unload drive                                  |
                 |-------------------------------------------------------|
   KONPOS (3)    | F |     Position heads-entry zero for fixed-head disk |
                 |-------------------------------------------------------|
   KONLTM (4)    |         Compute rotational latency time               |
                 |-------------------------------------------------------|
   KONUPA (5)    | U | S |  Test if controller is on-line                |
                 |-------------------------------------------------------|
   KONCPY        |         Determine type and capacity of unit           |
                 |-------------------------------------------------------|
   KONRCL        |         Recalibrate                                   |
                 |-------------------------------------------------------|
   KONSTP        |         Stop on hung unit                             |
                 +-------------------------------------------------------+


   Notes:


        1.  Bits 0-2 (KOBPI) of KONRED  contain  the  PI  level  for  the
            controller.

        2.  For CI disks, KONWTS is equivalent to  KONCNA,  where  Bit  0
            (KOPCNA), if set, indicates credits are not available.

        3.  Bit 0  (KOPPWX)  of  KONPOS,  if  set,  indicates  fixed-head
            devices.

        4.  For CI disks, KONLMT is equivalent  to  KONMX,  where  Bit  0
            (KOPMX)  indicates  the disk can do multiple transfers at one
            time.

        5.  KONUPA contains two flags.  Bit 0 (KONDWN) is  set  when  the
            controller   is  down.   Bit  1  (KONMPS)  is  set  when  the
            controller can seek while doing a transfer.
                                                                 Page 167


   75.0  KONTAB -- UDB ADDRESS TABLE WITHIN KON


   Description:   Contains UDB address for each unit on this  controller.
                  There  is  one  entry  for each unit on the controller.
                  Indexed by physical unit number with controller.

                 +-------------------------------------------------------+
                 | B |              |  0        |         UDB 1          |
                 |-------------------------------------------------------|
                 | B |              |  0        |         UDB 2          |
                 |-------------------------------------------------------|
                                    .    .    .
                 |-------------------------------------------------------|
                 | B |              |  0        |         UDB 10         |
                 +-------------------------------------------------------+

   Notes:

        1.  Bit 0 of first word is set when controller is busy.

        2.  If controller has fewer  than  eight  units,  the  additional
            entries are present, but blank.

                                                                 Page 168


   76.0  LDB -- LINE DATA BLOCK


   Description:   Contains data pertaining to one terminal line.  One LDB
                  per  line;   including  scanner  lines,  PTYs, and CTY.
                  LINTAB serves as directory.

   Defined in:    SCNSER

   Used by:       CLOCK1, COMCON, COMMON, D76INT, MSGSER, NETSER, PSISER,
                  PTYSER, SYSINI, UUOCON, XTCSER
|
|
|                +-------------------------------------------------------+
|  LDBDDB        |          Address of line's attached DDB               |
|                |-------------------------------------------------------|
|  LDBCOM*       |               Forced command bits (Section ?.?.?)     |
|                |-------------------------------------------------------|
|  LDBATR*       |        Line attribute bits (See Section ?.?.?)        |
|  LDICLR        |            Start clearing here on restart             |
|                |-------------------------------------------------------|
|  LDBOST*       |          Terminal output bits (Section ?.?.?)         |
|                |-------------------------------------------------------|
|  LDBBKU        |       Copy of LDBTIP at last break XMTECH             |
|                |-------------------------------------------------------|
|  LDBBKI        |       Copy of LDBTIP at last break RECINT             |
|                |-------------------------------------------------------|
|  LDBTIP        |         T2 to put characters in input buffer          |
|                |-------------------------------------------------------|
|  LDBTIT        |        T2 to take characters from input buffer        |
|                |-------------------------------------------------------|
|  LDBTIC        |      Count of echoed characters in input buffer       |
|                |-------------------------------------------------------|
|  LDBBKC        |       Count of break characters in input buffer       |
|                |-------------------------------------------------------|
|  LDBTOP        |         T3 to put characters in output buffer         |
|                |-------------------------------------------------------|
|  LDBTOT        |       T2 to take characters from output buffer        |
|                |-------------------------------------------------------|
|  LDBTOC        |        Count of characters from output buffer         |
|                |-------------------------------------------------------|
|  LDBECT        |     T2 to take characters from input for echoing      |
|                |-------------------------------------------------------|
|  LDBECC        |              Count of characters to echo              |
|                |-------------------------------------------------------|
|  LDBIEC        |       Count of invisible characters in echo stream    |
|                |-------------------------------------------------------|
|  LDBIIC        |       Count of invisible characters in input stream   |
|                |-------------------------------------------------------|
|  LDBEOP        |       T3 to put characters in echo buffer             |
|                |-------------------------------------------------------|
|  LDBEOT        |       T3 to take characters from echo buffer          |
|                |-------------------------------------------------------|
|  LDBEOC        |             Count of characters in echo buffer        |
|                |-------------------------------------------------------|
                                                                 Page 169


|                |-------------------------------------------------------|
|  LDBCLP        |             Command line pointer (for COMCON)         |
|                |-------------------------------------------------------|
|  LDBXNP        |        XON class character pointer for output         |
|                |-------------------------------------------------------|
|  LDBFLP        |          Filler character pointer for output          |
|                |-------------------------------------------------------|
|  LDBNNP        |      "Not now" character pointer for output           |
|                |-------------------------------------------------------|
|  LDBPBK        | Up to 4 break characters for Packed Image Mode (PIM)  |
|                |-------------------------------------------------------|
|  LDBHPS        |              Horizontal Position Counter              |
|                |-------------------------------------------------------|
|  LDBBCT        |   Total command line count |   Total break characters |
|                |       for this line        |      for this line       |
|                |-------------------------------------------------------|
|  LDBICT        |                Total input character count            |
|                |-------------------------------------------------------|
|  LDBOCT        |                Total output character count           |
|  LDICLE(1)     |             Clear through here on restart             |
|                |-------------------------------------------------------|
|  LDBDCH        |               Hardware status bits (Section ?.?.?)    |
|                |-------------------------------------------------------|
|  LDBBYT*       |  First word of software status bits (Section ?.?.?)   |
|                |-------------------------------------------------------|
|  LDBBY2*       | Second word of software status bits (Section ?.?.?)   |
|                |-------------------------------------------------------|
|  LDBLSW*       |             Page length bits (Section ?.?.?)          |
|                |-------------------------------------------------------|
|  LDBPAG*       |             Terminal page bits (Section ?.?.?)        |
|                |-------------------------------------------------------|
|  LDBISR*       |    Interrupt service routine addr (Section ?.?.?)     |
|                |-------------------------------------------------------|
|  LDBISB*       |             Line speed word (Section ?.?.?)           |
|                |-------------------------------------------------------|
|  LDBQUE        |     Global address of the next line in the queue      |
|                |-------------------------------------------------------|
|  LDBQUH        |    Queue header         |         Reserved            |
|                |-------------------------------------------------------|
|  LDBTTW*       |            Type of line bits (Section ?.?.?)          |
|                |-------------------------------------------------------|
|  LDBREM (3)*   |             Remote bits (Section ?.?.?)               |
|                |-------------------------------------------------------|
|  LDBREM (3)    |        Last characteristics message sent              |
|                |-------------------------------------------------------|
|  LDBREM (3)*   |             Remote line number (Section ?.?.?)        |
|                |-------------------------------------------------------|
|  LDBREM (3)*   |             Remote node number (Section ?.?.?)        |
|                |-------------------------------------------------------|
|  LDBREM (3)*   |               MCR word (Section ?.?.?)                |
|  LDBREM (3)*   |               VTM word (Section ?.?.?)                |
|                |-------------------------------------------------------|
                                                                 Page 170


|                |-------------------------------------------------------|
|  LDBLAT (1)    |      Global address of LAT service data block, or     |
|  LDBNRT (2)    |      Global address of NRB (NRTSER data block), or    |
|  LDBTTD (4)*   |   Line information for support of RSX-20F terminals   |
|                |-------------------------------------------------------|
|  LDBMIC (5)*   |              MIC bits (Section ?.?.?)                 |
|                |-------------------------------------------------------|
|  LDBLOT (6)    |         T2 to take characters for logging             |
|                |-------------------------------------------------------|
|  LDBLOC (6)    |              Count of characters to log               |
|                |-------------------------------------------------------|
|  LDBBKM *      |     Pointer to terminal break mask (Section ?.?.?)    |
|                |-------------------------------------------------------|
|  LDBBKB *      |     Break mask field width (Section ?.?.?)            |
|                |-------------------------------------------------------|
|  LDBCST (7)    /           Reserved for customer definition            /
|                |-------------------------------------------------------|
|  LDBLEN        |            Size of a data block for a line            |
|                +-------------------------------------------------------+
|
|  Notes:
|
|
|        o  If LAT (LAT-11 terminal) support is included, the definitions
|           in this word are for support of LAT terminals.
|
|        o  If FTDECN (include DECnet support), the definitions  in  this
|           word  are  for  support  of  DECnet's  NRTSER network virtual
|           terminals.
|
|        o  If FTNET (include NCL  network  software),  then  five  words
|           containing  network-related  LDB  fields  for  remote station
|           terminal status.
|
|        o  If FTKL10 (include KL10 support),  the  definitions  in  this
|           word are for support of RSX-20F terminals.
|
|        o  If FTMIC (include Macro Command Processor), this word for MIC
|           use.
|
|        o  If FTMLOG (include MIC Log File Support), include  these  two
|           words for MIC logging.
|
|        o  The length of the area reserved for  customer  definition  is
|           defined as M.LCST.
|
                                                                 Page 171


|  76.1  LDBCOM
|
|                                    LDBCOM
|
|  +-------------------------------------------------------------------------+
|  |L|L|L|L|L|      |    L   |         |                                     |
|  |D|D|D|D|D|      |    D   |         |                                     |
|  |B|B|B|B|B|      |    P   |         |                                     |
|  |C|C|C|D|F|      |    C   |         |                                     |
|  |M|M|M|E|D|      |    M   |         |                                     |
|  |R|F|K|T|X|      |    X   |         |                                     |
|  |-------------------------------------------------------------------------|
|  |0|1|2|3|4|5----8|9-----12|13-----17|18---------------------------------35|
|  +-------------------------------------------------------------------------+

        Word                Mask        ____                ____
        Symbol    Bits      Symbol    Description        ______    ____      ______    ___________

        0         400000    LDBCMR    Command request bit
        1         200000    LDBCMF    Command forced
        2         100000    LDBCMK    Forcing KJOB command
        3         40000     LDBDET    Job detached from this line  during
                                      command processing
|       4         20000     LDBFDX    Processing a FILDAE exit message
|       5-8                           Reserved
        9-12                LDPCMX    Pointer index for forced command
        13-17
        18-35
                                                                 Page 172


|  76.2  LDBATR
|
|                                  LDBATR
|
|  +-----------------------------------------------------------------------+
|  |L|L|L|                                                                 |
|  |A|A|A|                                                                 |
|  |L|L|L|                                                                 |
|  |8|C|D|                                                                 |
|  |B|O|I|                                                                 |
|  |T|S|S|                                                                 |
|  |-----------------------------------------------------------------------|
|  |0|1|2|3--------------------------------------------------------------35|
|  +-----------------------------------------------------------------------+
|
|
|       Word                Mask        ____                ____
|       Symbol    Bits      Symbol    Description        ______    ____      ______    ___________
|
|       0         400000    LAL8BT    Line   is   associated   with    an
|                                     eight-bit terminal
|       1         200000    LALCOS    Line can do overstriking
|       2         100000    LALDIS    Line is associated with  a  display
|                                     terminal
|       3-35                          Reserved
|
                                                                 Page 173


|  76.3  LDBOST
|
|
|                                  LDBOST
|
|  +-----------------------------------------------------------------------+
|  |L|L|L|L|L|L|L|L|L|L| L| L|                                             |
|  |O|O|O|O|O|O|O|O|O|O| O| O|                                             |
|  |L|L|L|L|L|L|L|L|L|L| L| L|                                             |
|  |X|N|E|F|S|S|S|N|R|R| P| M|                                             |
|  |F|B|S|S|A|T|S|N|E|E| I| I|                                             |
|  |P|S|P|P|P|P|O|P|O|E| M| C|                                             |
|  |-----------------------------------------------------------------------|
|  |0|1|2|3|4|5|6|7|8|9|10|11|12-----------------------------------------35|
|  +-----------------------------------------------------------------------+
|
|
|       Word                Mask        ____                ____
|       Symbol    Bits      Symbol    Description        ______    ____      ______    ___________
|
|       0         400000    LOLXFP    XOFF fill pointer to be sent
|       1         200000    LOLNBS    Need bell sent
|       2         100000    LOLESP    Echo stream pointer to be serviced
|       3         40000     LOLFSP    Fill string pointer to be  serviced
|                                     (SEND ALL)
|       4         20000     LOLSAP    SEND ALL pending
|       5         10000     LOLSTP    Output stopped by XOFF
|       6         4000      LOLSSO    SCNSER  stopped  output  (for  page
|                                     stop)
|       7         2000      LOLNNP    Not-now pointer to be serviced
|       8         1000      LOLREO    Re-eat output after free CRLF
|       9         400       LOLREE    Re-eat echo after free CRLF
|       10        200       LOLPIM    Terminal was opened in packed image
|                                     mode
|       11        100       LOLMIC    Line is controlled by MIC
|       12-35                         Reserved
                                                                 Page 174


   76.4  LDBDCH

|                                  LDBDCH
|
|  +-----------------------------------------------------------------------+
|  |L|L|L|L| |L|L|L|L|L| L| L|          | L| L|   L   |  | L|              |
|  |D|D|D|D| |D|D|D|D|D| D| D|          | D| D|   D   |  | D|              |
|  |L|L|L|L| |L|L|L|L|L| L| L|  LDPVR1  | R| R|   P   |  | R|    LDPLNO    |
|  |I|P|C|F| |8|D|N|F|I| C| B|          | P| C|   V   |  | S|              |
|  |D|P|R|C| |B|L|E|C|M| O| K|          | T| T|   R   |  | H|              |
|  |L|S|P|R| |I|R|C|S|I| M| A|          | Y| Y|   2   |  | C|              |
|  |-----------------------------------------------------------------------|
|  |0|1|2|3|4|5|6|7|8|9|10|11|12------17|18|19|20---24|25|26|27----------35|
|  +-----------------------------------------------------------------------+
|

        Word                Mask        ____                ____
        Symbol    Bits      Symbol    Description        ______    ____      ______    ___________

        0         400000    LDLIDL    Line is idle.   If  clear,  we  are
                                      expecting a transmit interrupt
|       1         200000    LDLPPS    Prompt position has  been  set  for
|                                     this line
|       2         100000    LDLCRP    Control-R  pending  (XMTECH   synch
|                                     plug)
|       3         40000     LDLFCR    Forcing  control-R  (XMTECH   synch
|                                     plug)
|       4         20000               Free bit
|       5         10000     LDL8BI    Eight-bit  input  mode  by  program
|                                     (reserved)
        6         4000      LDLDLR    Suppress dollar sign
        7         2000      LDLNEC    No echo, due to program
        8         1000      LDLFCS    Line inited in full  character  set
                                      mode
        9         400       LDLIMI    Image input
        10        200       LDLCOM    Line is at command level
        11        100       LDLBKA    Break  on  all  characters  (DDTIN,
                                      TTCALL)
        12-17               LDPVR1    4 of 6 bits pointed  to  by  GETLP1
                                      for GETLIN*:
        12        40        LDLSLV    Slave;   this   terminal   may   be
                                      assigned
        13        20        LDLLCT(1) Lowercase translate to upper
        14        10        LDLTAB(2) Line accepts tabs, not spaces
        15        4         LDLLCP    Local copy (no echo)
        16        2         LDLFRM(3) Line accepts FF and  VT  (else  use
                                      LFs)
        17        1         LDLNFC    No  free  carriage  return  at   72
                                      columns
        18        400000    LDRPTY    Pseudo-terminal
        19        200000    LDRCTY    Console terminal
        20-24               LDPVR2    Bits pointed to by LDPVR2:
        20        100000    LDROSU(4) Output suppress (<CTRL/O>)
        21        40000     LDRDSD    Dataset line
        22        20000     LDR274    Line is a 2741
                                                                 Page 175


        23        10000     LDRHLF    Half duplex line (TWX or DC10C)
        24        4000      LDRRMT    Remote non-dataset line
|       25        2000      LDRREM    Obsolete
        26        1000      LDRSHC    Suppress hung check
        27-35               LDPLNO    Pointer to hardware line number


   * Bits for GETLIN UUO:

        Value     Label     Description        _____     _____     ___________

        100       GTLRDY    Bit for  GETLIN  to  indicate  waiting  break
                            character
        20        GTLT37    Model 37 bit (copy of LDLLCT)
        10        GTLT35    Model 35 bit (copy of LDLTAB)
        4         GTLLCP    Local copy (copy of LDLLCP)
        2         GTLXON    XON is true

   (1) LDPLCT   Pointer to lower case bit
   (2) LDPTAB   Pointer to hardware tabs bit
   (3) LDPFRM   Pointer to hardware form feed bit
   (4) LDPOSU   Pointer to output suppression bit
                                                                 Page 176


   76.5  LDBBYT

                                   LDBBYT

|  +-------------------------------------------------------------------------+
|  |L| L |  P | |L|L|L| L| L| L| L| L|  L  | L| L|  L  | L| L| L|            |
|  |D| D |  O | |1|1|1| 1| 1| 1| 1| 1|  D  | 1| 1|  D  | 1| 1| 1|            |
|  |B| P |  H | |L|L|L| L| L| L| L| L|  P  | R| R|  P  | R| R| R|   LDPECK   |
|  |O| F |  P | |F|O|E| I| F| O| E| I|  T  | M| C|  C  | D| D| D|            |
|  |F| L |  O | |P|P|P| P| H| H| H| H|  I  | I| H|  P  | E| E| E|            |
|  |L| C |  S | |D|D|D| D| D| D| D| D|  M  | F| P|  U  | L| C| M|            |
|  |-------------------------------------------------------------------------|
|  |0|1 2|3--5|6|7|8|9|10|11|12|13|14|15-19|20|21|22-24|25|26|27|28--------35|
|  +-------------------------------------------------------------------------+
|
   Bits in          Bit Label or   ____ __          ___ _____ __
   LDBBYT    Value  Byte Pointer   Description   ______    _____  ____ _______   ___________
     0                LDBOFL (1)   -1 if front end for this line is down
    1-2               LDPFLC       Count of number of fillers by class
    3-5               POHPOS       Old horizontal position. Needed for tab
                                   simulation
|    6         4000                Reserved
|    7         2000   L1LFPD       Fill stream 3-part character in progress
|    8         1000   L1LOPD       Output stream 3-part character in progress
|    9          400   L1LEPD       Echo of 3-part character in progress
|   10          200   L1LIPD       Input of 3-part character in progress
|   11          100   L1LFHD       Fill stream 2-part character in progress
|   12           40   L1LOHD       Output stream 2-part character in progress
|   13           20   L1LEHD       Echo of 2-part character in progress
|   14           10   L1LIHD       Input of 2-part character in progress
   15-19              LDPTIM       Timeout on image input
    20                L1RMIF       MIC interlock flag
    21                L1RCHP       Change hardware parameters queue bit
   22-24              LDPCPU       CPU number
    25                L1RDEL (3)   Echo may echo 1 line if deferred
    26                L1RDEC (3)   Echo may echo 1 character if deferred
    27                L1RDEM (2)   Deferred echo bit. Set by SET TERMINAL DEFER
   28-35              LDPECK (4)   Echo check for half-duplex lines

    (1)     400000    L1LOFL       The off-line bit
    (2)               LDPDEM       Pointer to L1RDEM
    (3)               LDPDEB       Pointer to deferred echo bits
    (4)               LDPECK       If FTHDPX (support certain half-duplex
                                   terminals) or FTTRACK (leaves useful
                                   information in locations in COMMON to
                                   aid in debugging crash)
                                                                 Page 177


   76.6  LDBBY2

                                    LDBBY2

   +--------------------------------------------------------------------------+
|  |L|L|L|L|L|L|L|L|L|                 | L| L|               |    L    |      |
|  |2|2|2|2|2|2|2|2|2|                 | 2| 2|               |    D    |      |
|  |L|L|L|L|L|L|L|L|L|      LDPDSC     | R| R|    LDPWID     |    P    |      |
|  |D|C|H|H|H|H|H|S|T|                 | X| E|               |    A    |      |
|  |E|C|D|D|D|D|D|N|A|                 | O| C|               |    P    |      |
|  |L|S|1|2|3|4|5|D|P|                 | N| S|               |    C    |      |
|  |--------------------------------------------------------------------------|
|  |0|1|2|3|4|5|6|7|8|9--------------17|18|19|20-----------27|28-----31|32--35|
   +--------------------------------------------------------------------------+

   Bits in          Bit Label or   ____ __          ___ _____ __
   LDBBY2    Value  Byte Pointer   Description   ______    _____  ____ _______   ___________

     0      400000    L2LDEL       Last character in was a delete
     1      200000    L2LCCS       Last character in was a <CTRL/C>
     2      100000    L2LHD1       XMT done flag seen this character on HDX line
     3       40000    L2LHD2       RCV done flag seen this character on HDX line
     4       20000    L2LHD3       Ignoring RCV interrupts due to echo check
                                   error on HDX line
     5       10000    L2LHD4       Next RCV interrupt will be queued after echo
                                   check
     6        4000    L2LHD5       Receive echo was in fact not same as
                                   transmitted character
     7        2000    L2LSND       Send allowed while busy
     8        1000    L2LTAP       <CTRL/Q> from keyboard turns on L2RXON
    9-17              LDPDSC       Dataset Control Table Index back pointer
    18      400000    L2RXON       XON is true (paper tape input)
    19      200000    L2RECS       Eat command sync
   20-27              LDPWID       Width of terminal carriage
|  28-31              LDPAPC  (1)  Asynchronous port characteristic (type)
|  32-35                           Free field
|
|  (1) Fields in LDPAPC:
|           Value     Symbol       Description            _____     ______       ___________
|
|             0       APCUNK       Unknown type or not yet set up
|             1       APCHWD       Hardwired terminal
|             2       APCDSD       Dataset line
|             3       APCTSN       Reserved
|             4       APCGAN       Reserved
|             5       APCADL       Autodialler
|             6       APCMCM       Reserved
|             7       APCNRT       DECnet NRTSER line
|            10       APCLAT       LAT-11 terminal
                                                                 Page 178


|  76.7  LDBLSW
|
|                                    LDBLSW
|
|  +-----------------------------------------------------------------------+
|  |                  |                |                 |                 |
|  |      LDPLNB      |     LDPSTB     |      LDPLNC     |     LDPSTC      |
|  |                  |                |                 |                 |
|  |-----------------------------------------------------------------------|
|  |0----------------8|9-------------17|18-------------26|27-------------35|
|  +-----------------------------------------------------------------------+
|
|  Bits in          Bit Label or   ____ __          ___ _____ __
|  LDBLSW    Value  Byte Pointer   Description   ______    _____  ____ _______   ___________
|
|   0-8               LDPLNB       Page or "forms" length (base value)
|   9-17              LDPSTB       Stop (after n lines) value (base)
|  18-26              LDPLNC       Page or "forms" counter (counted up to 0)
|   18       400000   LPRLC0       Length counter overflowed flag
|  27-35              LDPSTC       Stop counter (counted up to 0)
|   27          400   LPRSC0       Stop counter overflowed flag
                                                                 Page 179


   76.8  LDBPAG

                                     LDBPAG

   +-------------------------------------------------------------------------+
|  |L|L|L|L|L|L|L| |L|L| L| L| L| L| L|        |              |              |
|  |P|P|P|P|P|P|P| |P|P| P| P| P| P| P|        |              |              |
|  |L|L|L|L|L|L|L| |L|L| L| L| L| L| P|        |    LDPPFF    |    LDPACR    |
|  |I|P|X|A|B|S|S| |P|S| S| F| S| F| F|        |              |              |
|  |R|A|O|L|L|L|A| |O|T| S| F| B| F| F|        |              |              |
|  |M|G|F|T|K|F|P| |K|P| T| S| L| F| H|        |              |              |
|  |-------------------------------------------------------------------------|
|  |0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15----17|18----------26|27----------35|
   +-------------------------------------------------------------------------+

   Bits in          Bit Label or   ____ __          ___ _____ __
   LDBPAG    Value  Byte Pointer   Description   ______    _____  ____ _______   ___________

     0      400000    LPLIRM       Terminal not heard from this second
     1      200000    LPLPAG       Set terminal page command was executed
     2      100000    LPLXOF       Sent XOFF, always send XON later
     3       40000    LPLALT (1)   Altmode conversion bit
     4       20000    LPLBLK       Suppress blank lines
     5       10000    LPLSLF       Suppress line feeds
|   6-7                            Reserved
     8        1000    LPLPOK       Forcing XMIT start using TOPOKE
|    9         400    LPLSTP       Automatically stop every (LDPSTB) lines
|   10         200    LPLSST       Don't clear page counter for free on XON
|   11         100    LPLFFS       Stop on form feeds (reserved)
|   12          40    LPLSBL       Ring bell on auto-stop
|   13          20    LPLFFF       Simulate form feed with linefeeds
|   14          10    LPLFFH       Simulate form feed with clear-screen
|  15-17                           Reserved
|  18-26              LDPPFF       Number LFs remaining on VT and FF simulation
|  27-35              LDPACR       Auto-CRLF column counter

   (1) LDPALT  Pointer to altmode conversion bit
                                                                 Page 180


   76.9  LDBISR

                                    LDBISR

   +------------------------------------------------------------------------+
|  | |@| Index   | Section Number      | Address of Service Routine         |
|  |------------------------------------------------------------------------|
|  |0|1|2-------5|6------------------17|18--------------------------------35|
|  +------------------------------------------------------------------------+
|
|
|       Bits      Description        ____      ___________
|
|       0         Clear for global indirect word
|       1         Indirecion (clear)
|       2-5       Index register (T1)
|       6-17      Section number of routine
|       18-35     Address of interrupt service routine
|
                                                                 Page 181


|  76.10  LDBISB
|
|
|                                   LDBISB
|
|  +------------------------------------------------------------------------+
|  |L|  L  |  L  |L| L| L| L|                                               |
|  |I|  D  |  D  |D| D| D| D|                                               |
|  |L|  P  |  P  |P| P| P| P|                                               |
|  |C|  T  |  R  |A| D| R| T|                                               |
|  |F|  S  |  S  |P| B| T| D|                                               |
|  |E|  P  |  P  |L| K| C| Y|                                               |
|  |------------------------------------------------------------------------|
|  |0|1---4|5---8|9|10|11|12|13-------------------------------------------35|
|  +------------------------------------------------------------------------+
|
|  Bits    Value     Byte Pointer   Description   ____    _____     ____ _______   ___________

     0                 LILCFE      1 if front end is clever, 0 if dump
    1-4                LDPTSP (1)  Transmit speed
    5-8                LDPRSP (1)  Receive speed
     9                 LDPAPL      APL mode
    10                 LDPDBK      Line has debreak
    11                 LDPRTC      <CTRL/R>/<CTRL/T> compatibility
    12                 LDPTDY      User said SET TERMINAL TIDY
   13-35                           Reserved
|           400000     LILCFE      Clever front end
|           360000     LILTSP      Transmit speed
|           017000     LILRSP      Receive speed
|           000400     LILAPL      APL mode
|           000200     LILDBK      Line has debreak
|           000100     LILRTC      <CTRL/R>/<CTRL/T> passed to program
|           000040     LILTDY      Do not expand output
|
|  (1) LDPSPD Both speeds (If FTCAFE, support the DC76)
                                                                 Page 182


   76.11  LDBTTW

|                                     LDBTTW
|
|  +--------------------------------------------------------------------------+
|  |ANF|NRT|LAT|USE|Reserved |FSP|VDC|IDC|Res.|   LCH  |  PRP |  TTT          |
|  |--------------------------------------------------------------------------|
|  | 0 | 1 | 2 | 3 |4-------8| 9 | 10| 11|  12| 13---20|21--28|29----------35 |
|  +--------------------------------------------------------------------------+
|
|
|       Bits      Symbol    Description        ____      ______    ___________
|
|       0         LTLANF    ANF-10 network virtual terminal
|       1         LTLNRT    DECnet NRT or CTERM virtual terminal
|       2         LTLLAT    LAT server terminal line
|       3         LTLUSE    Allocatable LDB in use (always on  for  local
|                           LDBs, such as the CTY)
|       4-8                 Reserved
|       9         LDLFSP    Line is a full-SCNSER PTY
|       10        LDLVDC    Visible deletion of character has happened
|       11        LDLIDC    Invisible deletion of character has happened
|       12                  Reserved
|       13-20     LDPLCH    Last character read by COMCON
|       21-28     LDPPRP    Position of prompt
|       29-35     LDPTTT    Terminal type, as specified by SET  TTY  TYPE
|                           command
                                                                 Page 183


   76.12  LDBREM+0

                                     LDBREM+0

   +------------------------------------------------------------------------+
   | | | | | | | | | | |  |  |  |  |  |  |  |  |  |  |                      |
   | | | | | | | | | | |  |  |  |  |  |  |  |  |  |  |         LDPSTS       |
   | | | | | | | | | | |  |  |  |  |  |  |  |  |  |  |                      |
   |------------------------------------------------------------------------|
   |0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20------------------35|
   +------------------------------------------------------------------------+


   Bits    Value  Byte Pointer   Description   ____    _____  ____ _______   ___________

     0      400000    LRLVTM (1)   If set, then this is a "local terminal"
                                   that has been "SET HOSTed" to another host
     1      200000    LRLCON (1)   If set, then terminal is "connected"
                                   (NCL connect sequence is complete)
     2      100000    LRLSTS (1)   If set, then a "STATUS" message is required.
                                   Same bit, but different messages for
                                   VTM & MCR
     3       40000    LRLSCH (2)   If set, then a "CHARACTERISTICS" message is
                                   required (works like LRLSTS)
     4       20000    LRLDST (2)   A "delayed" status message is required (used
                                   to optimize traffic. Has priority over
                                   LRLSTS)
     5       10000    LRLQED (2)   If set, then VTM line has been "queued" by
                                   VTMENQ
     3       40000    LRLTTO       LDPCHR has the next character to output
     4       20000    LRLTTW       Line is waiting for a data request
     5       10000    LRLSCG       <CTRL/O> action requested (send
                                   character gobbler)
     6        4000    LRLEPW       Echo pipeline marker waiting to go
     7        2000    LRLIMO       Indicates that remote is in image mode output
     8        1000    LRLADR       Use of the auto-dialer has been requested
     9         400    LRLXOF       An XOFF (<CTRL/S>) message has been
                                   requested
    10         200    LRLCHR       This terminal has received at least 1
                                   CHARACTERISTICS message
    11         100    LRLDTR       Ring/carrier bit (set and cleared by STATUS
                                   messages from the -11)
    12          40    LRLDSR       The -10's copy of what it thinks LRLDTR
                                   should be
    13          20    LRLDSL       This line is a dataset line
    14          10    LRLATO       Indicates this line possesses the auto-baud
                                   capability (set or cleared by the attribute
                                   field of the CONNECT message)
    15           4    LRLADL       Indicates this line possesses an auto-dialer
                                   (also set by CONNECT message)
|   16           2                 Free
|   17           1                 Free
    18      400000    LRRSHC       The line at the other end has "SET HOST
                                   capability." (it can respond to
                                   DISCONNECT messages)
                                                                 Page 184


   (1)  Bits used by both NETVTM (local SET HOST) and NETMCR (remote terminals)
   (2)  Bits used only by NETVTM (local SET HOST)
   (3)  Bits used only by NETMCR ("normal" remote terminals, like DN87)
                                                                 Page 185


   76.13  LDBREM+2

                                     LDBREM+2

   +--------------------------------------------------------------------------+
   |                         |                           |                    |
   |          LDPSLA         |          LDPDLA           |       LDPRLN       |
   |                         |                           |                    |
   |--------------------------------------------------------------------------|
   |0----------------------12|13-----------------------25|26----------------35|
   +--------------------------------------------------------------------------+

   Bits      Byte Pointer   Description   ____      ____ _______   ___________

    0-12         LDPSLA       Our source link address
   13-25         LDPDLA       Our destination link address
   26-35         LDPRLN       Line number at remote station
                                                                 Page 186


   76.14  LDBREM+3

                                     LDBREM+3

   +--------------------------------------------------------------------------+
   |   L   |                 |                  |                             |
   |   D   |                 |                  |                             |
   |   P   |      LDPDRQ     |      LDPEPM      |           LDPRNN            |
   |   E   |                 |                  |           LDPRNF            |
   |   L   |                 |                  |                             |
   |   E   |                 |                  |                             |
   |--------------------------------------------------------------------------|
   |0-----3|4--------------11|12--------------19|20-------------------------35|
   +--------------------------------------------------------------------------+

   Bits    Value  Byte Pointer   Description   ____    _____  ____ _______   ___________

    0-3               LDPELE       2741 element number
    4-11              LDPDRQ       Number of data requests from remote
   12-19              LDPEPM       Serial number of last EPM from remote
   20-35              LDPRNN (U)   Number of node owning this TTY
   20-35              LDPRNF (F)   Same as LDPRNN except indexed by "F"

                                                                 Page 187


   76.15  LDBREM+4 (MCR)

                                   LDBREM+4
                                    (MCR)

   +--------------------------------------------------------------------+
   |                |                |                |                 |
   |     LDPCHR     |     LDPADT     |     LDPJOB     |                 |
   |                |                |                |                 |
   |--------------------------------------------------------------------|
   |0--------------8|9-------------17|18------------26|27-------------35|
   +--------------------------------------------------------------------+

   Bits    Value  Byte Pointer   Description   ____    _____  ____ _______   ___________

    0-8               LDPCHR       If LRLTTO=1, contains the next output
                                   character
    9-17              LDPADT       Auto-disconnect timer
   18-26              LDPJOB       Pointer to job (only for connects)
   27-35                           Unused
                                                                 Page 188


   76.16  LDBREM+4 (VTM)

                                   LDBREM+4
                                    (VTM)

   +----------------------------------------------------------------------+
   |                                  |                                   |
   |               LDPDST             |               LDBVTQ              |
   |                                  |                                   |
   |----------------------------------------------------------------------|
   |0-------------------------------17|18-------------------------------35|
   +----------------------------------------------------------------------+

   Bits           Byte Pointer   Description   ____           ____ _______   ___________

    0-17              LDPDST       Delayed-status-message for VTM
   18-35              LDBVTQ       VTM-queue-link

                                                                 Page 189


   76.17  LDBTTD

                                   LDBTTD

   +----------------------------------------------------------------------+
   |                                                                      |
   | Line information for support of RSX-20F terminals                    |
   |                                                                      |
   |----------------------------------------------------------------------|
   |0-------------------------------------------------------------------35|
   +----------------------------------------------------------------------+

   Bits    Value  Byte Pointer   Description   ____    _____  ____ _______   ___________

            740000                 Remembered transmit speed
             36000                 Remembered receive speed
              1000     LTLXOF      Sent XOFF to -20F
               400     LTLRBS      Remote bit sent for -20F datasets
               200     LTLCTO      Need to send flush output to -20F
                                                                 Page 190


   76.18  LDBMIC

                                   LDBMIC

   +----------------------------------------------------------------------+
   | | | | | | | | | | |  |  |  |  |  |           |           |           |
   | | | | | | | | | | |  |  |  |  |  |           |           |           |
   | | | | | | | | | | |  |  |  |  |  |           |           |           |
   | | | | | | | | | | |  |  |  |  |  |           |           |           |
   | | | | | | | | | | |  |  |  |  |  |           |           |           |
   | | | | | | | | | | |  |  |  |  |  |           |           |           |
   |----------------------------------------------------------------------|
   |0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15-------21|22-------28|29-------35|
   +----------------------------------------------------------------------+

   Bits    Value  Byte Pointer   Description   ____    _____  ____ _______   ___________

     0      400000    LDLCHK       Set if any bit 1-14 set
|    1      200000    LDLMCC       Set if <CTRL/C> has been typed
|    2      100000    LDLOPC       Set if operator character seen in column 1
|    3       40000    LDLERC       Set if error character seen in column 1
|    4       20000    LDLMCP       Set if <CTRL/P> has been typed
|    5       10000    LDLMCB       Set if <CTRL/B> has been typed
|    6        4000    LDLSIL       Silence this line
|    7        2000    LDLMMM       Line in monitor mode
|    8        1000    LDLMTI       Line in user mode and TI wait or in
|                                  monitor mode and can accept commands
|    9         400    LDLCL1       Column 1 bit
|   10         200    LDLMCA       Set if <CTRL/A> has been typed (abort)
|   11         100    LDLRSP       Error response
|   12          40    LDLRSY       Response code sync
|   13          20    LDLLOG       MIC is logging
    14                             Reserved
   15-21                           ASCII character to be treated as operator
                                   character
   22-28                           ASCII character to be treated as error
                                   character
   29-35                           MIC master job numbers -- allows more
                                   than one MIC to run
                                                                 Page 191


|  76.19  LDBBKM
|
|                                    LDBBKM
|
|  +-------------------------------------------------------------------------+
|  |0 |@ | Index   |   Section number  |          Break Mask Addr.           |
|  |-------------------------------------------------------------------------|
|  |0 |1 |2-------5|6----------------17|18---------------------------------35|
|  +-------------------------------------------------------------------------+
|
|  Bit               Meaning   ___               _______
|
|  0                 Clear (for global indirect word)
|  1                 Indirect addressing (clear)
|  2-5               Index value (T1)
|  6-17              Section number for bit mask (MCSEC1)
|  18-35             Pointer to four-word bit mask,
|                    indexed by character
|
                                                                 Page 192


|  76.20  LDBBKB
|
|
|                                    LDBBKB
|
|  +-------------------------------------------------------------------------+
|  |  | Reserved  | Field Width | Reserved                                   |
|  |-------------------------------------------------------------------------|
|  |0 |1---------2|3----------11|12----------------------------------------35|
|  +-------------------------------------------------------------------------+
|
|  Bits    Symbol     Meaning   ____    ______     _______
|
|  0      LDLBKM     Break masks are enabled.
|  1-2               Reserved
|  3-11   LDPFWD     Field width
|  12-35             Reserved
                                                                 Page 193


   77.0  LINTAB -- LINE TABLE


   Description:   Contains the address of  each  Line  Data  Block.   One
                  entry per line (including scanner, CTY, and PTY lines.)
                  Indexed by line number.

   Defined:       COMDEV

   Used in:       CLOCK1, COMCON, COMMON, CPNSER, D76INT, DL0INT  DL1INT,
                  DTESER,  ERRCON,  MSGSER,  NETMCR, ONCE, PTYSER SCNSER,
                  SYSINI, TTDINT, UUOCON

|          +-------------------------------------------------------+
|  Line 0  |                 Fullword LDB address                  |
|          |-------------------------------------------------------|
|  Line 1  |                                                       |
|          |-------------------------------------------------------|
|  Line 2  |                                                       |
|          |-------------------------------------------------------|
|      -   |                                                       |
|      -   |                                                       |
|      -   |                                                       |
|          |                                                       |
|          |                                                       |
|          |-------------------------------------------------------|
|  Line N  |                                                       |
|          +-------------------------------------------------------+
|           0                                                   35
                                                                 Page 194


   78.0  LOGTAB -- LOGIN JBTTAB POINTER TABLE


   Description:   Table of pointers to those  job  tables  in  which  the
                  LOGIN UUO stores statistics.

   Defined in:    UUOCON (local symbol)

   Used by:       UUOCON


   +-------------------------------------+
   |    AC J     |       JBTPPN##        | ; PPN
   |-------------------------------------|
   |    AC J     |       JBTPRV##        | ; Privilege bits
   |-------------------------------------|
   |    AC W     |        PDNM1##        | ; 1st half user name
   |-------------------------------------|
   |    AC W     |        PDNM2##        | ; 2nd half user name
   |-------------------------------------|
   |    AC W     |        PDCNO##        | ; Charge no. this job
   +-------------------------------------+
     0         17  18                 35

   Notes:

        1.  LOGIN UUO used only by LOGIN and LOGOUT programs.

        2.  User program does:
                   LOGIN AC,
                       or
                   CALLI AC,15
            where AC contains:
                   XWD no.-of-entries,location
            which is a list of job statistics to be stored in the
            monitor tables listed in LOGTAB.

                                                                 Page 195


   79.0  LVDTBL -- LEVEL D DISK PARAMETER TABLE


   Description:   Contains parameters for  the  Level  D  disk  routines.
                  Each entry accessed by its own label.

   Defined in:    COMMOD

   Used by:       CLOCK1, COMCON, COMMON, FILFND, FILIO, FILUUO,  ONCMOD,
                  REFSTR, SCNSER, SYSINI, UUOCON

   GETTAB Table:  .GTLVD (16)


            +---------------------------------------------------------------+
   MFDPPN   | PPN for MFDS  [1,1]                                           |
            |---------------------------------------------------------------|
   SYSPPN   | PPN for device SYS [1,4]                                      |
            |---------------------------------------------------------------|
   FSFPPN   | PPN for FAILSAFE [1,2]                                        |
            |---------------------------------------------------------------|
   HELPPN   | PPN for HELP and SYSTAT [2,5]                                 |
            |---------------------------------------------------------------|
   PNTPPN   | PPN for printer spooling [3,3]                                |
            |---------------------------------------------------------------|
   SYSPPB   | First PPB in system  | PPB to start scan for obtainable NMB   |
            |---------------------------------------------------------------|
   SYSSTR   | First STR in system  | Index in structure data block for      |
            |                      | pointer to next structure data block   |
            |---------------------------------------------------------------|
   SYSUNI   | First UDB in system  | Index in unit data block for pointer   |
            |                      | to next unit data block                |
            |---------------------------------------------------------------|
   SWPUNI   | First swapping UDB   | Index in unit data block for pointer   |
            |                      | to next swapping unit data block       |
            |---------------------------------------------------------------|
   CORNUM   | Number of 4 word blocks                                       |
            |---------------------------------------------------------------|
   STNPRT   | Standard privilege   |                                        |
            |---------------------------------------------------------------|
   UFDPRT   | Standard             |                                        |
            | UFD privilege        |                                        |
            |---------------------------------------------------------------|
   MBFNUM   | Number of monitor buffers                                     |
            |---------------------------------------------------------------|
   QUESTR   | SIXBIT name of structure for queuing programs                 |
            |---------------------------------------------------------------|
   CRUPPN   | UFD for dumping crashes                                       |
            |---------------------------------------------------------------|
                                                                 Page 196


            |---------------------------------------------------------------|
   SFDLVL   | Number of nested SFD levels allowed                           |
            |---------------------------------------------------------------|
   SPLPRT   | Protection for spooled output |                               |
            |---------------------------------------------------------------|
   SYSPRT   | Protection for most system files |                            |
            |---------------------------------------------------------------|
   SYSPRY   | Protection for system .SYS files |                            |
            |---------------------------------------------------------------|
   MUSTMX   | Negative maximum extended RIB argument for USETI              |
            |---------------------------------------------------------------|
   MAXTRN   | Maximum number of blocks to transfer in one operation         |
            |---------------------------------------------------------------|
   XSYPPN   | PPN of experimental system (NEW)   [1,5]                      |
            |---------------------------------------------------------------|
   OLDPPN   | PPN of old system (OLD) [1,3]                                 |
            |---------------------------------------------------------------|
   UMDPPN   | User-mode diagnostics PPN  [6,10]                             |
            |---------------------------------------------------------------|
    NUMBF   | Default number of disk buffers                                |
            |---------------------------------------------------------------|
   MAXSWP   | Maximum number of units in active swapping list               |
            |---------------------------------------------------------------|
   ALGPPN   | ALGOL library PPN  [5,4]                                      |
            |---------------------------------------------------------------|
   BLIPPN   | BLISS library PPN [5,5]                                       |
            |---------------------------------------------------------------|
   FORPPN   | FORTRAN library PPN [5,6]                                     |
            |---------------------------------------------------------------|
   MACPPN   | MACRO library PPN [5,7]                                       |
            |---------------------------------------------------------------|
   UNVPPN   | Universal library PPN [5,17]                                  |
            |---------------------------------------------------------------|
   PUBPPN   | User-maintained SYS [1,6]                                     |
            |---------------------------------------------------------------|
   TEDPPN   | Text editor library PPN  [5,10]                               |
            |---------------------------------------------------------------|
   RELPPN   | REL file library PPN [5,11]                                   |
            |---------------------------------------------------------------|
   RNOPPN   | RUNOFF library PPN [5,11]                                     |
            |---------------------------------------------------------------|
   SNOPPN   | SNOBOL library PPN [5,13]                                     |
            |---------------------------------------------------------------|
   DOCPPN   | DOC file library PPN [5,14]                                   |
            |---------------------------------------------------------------|
   FAIPPN   | FAIL library PPN [5,15]                                       |
            |---------------------------------------------------------------|
   MUSPPN   | Music library PPN [5,16]                                      |
            |---------------------------------------------------------------|
   DECPPN   | Library for DEC-distributed software PPN (DEC) [10,7]         |
            |---------------------------------------------------------------|
                                                                 Page 197


            |---------------------------------------------------------------|
   TABSWP   | Pointer to active swap list                                   |
            |---------------------------------------------------------------|
   BASPPN   | BASIC library PPN [5,1]                                       |
            |---------------------------------------------------------------|
   COBPPN   | COBOL library PPN [5,2]                                       |
            |---------------------------------------------------------------|
   MXIPPN   | PDP-11 library PPN [5,3]                                      |
            |---------------------------------------------------------------|
   NELPPN   | NELIAC library PPN [5,20]                                     |
            |---------------------------------------------------------------|
   DMPPPN   | Dump library PPN [5,21]                                       |
            |---------------------------------------------------------------|
   POPPPN   | POP2 library PPN [5,22]                                       |
            |---------------------------------------------------------------|
   TSTPPN   | Test library PPN [5,23]                                       |
            |---------------------------------------------------------------|
   ALLOVR   | If non-zero, log soft errors if recover from overrun on 1 try |
            |---------------------------------------------------------------|
   MASERR   | DAEMON's pointers to massbuss error locations                 |
            |---------------------------------------------------------------|
   BATCHN   | DAEMON's pointers to BAT block and channel error info         |
            |---------------------------------------------------------------|
   DBSPPN   | DBMS library PPN [5,24]                                       |
            |---------------------------------------------------------------|
   EXPCHN   | Offset of the expected channel terminal word in CHN           |
            |---------------------------------------------------------------|
   MICPPN   | MIC library PPN [5,25]                                        |
            |---------------------------------------------------------------|
   TPSPPN   | Text processing system library PPN [5,26]                     |
            |---------------------------------------------------------------|
   CTLPPN   | CTL file library PPN [5,27]                                   |
            |---------------------------------------------------------------|
   GAMPPN   | Game library PPN [5,30]                                       |
            |---------------------------------------------------------------|
   ACTPPN   | System accounting library PPN [1,7]                           |
            |---------------------------------------------------------------|
   APLPPN   | APL library PPN [5,31]                                        |
            |---------------------------------------------------------------|
   RIBECT   | RIB error threshold                                           |
            |---------------------------------------------------------------|
   RIBTOT   | Total RIB errors                                              |
            |---------------------------------------------------------------|
   SYSDOR   | Dormant access table pointer                                  |
            |---------------------------------------------------------------|
   SYSCOR   | Free core pointer                                             |
            |---------------------------------------------------------------|
   INTFNC   | Number of times front end (RSX20F) had disk                   |
            |---------------------------------------------------------------|
   D60PPN   | DAS60 log file area [5,32]                                    |
            |---------------------------------------------------------------|
   ERTLOC   | Starting location of the queue table for DAEMON error reports |
            |---------------------------------------------------------------|
                                                                 Page 198


|           |---------------------------------------------------------------|
|  ERTPT1   | Starting pointer for DAEMON error extract                     |
|           |---------------------------------------------------------------|
|  ERTPT2   | Starting pointer for DAEMON error insert                      |
|           |---------------------------------------------------------------|
|  ERTLTH   | Length of DAEMON error table                                  |
|           |---------------------------------------------------------------|
|  ERTCDA   | Offset of UNICDA in UDB                                       |
|           |---------------------------------------------------------------|
|  ERTDES   | Offset of UNIDES in UDB                                       |
|           |---------------------------------------------------------------|
|  SYSPTR   | Pointer to in-core copies of retrieval ptrs                   |
|           |---------------------------------------------------------------|
|  MAXSSL   | Max. # in system search list  | MAX # in job search list      |
|           |---------------------------------------------------------------|
|  ERTSLB   | Offset of UINSLB into UDBs                                    |
|           |---------------------------------------------------------------|
|  UTPPPN   | UETP area                                                     |
|           |---------------------------------------------------------------|
|  INIPPN   | Initialization area [5,34]                                    |
|           |---------------------------------------------------------------|
|  ERPSIZ   | Length of entry in Daemon error report table                  |
|           |---------------------------------------------------------------|
|  SYSKON   | Core addr of first KDB     |   Offset in KDB of next KDB      |
|           |---------------------------------------------------------------|
|  NUMLBF   |           Default number of large disk buffers                |
|           |---------------------------------------------------------------|
|           |             Offset into DEVUNI for SYSTAT                     |
|           |---------------------------------------------------------------|
|  %LDCSZ   |             Size of disk cache, in blocks                     |
|           |---------------------------------------------------------------|
|  %LDRDC   |                Monitor cache read calls                       |
|           |---------------------------------------------------------------|
|  %LDRDH   |                Monitor cache read hits                        |
|           |---------------------------------------------------------------|
|  %LDWRC   |                Monitor cache write calls                      |
|           |---------------------------------------------------------------|
|  %LDWRH   |                Monitor cache write hits                       |
|           |---------------------------------------------------------------|
|  %LDHSF   |                     CSHFND calls                              |
|           |---------------------------------------------------------------|
|  %LDHSC   |            CSHFND collisions in hash table                    |
|           |---------------------------------------------------------------|
|  %LDHSL   |                Length of cache hash table                     |
|           |---------------------------------------------------------------|
|  %LDHST   |                 Addr of cache hash table                      |
|           |---------------------------------------------------------------|
|  %LDCHD   |                 Addr of cache list header                     |
|           |---------------------------------------------------------------|
|           |          Offset for spooled file name                         |
|           |---------------------------------------------------------------|
|           |          Offset for spooled parameter block pointer           |
|           |---------------------------------------------------------------|
|           |          Offset for I/O block number                          |
|           |---------------------------------------------------------------|
                                                                 Page 199


|           |          Offset to retrieval/ALL blocks                       |
|           |---------------------------------------------------------------|
|           |          Offset to NMB for father SFD                         |
|           |---------------------------------------------------------------|
|  UPSPPN   |               Area for mailers (UPS) [5,35]                   |
|           |          PPN for library for mailers                          |
|           |---------------------------------------------------------------|
|           |     Address of pointer to first system error block            |
|           |---------------------------------------------------------------|
|  ROODRB   |          Number of times we ran out of DRBs                   |
|           +---------------------------------------------------------------+

   Note:

   If the right half of SYSPPB = 0, the core grabber starts over  at  the
   beginning of the PPB list.
                                                                 Page 200


   80.0  MAGTAPE CONTROLLER DATA BLOCK

|
|  Description:   Contains controller-dependent information.  The Magtape
|                 KDB  is  a  prototype  data  block  used  by  AUTCON to
|                 configure the tape controllers at  system  startup  and
|                 when  they  come  on-line.   Tags for magtape KDB's are
|                 MTxKDB, where x is the controller number (A, B, C,...).
|                 Tags for the CONSO instructions are MTxINT.

                  See also:  Magtape Device Data Block, Magtape Unit Data
                  Block

   Defined in:    COMDEV

   Used by:       AUTCON


           +---------------------------------------------------+
   TKBCSO  |                   CONSO MTxS,0                    |
           |---------------------------------------------------|
           |                      JRST .-1                     |
           |---------------------------------------------------|
           |                    JSR MT'x'SAV                   |
           |---------------------------------------------------|
           |                    JSP W,TAPINT                   |
           |---------------------------------------------------|
   TKBNAM  |              SIXBIT Controller Name               |
           |---------------------------------------------------|
   TKBCNT  |     Number of records done on this operation      |
           |---------------------------------------------------|
   TKBKDB  |       Link to next magtape KDB, 0 if none         |
           |---------------------------------------------------|
   TKBIUN  |            Initial Unit AOBJN Pointer             |
           |---------------------------------------------------|
   TKBCUN  |            Current Unit AOBJN Pointer             |
           |---------------------------------------------------|
   TKBDSP  |               Controller dispatch                 |
           |---------------------------------------------------|
   TKBSTS  | Controller status     | Consecutive ops remaining |
           |---------------------------------------------------|
   TKBICP  |              Pointer to ICPC/CHL info             |
           |---------------------------------------------------|
   TKBTIM  |            Timer for spacing operations           |
           |---------------------------------------------------|
   TKBCDB  |           Pointer to channel (0 if TM11A)         |
           |---------------------------------------------------|
   TKBJOB  |           Job # of maintenance mode owner         |
           |---------------------------------------------------|
   TKBCCL  |                Channel command list               |
           |                   (5 words long)                  |
           |---------------------------------------------------|
   TKBERB  |               IORB for error recovery             |
           |                   (4 words long)                  |
           |---------------------------------------------------|
                                                                 Page 201


           |---------------------------------------------------|
   TKBFCT  |  Fairness count for queued I/O                    |
           |---------------------------------------------------|
   TT2CO1  | CONO MTxS,(T1)     (TM02 only)                    |
           |---------------------------------------------------|
   TT2CI2  | CONI MTxS,T2       (TM02 only)                    |
           |---------------------------------------------------|
   TT2CO3  | CONO MTxS,(T3)     (TM02 only)                    |
           |---------------------------------------------------|
   TT2DI2  | DATAI MTxS,T2      (TM02 only)                    |
           |---------------------------------------------------|
   TT2DO2  | DATAO MTxS,T2      (TM02 only)                    |
           |---------------------------------------------------|
   TKBUDB  |        Pointers to units on this Controller       |
           |          (8 words long, found by TKBIUN)          |
           +---------------------------------------------------+

   Dispatch offsets for TKBDSP:

   Value     Symbol        Meaning   _____     ______        _______

   0         TPKINI        Initialization code
   1         TPKRES        Reset active transfer
   2         TPKSIO        Start I/O
   3         TPKINT        Interrupt routine
   4         TPKCMD        Set device command in list (DX10 only)
   5         TPKIDL        Set device idle
   6         TPKONL        Skip if controller online
   7         TPKSCH        Cause schedule cycle

   TKBSTS Bits:
   (These bits are also defined for TUBSTS in the UDB)

   Bit       Symbol        Meaning   ___       ______        _______

   12        TKSMNT        Controller is in maintenance mode
   13        TKSSIL        Request silence about offline condition
   14        TKSSCH        Requested scheduled interrupt
   15        TKSSTD        Started
   16        TKSSEL        Selected
   17        TKSOFL        Offline
                                                                 Page 202


   81.0  MAGTAPE UNIT DATA BLOCK

|
|  Description:   Tape  unit  dependent  information.   The  UDB   is   a
|                 prototype  data block that contains information used by
|                 AUTCON to configure tape drives at system  startup  and
|                 when  they  come on-line.  UDBs can be found by tracing
|                 them  through  the  pointers  in  their  KDB's  (TKBUDB
|                 pointed   to   by   TKBIUN)   or   by  tags  formed  by
|                 concatenating "..U" with  controller  number  and  unit
|                 number,  for  example,  ..U12 for the third unit on the
|                 second controller (MTB2).

                  See  also:   Magtape   Device   Data   Block,   Magtape
                  Kontroller Data Block

   Defined in:    COMDEV

   Used by:       COMMON, TAPUUO

           +---------------------------------------------------+
   TUBNAM  |                  SIXBIT Unit Name                 |
           |---------------------------------------------------|
   TUBKDB  |                         |  Pointer to controller  |
           |---------------------------------------------------|
   TUBADR  |                         | Unit addr on controller |
           |---------------------------------------------------|
   TUBAKA  |  Current unit address   |   Current controller    |
           |---------------------------------------------------|
   TUBDDB  |                Pointer to DDBs                    |
           |---------------------------------------------------|
   TUBCUR  |             Pointer to current DDB                |
           |---------------------------------------------------|
   TUBSTS* |       Unit status       |   Configuration info    | TUBCNF
           |---------------------------------------------------|
   TUBQUE  |             Queue pointer for IORBs               |
           |---------------------------------------------------|
   TUBERR  |                Error recovery info                |
           |---------------------------------------------------|
   TUBRID  |                      Reelid                       |
           |---------------------------------------------------|
   TUBFIL  |               # of files from BOT                 |
           |---------------------------------------------------|
   TUBREC  |              # of records from EOF                |
           |---------------------------------------------------|
   TUBCRD  |         # of characters read since unload         |
           |---------------------------------------------------|
   TUBCWR  |       # of characters written since unload        |
           |---------------------------------------------------|
   TUBSRE  |              # of soft read errors                |
           |---------------------------------------------------|
   TUBHRE  |              # of hard read errors                |
           |---------------------------------------------------|
                                                                 Page 203


           |---------------------------------------------------|
   TUBSWE  |              # of soft write errors               |
           |---------------------------------------------------|
   TUBHWE  |              # of hard write errors               |
           |---------------------------------------------------|
   TUBTME  |          Total media errors since unload          |
           |---------------------------------------------------|
   TUBTDE  |          Total device errors since reload         |
           |---------------------------------------------------|
   TUBTUN  |                  Total unloads                    |
           |---------------------------------------------------|
   TUBTRY  |              Retries to resolve error             |
           |---------------------------------------------------|
   TUBCCR  |           Character count on last record          |
           |---------------------------------------------------|
           |           File           |         Record         |
   TUBPBE  |               position before error               |
           |---------------------------------------------------|
   TUBFES  |               Final error state word              |
           |---------------------------------------------------|
   TUBCHR  |             Statistics for MTCHR. UUO             |
           |---------------------------------------------------|
   TUBDDA  |               Shadow area for DAEMON              |
           |                12 (octal) words                   | TUBDDE
           |---------------------------------------------------|
   TUBPGM  |   Program name on error                           |
           |---------------------------------------------------|
   TUBUID  |   PPN using drive on error                        |
           |---------------------------------------------------|
   TUBCNI  |            Error status for next record           | FTRDBA
           |---------------------------------------------------|
   TUBMSG  | Label message length | Label message function code| FTTLAB
           |---------------------------------------------------|
   TUBPHY  |             Physical name for label PCS           | FTTLAB
           |---------------------------------------------------|
   TUBLBL  |                 Label status word                 | FTTLAB
           |---------------------------------------------------|
   TUBRFM  |         Record format (for labels only)           | FTTLAB
           |---------------------------------------------------|
   TUBRCC  |          Record size (for labels only)            | FTTLAB
           |---------------------------------------------------|
   TUBBKL  |           Block size (for lables only)            | FTTLAB
           |---------------------------------------------------|
   TUBEXP  |        Expiration date (for labels only)          | FTTLAB
           |---------------------------------------------------|
   TUBPRT  |           Protection (for labels only)            | FTTLAB
           +---------------------------------------------------+
                                                                 Page 204


   TUBSTS Bits:

   Bit Symbol Meaning   ___ ______ _______

   0         TUSNS         Do not schedule this unit (sign bit)
   1         TUSBOT        Beginning of tape
   2         TUSWTL        Write locked
   3         TUSREW        Tape rewinding
   12        TKSMNT        Controller is in maint mode
                           (also in TKBSTS)
   13        TKSSIL        Req. silence about offline cond.
                           (also in TKBSTS)
   14        TKSSCH        Requested scheduled interrupt
                           (also in TKBSTS)
   15        TKSSTD        Started (also in TKBSTS)
   16        TKSSEL        Selected (also in TKBSTS)
   17        TKSOFL        Offline (also in TKBSTS)


   TUBCNF Bits:

   Bit       Symbol        Meaning   ___       ______        _______

   18        TUC7TK        Seven track
   19        TUCIRD        Interrupts when rewind done
   20        TUCDMS        Diagnostic mode set
   21        TUCSNS        Force sense
   23        TUCD62        Drive can do 6250 BPI
   24        TUCD16        Drive can do 1600 BPI
   25        TUCD80        Drive can do 800 BPI
   26        TUCD55        Drive can do 556 BPI
   27        TUCD20        Drive can do 200 BPI
                                                                 Page 205


   82.0  MEMTAB -- VIRTUAL MEMORY PAGE TABLE


   Description:   Contains one word per page of core.  It is used  during
                  swap/page  requests in conjunction with the UPT to keep
                  track of where pages end up on the swapping  area,  and
                  which page to transmit next.

                  Under KL-paging, MEMTAB is in Section 3.

   Defined in:    S.MAC

   Used by:       VMSER

|            +------------------------------------------------------------+
|            | L | G | I |   MT.VPN   |        MT.DAD                     |
|            +------------------------------------------------------------+
|
|
|       Bits      Symbol    Meaning        ____      ______    _______
|
|       0         MT.LEF    Last entry in fragment chain
|       1         MT.GPB    Return swapping space when  I/O  done  in  IP
|                           queue
|       2         MT.IPC    IPCF page,,addr of packet+.ICPFI in MEMTAB
|       3         MT.CTX    Page belongs to a pushed context, disk  space
|                           is saved
|       4-14      MT.VPN    Next virtual page number
|       15-35     MT.DAD    Unit number+disk address
|       20-22               Unit number in active swapping list
|       23-35     MT.SCR    Disk address
                                                                 Page 206


|  83.0  METABL -- META-CHARACTER TABLE
|
|
|  Description:   One  table  entry  for  each  meta-character  (function
|                 character),  specifying  characteristics  and,  in some
|                 cases,  address  of  a  special  action   routine   for
|                 processing the received character.
|
|                 Indexed by the function code of the Meta character.
|
|                 Uses the same bits as CHTABL (q.v.).
|
|  Defined in:  SCNSER
|
|  Used by:  SCNSER
|
|  Format:
|
|  Code   Name                        Function
|              +----------------------------------------------------------+
|              | C|    | C| C| C| C| C| C| C| C| C| C| C| C| C| C|  Disp  |
|              | H|    | H| H| H| H| H| H| H| H| H| H| H| H| H| H|  addr  |
|              | S|    | P| 2| E| V| C| F| I| C| C| R| A| F| U| B|   on   |
|              | P|    | U| P| P| P| R| I| N| N| R| I| L| I| A| R| RECINT |
|              | O|    | N| C| A| O| E| L| V| C| E| A| T| L| E| K|   or   |
|              |  |    | C|  | R| S|  | O| L|  | T|  |  |  |  |  | XMTCHR |
|              +----------------------------------------------------------+
|  4000  ACR   | 1|    | 1| 1|  |  |  |  |  |  | 1|  |  | 1|  | 1|        |
|              |----------------------------------------------------------|
|  4001  ^U    | 1|    | 1|  |  |  |  |  |  |  |  |  |  |  | 1|  | METDL  |
|              |----------------------------------------------------------|
|  4002  ^W    | 1|    | 1|  |  |  |  |  |  |  |  |  |  |  | 1|  | METDW  |
|              |----------------------------------------------------------|
|  4003  DEL   | 1|    | 1|  |  |  |  |  |  |  |  |  |  |  |  |  | METDC  |
|              |----------------------------------------------------------|
|  4004  ^H    | 1|    | 1|  |  |  |  |  |  |  |  |  |  | 1|  |  | METBS  |
|              |----------------------------------------------------------|
|  4005 .TONFC | 1|    | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  | METNFC |
|              |----------------------------------------------------------|
|  4006 .TOHPS | 1|    | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  | METHPS |
|              |----------------------------------------------------------|
|  4007 .TOFLM | 1|    | 1|  |  |  |  |  |  |  | 1|  |  |  |  |  | METFLM |
|              +----------------------------------------------------------+
                                                                 Page 207


   84.0  MFD -- MASTER FILE DIRECTORY


   Description:   Disk file which tells location of each UFD  (User  File
                  Directory)  in  a  file  structure.   There  is one MFD
                  included in each file structure.

                  There is one entry in the MFD for  each  UFD  that  has
                  files in the structure.

                  Position of an entry is of no significance.

   Defined in:    COMMOD

   Used by:       FILFND, FILIO, FILUUO


          +-------------------------------------+
          |          Entry for user A           |
          |-------------------------------------|
          |          Entry for user B           |
          |-------------------------------------|
          |                  .                  |
          |                  .                  |
          |                  .                  |
          |-------------------------------------|
          |          Entry for user Z           |
          +-------------------------------------+

          Format of each entry

          +-------------------------------------+
          |    Project       |   Programmer     |
          |-------------------------------------|
          |   SIXBIT/UFD/    |       CFP        |
          +-------------------------------------+

   Notes:

        1.  The MFD is actually the UFD for [1,1].   PPN  [1,1]  is  used
            only for this purpose.

        2.  The CFP (Compressed  File  Pointer)  specifies  the  relative
            supercluster  within  the  structure  where  the  RIB  of the
            corresponding file can be found.

        3.  The first entry in  the  MFD  is  a  pointer  to  itself  (to
            [1,1].UFD).

                                                                 Page 208


           Relative      Number of       Relative       Number
   CFP=    Unit #     x  Superclusters + Block #   .    Blocks
           within        per             within    -    per
           STR           Unit            that unit .    Supercluster

   The number of clusters in a "supercluster" is determined by:


                  number-clusters-in-structure
                  -----------------------------
                            2(18)


   rounded up by 1.  Hence, every structure will have  fewer  than  2**18
   superclusters,  and  the  CFP  will  fit in 18 bits.  The concept of a
   supercluster is used only in connection with Compressed File Pointers.
                                                                 Page 209


   85.0  NMB -- FILE NAME BLOCK


   Description:   Used to remember file  name  in  a  project  programmer
                  number  across  all  file structures.  There is one NMB
                  for each open file of each PPN regardless of  how  many
                  versions  of the files are in existence.  This table is
                  linked into the list for each PPN.

   Defined in:    COMMOD

   Used by:       FILIO, FILFND, FILUUO


             +------------------------------------------------+
   NMBNAM    |File name in SIXBIT                             |
             |------------------------------------------------|
   NMBPPB    |Next NMB         |X|X|                          |
             |------------------------------------------------|
   NMBRNG    | Ptr to SFD NMB lst  |  Compressed File Pointer | NMBCFP
             |------------------------------------------------|
   NMBACC    |First ACC block      | File ext in SIXBIT       | NMBEXT
             |------------------------------------------------|
   NMBFSN    |FSN  |                                          |
             |------------------------------------------------|
   NMBKNO    |Know bits for this file                         |
             |------------------------------------------------|
   NMBYES    |Yes bits for this file                          |
             |------------------------------------------------|
   NMBCNT    |  Use Count                                     |
             +------------------------------------------------+

   Notes:


        1.  If a file  is  being  superseded,  there  are  Access  Blocks
            corresponding  to each existing version of the file, but only
            one NMB.

        2.  The compressed file pointer in  NMBEXT  is  copied  from  the
            second word of the UFD entry for this file.  Its value is the
            logical super-cluster number  within  the  structure  of  the
            file's RIB (see UFD).

        3.  If this NMB is for an SFD (NMPSFD (bit 34)  set  in  NMBSFD),
            NMBRNG  is a pointer to a NMB list of files under the SFD and
            the extension is assumed to be 'SFD'.

        4.  NMBKNO - Bit 36-n set if we know whether or not  file  exists
            in  structure n (can be either way, and NMBYES tells which is
            true).

        5.  NMBYES - Bits 36-n set if file definitely exists in structure
            n.
                                                                 Page 210


        6.  Access tables are linked into a ring for each file,  starting
            and ending at NMBACC.  All addresses that point to ACC blocks
            are even multiples of 4;  the link back to NMBACC is not.  If
            there  are  no  ACC blocks in the ring at some time, the left
            half of NMBACC does not contain  zero,  but  rather  its  own
            address.

        7.  NMBFSN holds the file structure number in bits 0-5.

                                                                 Page 211


   NMBPPB Byte Definitions.

   +-------------------------------------------------------+
   |                        | | |                          |
   +-------------------------------------------------------+
   0                       15   17                        35


   Word             Bit   ____             ___
   Label     Bits   Label      Content   _____     ____   _____      _______

   NMBPPB    0-15              Address of next NMB for this
                               directory (low order 2 bits=0)

               16   NMPUPT     If this bit is on, NMBPPB is
                               the location of the father SFD
                               for this list of NMB's  (only
                               set in the last NMB in the
                               list)

               17   NMPSFU     Bit on in AC, never in core.
                               if the location returned (by
                               UFORSF) is an SFD ACC.  Off if
                               the location is a UFB.


   NMBACC   Byte Definitions

   +-------------------------------------------------------+
   |                          |                            |
   +-------------------------------------------------------+
   0                         17                          35

   Word   ____
   Label     Bits     Contents   _____     ____     ________

   NMBACC    0-17      First ACC in access ring with this
                       filename/PPN.  If ring is empty,
                       the bit is not 0, instead it
                       points to itself.  In this way no
                       special checking is needed to add
                       or delete access blocks from ring.

   NMBEXT    18-35     Holds the left-justified SIXBIT
                       file extension

                                                                 Page 212


   86.0  NUMTAB -- TABLE OF GETTAB TABLES


   Description:   Contains monitor table address and bits  that  indicate
                  whether there may be segment data or process data.

                  This is the table that is referenced by the GETTAB  UUO
                  to pass back the information requested.

   Defined in:    UUOCON

   Used by:       COMMON, UUOCON

   GETTAB Table:  .GTSLF (23)


                Bits*        GETTAB Table Address
          +-------------------------------------+
          |                  |      JBTSTS      |
          |-------------------------------------|
          |                  |      JBTADR      |
          |-------------------------------------|
          |                  |      JBTPPN      |
          |-------------------------------------|
          |        "         |        "         |
          +-------------------------------------+


   Notes:

        1.  ABSTAB (loc 410)  in  COMMON  contains  absolute  address  of
            NUMTAB

        2.  Bits 0-8 hold the maximum size  of  the  table  if  it  is  a
            regular table

        3.  Bits 9-11 are interpreted as follows:

                  0 - undefined in this monitor
                  1 - index by item type
                  2 - index by job number
                  3 - index by job or segment
                  4 - index by job data in PDB
                  5 - index by negative and positive offsets

                                                                 Page 213


   87.0  PAGTAB -- PAGE TABLE


   Description:   This table is used to keep  track  of  user  core.   It
                  contains  one  word  for  each  page  of physical core.
                  PAGPTR,  defined  in  COMMON,  contains  the   starting
                  address   for  the  linked  list  of  free  pages.   In
                  addition, each segment in core has its own linked  list
                  of  pages  and is addressed through the EPT at location
                  412.

                  Under KL-paging, PAGTAB is in Section 3.

   Defined in:    S.MAC

   Used by:       KLSER, SYSINI, VMSER

   See also:      PT2TAB

   Physical
    Page   0 1 2 3 4 5 6 7 8         17 18                       35
           +-------------------------------------------------------+
      0    |  Page bits     |          |Ptr to next phys pg of list|
           |-------------------------------------------------------|
      1    |                |                                      |
           |-------------------------------------------------------|
      2    |                |                                      |
           |-------------------------------------------------------|
                                 .    .    .

   Bit definitions:

   Bits   Label       Meaning   ____   _____       _______

   0      FREPAG      On if page is not in some job's
                      addressing space.
   1      LOKPHB      On if this page is contained in a
                      segment that is locked in physically
                      contiguous memory
   2      LOKEVB      On if this page is contained in
                      segment that is locked virtually
                      contiguous in the exec addressing
                      space
   3      LOKIPB      On if this page is contained in a
                      segment that is locked in place
   4      NXMBIT      On if this page is below MEMSIZ
                      but is non-existent.
   5      MONTRB      On if this page is contained in the
                      monitor
   6      IPCBIT      On if this page is owned by IPCF
   7      TNCSHB      On if this page is temporarily uncached
|  8      CONTGB      On if this range of pages must be physically
|                     contiguous (for DX20 mcode, CI20 disks,...)
                                                                 Page 214


   88.0  PDB -- PROCESS DATA BLOCK


   Description:   One PDB for each active job.  Set up by CREPDB  routine
                  in DATMAN when the job is initialized.

   Defined in:    COMMON (prototype)
                  DATMAN (modify and find routines)

   Used by:       CLOCK1, COMCON, COMMOD, COMMON, CORE1, FILFND,  IPCSER,
                  KLSER, NETSER, QUESER, SCHED1, SEGCON, UUOCON, VMSER

                                                                 Conditional
                                                                    Assembly
              +-----------------------------------------------+
   .PDIPT,,   | (1) | ICPT (MCU)     |Quantum run time        |
   .PDQNT     |     |                |                        |
              |-----------------------------------------------|
   .PDCNO     |User's charge number                           |      FTCNO
              |-----------------------------------------------|
   .PDKCT     |Kilo-core ticks for the job                    |      FTKCT
              |-----------------------------------------------|
   .PDNM1     |First half of user's name in SIXBIT            |      FTUNAME
              |-----------------------------------------------|
   .PDNM2     |Second half of user's name in SIXBIT           |      FTUNAME
              |-----------------------------------------------|
   .PDRTM     |Job's incremental runtime                      |      FTTIME
              |-----------------------------------------------|
   .PDTTM     |Job's total runtime                            |      FTTIME
              |-----------------------------------------------|
   .PDTT2     |Additional runtime in fractional jiffies       |      FTTIME
              |-----------------------------------------------|
   .PDEBT     |Total EBOX time in jiffies                     |  FTKL10,FTTIME
              |-----------------------------------------------|
   .PDEB2     |Remainder in EBOX counts                       |  FTKL10,FTTIME
              |-----------------------------------------------|
   .PDMBT     |Total MBOX time in jiffies                     |  FTKL10,FTTIME
              |-----------------------------------------------|
   .PDMB2     |Remainder in MBOX counts                       |  FTKL10,FTTIME
              |-----------------------------------------------|
   .PDPGM     |Program to run on Control-C or RUN             |      FTSET
              |-----------------------------------------------|
   .PDABS (2) | Addr. break settings | Break address          |
              |-----------------------------------------------|
   .PDCVL (3) |      CVPL            | CPPL                   |
              |-----------------------------------------------|
   .PDMVL     |      MVPL            | MPPL                   |
              |-----------------------------------------------|
                                                                 Page 215


              |-----------------------------------------------|
   .PDDVL (4) |Pointer to table of DDBs with log. names       |      FTHSLN
              |-----------------------------------------------|
   .PDIPC (5) |First packet          | Send/receive ctrs      |      FTIPCF
              |-----------------------------------------------|
   .PDIPA (6) |IPCF statistics                                |      FTIPCF
              |-----------------------------------------------|
   .PDIPQ (7) |Flags and quotas                               |      FTIPCF
              |-----------------------------------------------|
|  .PDIPL     |              Interlock word                   |
|             |-----------------------------------------------|
|  .PDPID     |       PID for PID-specific receives           |
|             |-----------------------------------------------|
   .PDIPI     |PID of this job's [SYSTEM]INFO                 |      FTIPCF
              |-----------------------------------------------|
   .PDIPN     | Last entry in IPCFQ  |                        |      FTIPCF
              |-----------------------------------------------|
   .PDEQJ     |             0        |Pointer to job queue    |      FTEQDQ
|             |-----------------------------------------------|
|  .PDQSN     |  FILDAE seq. #       |  QUEUE. UUO seq. #     |
|             |-----------------------------------------------|
|  .PDEPA     |         0            |Addr of packet response |
|             |                      |to pseudo-process msg   |
              |-----------------------------------------------|
   .PDEQQ (8) |Flags                 |ENQ quota               |      FTEQDQ
              |-----------------------------------------------|
   .PDJSL (9) |Job search list                                |      FTSTR
              |-----------------------------------------------|
   .PDSCX     |        Job's saved context word               |
|             |-----------------------------------------------|
|  .PDDIA     | Location of DIAG. DDB for job                 |      FTDHIA
|             |-----------------------------------------------|
|  .PDSTR     |  Structure the program came from              |
|             |-----------------------------------------------|
|  .PDNAM     |  Name of the program                          |
|             |-----------------------------------------------|
|  .PDDIR     |  Directory the program came from              |
|             |-----------------------------------------------|
|  .PDSFD     |  Path to program                              |
|             |-----------------------------------------------|
|  .PDDFL (10)|  Word containing user-defined defaults        |      FTSET
|             |-----------------------------------------------|
|  .PDCAP (12)|  Maximum privileges allowed                   |      FTPRV
|             |-----------------------------------------------|
|  .PDACS     |  Account string                               |      FTACCT
|             |  Eight words                                  |
|             |-----------------------------------------------|
|  .PDVKC     |  Virtual time-core interval                   |  FTKCT,FTACCT
|             |-----------------------------------------------|
|  .PDUUC     |  Count of UUOs done by this job               |      FTACCT
|             |-----------------------------------------------|
|  .PDHZF     |  HPQ fit flag                                 |      FTHPQ
|             |-----------------------------------------------|
                                                                 Page 216


|             |-----------------------------------------------|
|  .PDPST     |  Negative of swapout time                     |      FTPSCD
|             |-----------------------------------------------|
|  .PDOBI (11)|  Operator/batch information                   |
|             |-----------------------------------------------|
|  .PDSTM     |  Time of last reset                           |
|             |-----------------------------------------------|
|  .PDLBS     |  Default size of large disk buffer            |
|             |  LH is set by UUO, RH is set by command       |
|             |-----------------------------------------------|
|  .PDOSL     |  Old-style LIB PPN                            |
              |-----------------------------------------------|
   .PDCMN     |  AOBJN pointer to user-defined command list   |
              |-----------------------------------------------|
   .PDUNQ     |  User-defined command pointers                |
              |  LH is user UNQTAB                            |
              |  RH is address of user command block          |
              |-----------------------------------------------|
|  .PDSAC (13)|     Address of first context block            |  FTCTX
|             |-----------------------------------------------|
|  .PDCTC (13)|    Address of current context block           |  FTCTX
|             |-----------------------------------------------|
|  .PDCTQ (13)|        Context quota word                     |  FTCTX
|             |-----------------------------------------------|
|  .PDCTO     |    JCH for job   |  JCH for job               |
|             |    requesting    |  owning                    |
|             |     interlock    |   interlock                |
|             |-----------------------------------------------|
|  .PDCTU (13)|           Context use word                    |  FTCTX
|             |-----------------------------------------------|
|  .PDCTX (14)|           Context flag word                   |
|             |-----------------------------------------------|
|  .PDTMI     |   Initial value for virtual timer traps       |
|             |-----------------------------------------------|
|  .PDTMC     | Countdown value for vir timer traps, or old PC|
|             |-----------------------------------------------|
|  .PDVRT     |     Virtual memory paging rate                |
|             |-----------------------------------------------|
|  .PDSCS     |   Addr. of process queue block for SCS. UUO   |  M.SCA
|             |-----------------------------------------------|
|  .PDEJB     |         Addr. of Ethernet job block           |  M.ENET
|             |-----------------------------------------------|
|  .PDCST (15)/      Reserved for customer definition         /
|             +-----------------------------------------------+

   Notes:

        1.  Bit 0 of .PDIPT is the PDMSWP bit that is set to indicate the
            expiration of the MCU (minimal care utilization).

        2.  .PDABS contains address break settings:

            1B0   OC.BCI   Break on instruction fetch
            1B1   OC.BCD   Break on data fetch
            1B2   OC.BCW   Break on write
                                                                 Page 217


            1B3   OC.BCM   Break on MUUO reference to
                           address (software)
            1B4   OC.ABE   Address break enabled
            1B5   OC.FEP   Follow exec paging
            1B6   OC.FUP   Follow user paging
            1B7   OC.BSU   Break address and conditions
                           set by UUO.

        3.  .PDCVL - Bit 18 is set if the CPPL is a limit rather  than  a
            guideline.

        4.  .PDDVL - Pointer to table of pointers to DDBs owned  by  this
            job  and having logical names, or zero if no such DDBs, or -1
            if too many to fit in the table (4 words = 8 DDBs).

        5.  .PDIPC - LH 0-17    Pointer to first packet
                     RH 18-26   Packets sent and not received
                     RH 27-35   Packets waiting to be received

        6.  .PDIPA - LH    Count of sends since LOGIN
                     RH    Count of receives since LOGIN

        7.  .PDIPQ  1BO IP.DBS  Receiver is disabled
                    1B1 IP.HBS  Quotas have been set
                    1B2 IP.DPR  At least 1 PID dropped on RESET
                    1B3 IP.DPL  At least 1 PID dropped on LOGOUT
                    1B4 IP.LOK  Interlock bit for this job's IPCF
                                receive queue
                 777B17 IP.JOB  Job whose IPCF queue has been locked
                  18-26         Send quota
                  27-35         Receive quota

        8.  .PDEQQ  1B0 EQ.HBS  The quota has been set

        9.  .PDJSL - The number of words in the PDB is a function of  the
            maximum  number  of file structures in a search list (.SLMXJ=
            D10).  For each file structure there will  be  a  9-bit  byte
            plus  an additional two bytes for the fence and stop markers.
            For file structure bytes, the following definitions exist:

            Value  Symbol  Use

            400            Spare bit
            200    FS.NCR  No-create
            100    FS.WLK  Software write-lock
             77            File structure number

            System search  list  is  maintained  in  COMMOD  starting  at
            location SYSSL and also consists of 9 bit bytes.

            The fence marker will have a value 1 greater than the maximum
            file  structure  number.  The stop marker will have a value 1
            greater than the fence marker.
                                                                 Page 218


       10.  .PDDFL contains the following fields:

            Bits      Description

            0-8       Default file protection
             9        Non-zero if default protection was specified
            10        Non-zero if file daemon specified protection
            11        Use default file specification on RUN and GET
            12        Don't ask about detached jobs on LOGIN
            18-26     File protection from FILDAE
            27-35     Default number of disk buffers

       11.  Bits for .PDOBI are:

            Bits    Description

            0-1     Write to operator values
            2-4     Operator privilege type
            10      Batch stream number set
            12-17   Batch stream number

       12.  For the values for .PDCAP, see JBTPRV.
|
|      13.  These context words are conditionally assembled depending  on
|           the  value  of  M.CTX,  which  causes  CTXSER to be loaded if
|           necessary.  This word is usd only by CTXSER.
|
|
|      14.  This context word is always assembled, independant  of  state
|           of  M.CTX  and  the presence of CTXSR.  .PDCTX contains flags
|           and fields used for context creation and  by  the  scheduler.
|           In  general,  left  half  bits  are  of  a  transient  nature
|           affecting only the current context,  while  right  half  bits
|           apply  to  those  operations  which are of a job-wide nature.
|           .PDCTX is referenced by CTXSER  and  SCHED1  although  SCHED1
|           only reads the state of the scheduler bit (CT.SCD).
|
|       Bits      Symbol    Meaning        ____      ______    _______
|
|           0     CT.SCD    Scheduler requesting context save
|           1     CT.ATO    Auto-save in progress
|           3     CT.TOP    Creating a new top-level context
|           4     CT.SWT    Switch to an existing context
|           5     CT.UUO    Context saved with CTX.  UUO
|           6     CT.PRN    Physical device search on RUN UUO
|          18     CT.LGO    Job is logging out
|          19     CT.MTJ    Job is migrating
|       27-35     CT.MFC    Migrate's first context number
|
|
|                      15.  .PDCST is always at the end of the  PDB,  and
|                           is  equivalent  to one or more words reserved
|                           for customer definition.  The  symbol  M.PCST
|                           is equivalent to the number of words reserved
|                           here.
                                                                 Page 219


   89.0  PPB -- PROJECT PROGRAMMER NUMBER DATA BLOCK


   Description:   Contains information pertaining to all files  belonging
                  to  one  PPN.   There  is one PPB for each PPN with any
                  active files;  it is linked into a list for the system,
                  starting  at  SYSPPB,  and  is  also  available through
                  JBTPPB.

   Defined in:    COMMOD

   Used by:       FILFND, FILUUO


            +------------------------------------------+
   PPBNAM   | Project Number     |  Programmer number  |
            |------------------------------------------|
   PPBSYS   | Next PPB in system |                     |
            |------------------------------------------|
   PPBUFB   | First UFB          |                     |
            |------------------------------------------|
   PPBNMB   | First NMB          |                     | PPBNLG
            |------------------------------------------|
   PPBCNT   |        Use count for the PPB             |
            |------------------------------------------|
   PPBKNO   | KNO bits for UFD                         |
            |------------------------------------------|
   PPBYES   | YES bits for UFD                         |
            |------------------------------------------|
   PPBLOK   | Bits  n+1=1 if UFD for FSN is interlocked|
            +------------------------------------------+
   Notes:

        1.  Bit 35 PPBNMB is the PPPNLG bit;  PPN is not logged in.  This
            bit, when set, indicates the PPN is logged in.  Used to flush
            PPB immediately when last file becomes dormant in PPB.

        2.  PPBKNO - Bit 36-n set if monitor knows whether or not UFD for
            this PPN exists in structure n.

        3.  PPBYES - Bit 36-n is set if the UFD for this  PPN  definitely
            exists in structure n.

                                                                 Page 220


   90.0  PTYTAB -- PSEUDO-TERMINAL DDB TABLE


   Description:   Table of pseudo-terminal  (PTY)  DDBs.   There  is  one
                  entry for each PTY in the system.  (See TTYTAB also.)

   Defined in:    COMMON

   Used by:       PTYSER, SCNSER, SYSINI


           +-------------------------------------+
   PTYTAB: |                  |   DDB address    | PTY0
           |-------------------------------------|
           |                  |      "    "      | PTY1
           |-------------------------------------|
           |                  |      "    "      | PTY2
           |-------------------------------------|
           /               .  .  .               /
           |-------------------------------------|
           |                  |   DDB address    | PTYn
           +-------------------------------------+
                                                                 Page 221


|  91.0  PT2TAB -- PAGE SECTION NUMBERS
|
|
|
|  Description:   Used to keep track of user core,  this  table  contains
|                 one  word  for  each page of physical core.  Indexed by
|                 page number, this table is complementary to PAGTAB.
|
|  Defined in:    S.MAC
|
|  Used By:       KLSER, SYSINI, VMSER
|
|  See also;      PAGTAB
|
|
|  Physical
|   Page
|          +-------------------------------------------------------+
|     0    |     Backward link addr    |   Virtual section no.     |
|          |-------------------------------------------------------|
|     1    |     Backward link addr    |   Virtual section no.     |
|          |-------------------------------------------------------|
|     2    |     Backward link addr    |   Virtual section no.     |
|          |-------------------------------------------------------|
|                                .    .    .
|
|       Bits      Symbol    Meaning        ____      ______    _______
|
|        0-17     P2.BLK    Backward link to previous page
|           1     P2.LIP    Lock In Progress (page to be returned)
|       18-35     VSECN     Virtual section number for swapout
                                                                 Page 222


   92.0  QBITS -- WAIT STATE CODE REQUEUE TABLE



   Description:   Specifies a requeue dispatch  address  and  a  transfer
                  table address for requeueing a job as a function of its
                  wait state code.  There is  one  entry  for  each  wait
                  state code, and the value of the wait state code is the
                  index factor of the table.

   Defined in:    SCHED1

   Used by:       SCHED1


          Wait     Dispatch      Transfer Table
          State    Address          Address
               +---------------------------------+
           0   |   QRNT        |   QRNW          |
               |---------------------------------|
           1   |   QWST        |   QWSW  (-1)    |
               |---------------------------------|
           2   |   QTST        |   QTSW          |
               |---------------------------------|
           3   |   QDST        |   QDSW  (-1)    |
               |---------------------------------|
           4   |   QPST        |   QPSW  (-1)    |
               |---------------------------------|
           5   |   QAUT        |   QAUW  (-1)    |
               |---------------------------------|
           6   |   QDAT        |   QDAW  (-1)    |
               |---------------------------------|
           7   |   QCBT        |   QCBW  (-1)    |
               |---------------------------------|
          10   |   QD1T        |   QD1W  (-1)    |
               |---------------------------------|
          11   |   QD2T        |   QD2W  (-1)    |
               |---------------------------------|
          12   |   QDCT        |   QDCW  (-1)    |
               |---------------------------------|
          13   |   QCAT        |   QCAW  (-1)    |
               |---------------------------------|
          14   |   QMMT        |   QMMW          |
               |---------------------------------|
          15   |   QEVT        |   QEVW          |
               |---------------------------------|
                                                                 Page 223


               |---------------------------------|
          16   |   QEQT        |   QEQW          |
               |---------------------------------|
          17   |   QIOWT       |   QIOWW (-1)    |
               |---------------------------------|
          20   |   QTIOWT      |   QTIOWW        |
               |---------------------------------|
          21   |   QDIOWT      |   QDIOWW  (-1)  |
               |---------------------------------|
          22   |   QPIOWT      |   QPIOWW (-1)   |
               |---------------------------------|
          23   |   QSLPT       |   QSLPW         |
               |---------------------------------|
          24   |   QEWT        |   QEWW          |
               |---------------------------------|
          25   |   QNAPT       |   QNAPW  (-1)   |
               |---------------------------------|
          26   |   QNULT       |   QNULW         |
               |---------------------------------|
          27   |   QJDCT       |   QJDCW         |
               |---------------------------------|
          30   |   QSTOPT      |   QSTOPW        |
               |---------------------------------+


   Notes:

   A transfer table address of -1 implies that the code at  the  dispatch
   address  will  only  modify the wait state code, and no physical queue
   transfer will take place (that is, a short term state change).

                                                                 Page 224


   93.0  QUEUE TRANSFER TABLE


   Description:   Contains input parameters for Queue  Transfer  routine.
                  There  is  one  such  table  for each different type of
                  queue transfer.

   Defined in:    SCHED1


          +-------------------------------------+
          |      Place       |     Function     |
          |-------------------------------------|
          |      Quant       |       Dest       |
          +-------------------------------------+


   Notes:

   Place>0        Transfer to beginning of destination queues.

   Place<0        Transfer to end of destination queue.

   Function       is the address of the QXFER routine  to  be  used.   It
                  defines the type of transfer.  There are three possible
                  values:


                  1.  QFIX - Destination queue specified in this table

                  2.  QLINK - Destination queue is a function  of  source
                      queue

                  3.  QJSIZ - Destination queue is a function of job size


   Dest           specifies the destination queue.


                  1.  If Function is QFIX, Dest is the destination  queue
                      number.

                  2.  If Function is QLINK, Dest is the address of a  Job
                      Size-Queues   Progression   Table   that  specifies
                      destination queue as a function of source queue.

                  3.  If Function is QJSIZ, Dest  is  the  address  of  a
                      Job-Size-Queue  Table  which  specifies destination
                      queue as a function of job size.


   Quant          specifies the change to the job's quantum run  time  as
                  follows:

                  If Quant<0, no change to quantum runtime.
                                                                 Page 225


                  If Quant>0, reset the quantum run time as follows:


                  1.  If Function is QFIX, set quantum run  time  to  the
                      value of Quant.

                  2.  If Function is QLINK or QJSIZ, Quant is the address
                      of   a   Quantum  Time  Table,  which  has  entries
                      corresponding to the entries in the table  used  to
                      determine  the destination queue.  The entry in the
                      same position as the selected destination queue  is
                      used to reset the quantum run time.


                  See BQFIX and following in SCHED1.
                                                                 Page 226


   94.0  QUEUE TABLE - JOB SCANNING (ISCAN, OSCAN, SSCAN, SSCAN1)


   Description:   Determines manner in which job queues  are  scanned  by
                  routine  QSCAN  in SCHED1.  There is one entry for each
                  queue to be considered, and entries are  in  the  order
                  that the corresponding queues are to be considered.

   Defined in:    COMMON

   Used by:       SCHED1


          +-------------------------------------+
          |     Queue        |    Scan code     |
          |-------------------------------------|
          |        "         |        "         |
          |-------------------------------------|
          |        "         |        "         |
          |-------------------------------------|
          |        "         |        "         |
          |-------------------------------------|
          |                  0                  |
          +-------------------------------------+

   The Scan Code is the address of a  scanning  routine  in  QSCAN.   The
   routines are:

   QFOR      Scans whole queue forward, first in-core then out-core
   QBAK      Scans whole queue backward, first out-core then in-core
   IQFOR     Scans in-core queue forward
   IQBAK     Scans in-core queue backward
   IQFOR1    Scans in-core queue for first member
   IQBAK1    Scans in-core queue backward (all but first member)
   OQFOR     Scans out-core queue forward
   OQBAK     Scans out-core queue backward
   OQFOR1    Scans out-core queue for first member
   OQBAK1    Scans out-core queue backward (all but first member)
   SQFOR     Scans out-core subqueues (PQ2 class swap-in scan)
   BGFOR     Scans out-core background batch subqueue (PQ2 class swap-in)
   ISSFOR    Scans in-core subqueues (PQ2 class scheduling scan)
   IBBFOR    Scans  in-core  background   batch   subqueue   (PQ2   class
             scheduling)
   OSSFOR    Scans out-core subqueues (PQ2 class lost-time scan)
   IRRFOR    Scans just swapped in queue, then QP2 in-core queue
   IGFOR     Scans just swapped  in  queue  and  jobs  waiting  for  high
             segment
   OLFOR     Scans background batch, B.B.  JIL, regular output queue, PQ2
             in-core

   Queues are scanned, in specified manner, in the order in  which  their
   entries  appear  in  the table, and a zero entry terminates the table.
   See SSCAN, ISCAN, and OSCAN, in COMMON.
                                                                 Page 227


   95.0  QQSTAB -- QUANTUM TIME QUEUE TABLE


   Description:   Specifies value to which a job's quantum  run  time  is
                  reset on certain types of queue transfers.

   Defined in:    COMMON

   Used by:       SCHED1


          +-------------------------------------+
          |           Quantum time 1            |
          |-------------------------------------|
          |           Quantum time 2            |
          |-------------------------------------|
          |                  -                  |
          |-------------------------------------|
          |                  -                  |
          |-------------------------------------|
          |                  -                  |
          |-------------------------------------|
          |                  0                  |
          +-------------------------------------+

   Quantum time is in jiffies (power line frequency).

   A 0 entry indicates end of table.
                                                                 Page 228


   96.0  QTTAB -- QUEUE PROGRESSION QUEUE TABLE



   Description:   Specifies the queue for a job  to  be  put  into  as  a
                  function of the queue it is in.

                  A Queue Progression Table is specified in the  Transfer
                  Table   for   link-type  queue  transfers.   (Refer  to
                  Transfer Table.)


   Defined in:    COMMON

   Used by:       SCHED1


          +-------------------------------------------------------+
          |      Source queue 1       |    Destination queue 1    |
          |-------------------------------------------------------|
          |      Source queue 1       |    Destination queue 2    |
          |-------------------------------------------------------|
          |             -             |             -             |
          |-------------------------------------------------------|
          |             -             |             -             |
          |-------------------------------------------------------|
          |             -             |             -             |
          |-------------------------------------------------------|
          |             0             |             0             |
          +-------------------------------------------------------+

   Each entry is a queue number.

   A 0,,0 entry indicates end of table.
                                                                 Page 229


   97.0  REQTAB -- SHARABLE DEVICE REQUEST TABLE


   Description:   Tells how  many  jobs  require  use  of  each  sharable
                  device.  Each entry is referenced by its own label.

                  An entry contains -1 if no job wants that resource.  If
                  a  job  uses the device, the entry is incremented to 0.
                  Each additional job that asks for the device  while  it
                  is  in  use  increments  the  entry by one, and must be
                  requeued to the corresponding  sharable  resource  wait
                  queue.

   Defined in:    SCHED1

   Used by:       CLOCK1, SYSINI

   The words in REQTAB are stored in the following order.  However,  some
   of the words may not be included in all systems.

        Word      Symbol        ____      ______

        0         AUREQ
        1         DAREQ
        2         CBREQ
        3         DTREQ
        4         IPREQ
        5         CXREQ
        7         DCREQ
        10        CAREQ
        11        MMREQ
        12        EVREQ
        13        EQREQ
        14        MCREQ

        Notes:

        1.  Entries  in  this  table  may  be  tested   and   incremented
            simultaneously, as follows:

                   AOSE XXREQ
                   PUSHJ P,     XXWAIT
                     -
                     -
                     -

            If the resource was  available,  the  routine  may  continue.
            Otherwise, the job must be requeued to wait for it.

        2.  Table AVALTB has entries  corresponding  to  the  entries  in
            REQTAB.

        3.  The AVALTB entries are built by the  conditionally  assembled
            RWAITS  MACRO entries in S.MAC;  therefore, some of the above
            listed entries will not be present in all systems.
                                                                 Page 230


        98.0  RIB -- RETRIEVAL INFORMATION BLOCK


   Description:   Disk block containing descriptive information  about  a
                  file.  There is one prime RIB for each file.  If a file
                  needs more retrieval pointers than can fit in a  single
                  RIB, a second (extended) RIB block is allocated to hold
                  the additional pointers (and so on).  The last block(s)
                  of  a file is (are) a copy of the prime RIB, called the
                  redundant RIB.

   Defined in:    COMMOD

   Used by:       FILFND, FILIO, FILUUO, ONCMOD, REFSTR


           +-------------------------------------------------------+
   RIBFIR  | -Number of retrieval pointers | First pointer address |
           |-------------------------------------------------------|
   RIBPPN  |           Project #           |     Programmer #      |
           |-------------------------------------------------------|
   RIBNAM  |                File name in SIXBIT                    |
           |-------------------------------------------------------|
   RIBEXT* |        File extension         |         Access date   |
           |-------------------------------------------------------|
   RIBPRV* | Access     |Mode|Creation time|      Creation date    |
           |-------------------------------------------------------|
   RIBSIZ  |                 File length in words                  |
           |-------------------------------------------------------|
   RIBVER  |           Version number (as in .JBVER)               |
           |-------------------------------------------------------|
   RIBSPL  |         Possible user file name when spooled          |
           |-------------------------------------------------------|
   RIBEST  |          Estimated length of file in blocks           |
           |-------------------------------------------------------|
   RIBALC  |          Number of blocks allocated for file          |
           |                   (Including RIB's)                   |
           |-------------------------------------------------------|
   RIBPOS  |             Logical block # in structure              |
           |-------------------------------------------------------|
   RIBFT1  |              Word for future use by DEC               |
           |-------------------------------------------------------|
   RIBNCA  |     Non-privileged word for customer to define        |
           |-------------------------------------------------------|
   RIBMTA  |             Tape label if file on magtape             |
           |-------------------------------------------------------|
   RIBDEV  |           Name of structure containing file           |
           |-------------------------------------------------------|
   RIBSTS* |                      Status bits                      |
           |-------------------------------------------------------|
                                                                 Page 231


           |-------------------------------------------------------|
   RIBELB* |        Logical block # where bad region begins        |
           |-------------------------------------------------------|
   RIBEUN  |    Err unit # in structure    |  Number bad blks in   |
           |                               |        region         |
           |-------------------------------------------------------|
   RIBQTF* | FCFS quota for this PPN in this structure (UFD only)  |
           |-------------------------------------------------------|
   RIBQTO* |   Logged out quota this PPN in this STR (UFD only)    |
           |-------------------------------------------------------|
   RIBQTR* |    Reserved quota this PPN in this STR (UFD only)     |
           |-------------------------------------------------------|
   RIBUSD* |No. of blocks used when job was logged out (UFD only)  |
           |-------------------------------------------------------|
   RIBAUT  |             Author PPN writing the file               |
           |-------------------------------------------------------|
   RIBNXT  |                Next STR for this file                 |
           |-------------------------------------------------------|
   RIBPRD  |                Prev STR for this file                 |
           |-------------------------------------------------------|
   RIBPCA  |         Privileged argument for customer use          |
           |-------------------------------------------------------|
   RIBUFD  |  Blk # in STR of UFD Data Block with ptr to this RIB  |
           |-------------------------------------------------------|
   RIBFLR  |         Relative block # of 1st block in RIB          |
           |-------------------------------------------------------|
   RIBXRA* |             Address of next RIB in chain              |
           |-------------------------------------------------------|
   RIBTIM  |         Creation date and time in new format          |
           |-------------------------------------------------------|
   RIBLAD  |            Last accounting date (UFD only)            |
           |-------------------------------------------------------|
   RIBDED  |         Directory expiration date (UFD only)          |
           |-------------------------------------------------------|
   RIBACT  |    AOBJN pointer for accounting string                |
           |-------------------------------------------------------|
           |                  Retrieval Pointers                   |
           |             (details on following pages)              |
           |-------------------------------------------------------|
   RIBACS  |      Account string (pointer in RIBACT)               |
           |-------------------------------------------------------|
   RIBCOD  |             0             |          777777           |
           |-------------------------------------------------------|
   RIBSLF  |             0             |     Self block number     |
           +-------------------------------------------------------+
                                                                 Page 232


   98.1  RIBEXT Byte Definitions


   +-------------------------------------------------------+ |  Extension
   |               |              Access              Date              |
   +-------------------------------------------------------+ 0 17  18  23
   24 35

   Bits Contents

   0-17 File extension in SIXBIT 24-35 Last access date





   98.2  RIBPRV Byte Definitions


   +-------------------------------------------------------+   |   Access
   |Mode      |      Creation      time     |     Creation     date     |
   +-------------------------------------------------------+ 0 8 12 23 35

   0-8 Access code 9-12 Data mode of file 13-23 File creation time  24-35
   Low-order twelve bits of file creation date

   Access Codes:

   Bits 0-2 Apply to any job with matching programmer number.   Bits  3-5
   Apply  to any job with matching project number.  Bits 6-8 Apply to all
   other jobs.

   Privilege Codes for User Files:

   Code Highest Privileges   ____ _______ __________

   7 None (but owner may read) 6 Execute-only (but owner may read) 5 Read
   4 Append (allocate, deallocate) 3 Update 2 Write (supersede, truncate)
   1 Rename (change attributes) 0 Change privileges

   Privilege Codes for Directories:

   Code Privilege   ____ _________

   4 Allow LOOKUPs in this directory 2 Allow creates 1 Allow directory to
   be read as a a data file

   Any combination of these bits may be set.

   Notes:

        1.  RIBPRV is maintained  in  ACYPRV  while  the  file  is  being
            accessed.
                                                                 Page 233


        2.  If the monitor is assembled for File Daemon,  and  FILDAE  is
            running,  an  owner  privilege  greater  than  or  equal to 4
            invokes FILDAE, giving extended access protection modes.  See
            the TOPS-10 Monitor Calls Manual for details.                _______ _______ _____ ______






   98.3  RIBSTS Byte Definition


   +-------------------------------------+
   |             Status bits             |
   +-------------------------------------+


   Left half bits apply to the UFD.

   Right half bits apply to this specific file.

     Bit       Label      Meaning     ___       _____      _______

      0        RIPLOG     (LH only) User logged in
      9,27     RIPSCE     File has had checksum error
      7,24     RIPABU     Always BACKUP this UFD/file
     10,28     RIPHWE     File has had hard write error
     11,29     RIPHRE     File  has had hard read error
     14,32     RIPBFA     File found bad by FAILSAFE during
                          restore
     15,33     RIPCHR     File closed after crash
     17,35     RIPBDA     File found bad by assessment cusp
     18        RIPDIR     This is a directory
     19        RIPNDL     No deletion of this file by any user
     21        RIPNFS     Not to be dumped by FAILSAFE
     22        RIPABC     Always bad checksum
                          (SWAP.SYS, SAT.SYS)
     23        RIPCBS     Compress bit set
     25        RIPNQC     Non-quota-checked file
     31        RIPPAL     Pre-allocated file





   98.4  RIBELB Byte Definitions


   +-------------------------------------------------------+
   |  Error bits  |      LBN where bad region starts       |
   +-------------------------------------------------------+

   Bits 0 through 8 give the type of error that occurred.  Bits 9 through
   35 give the logical block number on the unit where the error occurred.
                                                                 Page 234


     Bit     Meaning     ___     _______

      3      Error other than listed below
      4      Data error (parity or ECC hard)
      5      Search or header compare error





   98.5  File-Specific Definitions

   The following words in the RIB are defined differently for file header
   blocks.  The symbols for the UFD word and the file header word are:

        UFD       File      Contents for File Header        ___       ____      ________ ___ ____ ______

        RIBQTF    .RBTYP    File type and flags
        RIBQTO    .RBBSZ    Byte sizes
        RIBQTR    .RBRSZ    Record and block sizes
        RIBUSD    .RBFFB    FFB and CRY fields.

   Specifically, the four file header words contain the following data:

   .RBTYP contains the following:
        Bits      Symbol    Meaning        ____      ______    _______

        0         RB.DEC    File formatted by DIGITAL
        1         RB.RMS    RMS-10 formatted file
        2         RB.MCY    MACY11 format
        3         RB.CTG    File is contiguously allocated
        4         RB.WSB    Records do not cross section boundaries
        5-14                Reserved for use by DIGITAL.
        15-17     RB.CRY    File  is  encrypted  (field   contains   code
                            indicating the type of encryption algorithm)
        18-23     RB.DTY    File data type (codes listed below)

                            Code     Symbol     Meaning                            ____     ______     _______

                            0     .RBDUN     Undefined (none
                                             specified)
                            1     .RBDAS     ASCII character data
                            2     .RBDBI     Binary (image) data
                            60-77            Reserved for customer
                                             definition

        24-29     RB.DTO    Data OTS type (codes listed below)

                            Code     Symbol     Meaning                            ____     ______     _______

                            0     .RBOUN     Undefined (none
                                             specified)
                            1     .RBOCO     COBOL
                            2     .RBOFO     FORTRAN
                            3     .RBOMS     Mail file (MS program)
                                                                 Page 235


                            60-77            Reserved for customer
                                             definition

        30-35     RB.DCC    Data   carriage-control   formatting   (codes
                            listed below)

                            Code     Symbol     Meaning                            ____     ______     _______

                            0     RB.CUN     Undefined (none
                                             specified)
                            1     RB.CFO     FORTRAN carriage
                                             control
                            2     RB.CAS     ANSI space carriage
                                             control
                            60-77            Reserved for customer
                                             definition.

   .RBBSZ contains the following:
        Bits      Symbol    Meaning        ____      ______    _______

        0-7       RB.BSZ    Logical data byte size
        8-15      RB.FSZ    Physical data frame size
        16-23     RB.HSZ    Fixed header size
        24-39     RB.RFM    Record format  (for  variable-length  records
                            (codes are listed below)

                            Code     Symbol     Meaning                            ____     ______     _______

                            0     .RBRUN     Undefined (no specified
                                             record structure)
                            1     .RBRFX     Fixed-length records
                            2     .RBRVR     Variable-length records
                            3     .RBRVF     Variable-length records
                                             with fixed-length
                                             header
                            4     .RBRSP     Spanned records (ANSI
                                             labelled tapes)
                            60-77            Reserved for customer
                                             definition

        30-35     RB.RFO    Record organization (codes are listed below)

                            Code Symbol Meaning                            ____ ______ _______

                            0 .RBRSQ Sequential records 1 .RBRRL Relative
                            records 2 .RBRID Indexed records 3 .RBRHS
                            Hashed records 60-77 Reserved for customer
                            definition

   .RBRSZ contains:

        The left half (RB.RSZ) specifies the record size, in bytes.

        The right half (RB.BLS) specifies the block size, in bytes.
                                                                 Page 236


   .RBFFB contains:

        The left half (RB.FFB) specifies the first free byte  within  the
        last block of the file.

        The right half (RB.ACW) is the application-specific field.




        98.6  RIBXRA Byte Definitions (same Format As DEVRIB)


        Bits Byte Pointer Content        ____ ____ _______ _______

        0                    Set to 1
        1-8                 DEYRBC Number of RIB (first extended  RIB  is
                            1, and so forth)
        9-12                DEYRBU Logical unit  on  which  extended  RIB
                            exists
        13-35               DEYRPA Cluster address on  unit  of  extended
                            RIB




   98.7  Retrieval Pointer Format


   +-------------------------------------------------------+
   |  Cluster count  |     Checksum     |   Cluster addr   |
   +-------------------------------------------------------+

   Widths of these fields are defined symbolically, and may be  different
   for  each  file  structure.  Byte pointer is defined in the HOM block,
   kept in Structure Data Block while the structure is mounted.

             Field                  Byte Pointer             _____                  ____ _______

             Cluster Count          STYCNP
             Checksum               STYCKP
             Cluster Address        STYCLP (23 bits maximum)

   If cluster count = 0, the word actually is one of the following:

        1.  Pointer to new unit, if bit 18 = 1.  Bits 19-35 specify
            logical number within file structure.

        2.  EOF flag, if whole word is zero.

        3.  Cluster count is number of clusters in group.

                                                                 Page 237


   99.0  SAB -- STORAGE ALLOCATION BLOCK



   Description:             Table describing allocation  of  clusters  of
                  blocks for a file structure.

                  Each allocation bit represents a corresponding  cluster
                  of physical blocks within the structure.

                  (See also SAT.SYS and SPT.)

   Defined in:              COMMOD

   Used by:                 FILFND, FILIO, ONCMOD, REFSTR


           +-------------------------------------------------------+
   SABRNG  |     Core adr of next      |     No free clusters      | SABTAL
           |       SAB for unit        |        in this SAT        |
           |-------------------------------------------------------|
   SABSCN  |        No words in        |     Adr to start scan     |
           |        SAT Buffer         |     for free clusters     |
           |-------------------------------------------------------|
   SABNDX* |  A   | B | NDX  |                 First cluster       | SABCLA
           |      |   |      |                                     | SABFIR
           |-------------------------------------------------------|
   SABHOL  |           Number of blocks in largest hole            |
           |-------------------------------------------------------|
   SABBIT  |                                                       |
           |                   One data block of                   |
           |                        SAT.SYS                        |
           |                                                       |
           +-------------------------------------------------------+


   * Details on following page.
                                                                 Page 238


   SABNDX Byte Defintions


   +-------------------------------------------------------+
   |  A   |  B   |       NDX       |     First cluster     |
   +-------------------------------------------------------+
      0       1    2             12  13                  35

   Word             Bit Label or   ____             ___ _____ __
   Label    Bits    Byte Pointer    Content   _____    ____    ____ _______    _______

   SABFIR    0      SAPDIF          Set if table in core
                                    different from disk

   SABFIR    1      SAPBAD          Set if SAT block is on
                                    a bad block in disk

   SABNDX    2-12   SAYNDX          Index value for SPT
                                    entry representing
                                    this SAT

   SABCLA   13-35   SAYCLA          Cluster address within
                                    unit of first cluster
                                    represented in this
                                    SAT

   Notes:


        1.  The NDX and CLA fields are related by the formula.

                             Number
                       CLA = Cluster          x      (NDX)
                             per SAT

        2.  Bits 2-35 are set -1 when the file structure  is  created  to
            force SAT to be read into SAB.

        3.  Under KL-paging, the SAT is usually in Section 2.

                                                                 Page 239


   100.0  SAT.SYS


   Description:   Disk file describing the allocation of all clusters  of
                  blocks on the file structure.

                  Contains  one  bit  for  each  cluster  of   the   file
                  structure.

                  Bits are in the same order as the clusters  which  they
                  represent.


                 +-------------------------------------------------------------+
   Cluster 0-35  | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
                 |-------------------------------------------------------------|
          36-71  | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
                 |-------------------------------------------------------------|
                 | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
                 | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
                 | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
                 | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
                 | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
                 | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
                 |-------------------------------------------------------------|
                 | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
                 |-------------------------------------------------------------|
                 |0---------------------------------------------------------35 |
                 +-------------------------------------------------------------|


   Notes:

        1.  SAT blocks are always on the same unit as the  clusters  that
            they represent.

        2.  If more than one SAT block is needed for  a  single  physical
            unit,   each   block  will  be  near  the  clusters  that  it
            represents.  Hence, only the first block  in  each  group  (1
            cluster) of SAT.SYS contains data.

        3.  Programs should not look at bits corresponding to nonexistent
            clusters.  They may or may not be set.  (Function of hardware
            sector length.)

        4.  Each SAT block has  a  corresponding  entry  in  the  Storage
            Allocation Pointer Table (SPT) for that unit.

        5.  The unused bits in the final word of each SAT must be set  to
            1,  as  the  monitor depends on this condition when searching
            for holes.

                                                                 Page 240


   101.0  SCHEDULER SCAN TABLES


   Description:   Used by the system scheduler when selecting  a  job  to
                  run.

   Defined in:    COMMON

   Used by:       SCHED1

   SSCAN -- Used by policy CPU for selecting a job to run:

           +--------------------------------------+
   SSCAN   |      -HPQn       |     IQFOR         |
           |      -HPQ1       |     IQFOR         |
           |      -PQ1        |     IQFOR         |
           |      -PQ2        |     IRRFOR(RR)    |
           |      -PQ2        |     ISSFOR(class) |
           |      -PQ2        |     IBBFOR(class) |
           |                  |                   |
           +--------------------------------------+


   SSCAN1 -- Used by second processor for selecting a job to run:

           +--------------------------------------+
   SSCAN   |      -HPQn       |     IQFOR         |
           |      -HPQ1       |     IQFOR         |
           |      -PQ2        |     IRRFOR(RR)    |
           |      -PQ2        |     ISSFOR(class) |
           |      -PQ1        |     IQFOR         |
           |      -PQ2        |     IBBFOR(class) |
           |                  |                   |
           +--------------------------------------+


   SQSCAN -- Used by SQFOR code:

                Subqueue #       Ptrs to Quota Left
           +-------------------------------------+
   SQSCAN  |       -SQ0       |      CLSQTA      |
           |       -SQ1       |     CLSQTA+1     |
           |       -SQ2       |     CLSQTA+2     |
           |                  |                  |
           |       -SQn       |     CLSQTA+n     |
           +-------------------------------------+


   SQFOR scans subqueues forward according to SQSCAN
   table if RRFLAG = 0, (count of classes with non-zero
   quotas), otherwise it scans PQ2 with QFOR routine.
                                                                 Page 241


   DCSCAN  is  used  by  the  scheduler  for  selecting  jobs  for   IPCT
   decrementing.   This  table  is not processed by QSCAN but by specific
   code in the IPCT maintenance routines.

   DCSCAN:
           +--------------------------------+
           |                           -EWQ |
           |--------------------------------|
           |                          -SLPQ |
           |--------------------------------|
           |                           -PQ2 |
           |--------------------------------|
           |                           -PQ1 |
           |--------------------------------|
           |                          -HPQn |
           +--------------------------------+

   Notes:

   The items flagged by  (RR)  are  used  in  a  system  built  with  the
   round-robin scheduler (FTNSCHED=0).  Items flagged by (class) are used
   in a system built with the class scheduler (FTNSCHED=1).
                                                                 Page 242


   102.0  SPT -- STORAGE ALLOCATION POINTER TABLE


   Description:   Contains pointers to all SAT blocks for a unit, whether
                  in  core or not.  There is one entry for each SAT block
                  on a unit, in order of the cluster address  which  they
                  represent, and zero entry indicates end of table.

   Defined in:    COMMOD

   Used by:       FILFND, ONCMOD


           +-------------------------------------------------------+
   SPTFIR  |     Free cluster cnt      |    Cluster adr in unit    |
           |-------------------------------------------------------|
           |     Free cluster cnt      |    Cluster adr in unit    |
           |-------------------------------------------------------|
                                     . . .
           |-------------------------------------------------------|
           |             0             |             0             |
           +-------------------------------------------------------+
            0                        12 13                       35

           Bits       Byte Pointer         Content           ____       ____ _______         _______

           0-12          SPYTAL        Number free clusters represented
                                       in this SAT Block.
          13-35          SPYCLA        Cluster address within unit for
                                       this SAT Block.

   Notes:

        1.  Each Unit Data Block, UDB, contains a pointer to its SPT.

        2.  Each SAT  block  that  is  in  core  is  in  a  SAB,  Storage
            Allocation  Block.   The SAB contains the index value for the
            entry in this table corresponding to the SAT  block  that  it
            currently contains.

        3.  The last word in the SPT table will always be zero.

        4.  Under KL-paging, the SPT is usually in Section 2.

                                                                 Page 243


   103.0  STR -- FILE STRUCTURE DATA BLOCK



   Description:   Contains   descriptive   information   about   a   file
                  structure.

                  There is a Structure  Data  Block  for  each  structure
                  defined in the system.

   Defined in:    COMMOD

   Used by:       COMMON, FILFND, FILIO, FILUUO, IPCSER, ONCMOD


           +-------------------------------------------------------+
   STRNAM  |                 SIXBIT structure name                 |
           |-------------------------------------------------------|
   STRSYS  |    Next STR in system     |      This STR number      | STRFSN
           |-------------------------------------------------------|
   STRUNI  |  First UDB for this STR   |      K for CRASH.EXE      | STRK4C
           |-------------------------------------------------------|
   STRREF  |   Nonzero if STR needs    | No. of units in this STR  | STRUNM
           |      to be refreshed      |                           |
           |-------------------------------------------------------|
   STRHGH  |           Highest logical blk in structure            |
           |-------------------------------------------------------|
   STRSIZ  |            Size of STR in 128 word blocks             |
           |-------------------------------------------------------|
   STRGAR  |         Limit on total blocks reserved in STR         |
           |-------------------------------------------------------|
   STRRES  |        No. of reserved blocks remaining free          |
           |-------------------------------------------------------|
   STRALT  | Alter number for this structure                       |
           |-------------------------------------------------------|
   STRTAL  | No. first-come-first-serve free blocks on structre    |
           |-------------------------------------------------------|
   STROVR  |               Overdraw limit - per user               |
           |-------------------------------------------------------|
   STRMNT  |               Mount count for this STR                |
           |-------------------------------------------------------|
   STRPT1  |              First retrieval ptr for MFD              |
           |-------------------------------------------------------|
   STRTRY* | TRY | RETRY | RECAL |     |        |  X  | UNIT|  | X | STRUN1
           |-------------------------------------------------------|
   STRBPU  |             (Maximum) No. of blocks per unit          |
           |-------------------------------------------------------|
   STRBSC  |     No. of blocks per     |  (Maximum) No. of super-  |
           |       supercluster        |     clusters per unit     |
           |-------------------------------------------------------|
                                                                 Page 244


           |-------------------------------------------------------|
   STRJOB  |          Access           |    Job # having access    |
           |                           |           or 0            |
           |-------------------------------------------------------|
   STYCNP  |        Byte ptr to RIB cluster count in AC T2         |
           |-------------------------------------------------------|
   STYCKP  |        Byte ptr to RIB checksum field in AC T2        |
           |-------------------------------------------------------|
   STYCLP  |           Byte ptr for cluster adr in AC T2           |
           |-------------------------------------------------------|
   STRPPN  | PPN of the structure owner                            |
           |-------------------------------------------------------|
   STRSDL  | Position of STR in system dump list (-1 = not in list)|
           |-------------------------------------------------------|
   STRCRS  |          LBN of RIB for CRASH.EXE                     |
           +-------------------------------------------------------+

   * Details following.

   Notes:


        1.  All STR Data  Blocks  are  set  up  by  the  ONCE-Only  code,
            according  to  information  found  in  the  Home  Blocks.  No
            information  pertaining  to  structures  is  coded  into  the
            monitor.

        2.  STRALT is incremented each time a SAT block  is  written  for
            this structure.

        3.  Access is -1 if the job in right half is the  only  job  with
            the structure mounted, and it is not single-access structure.

                                                                 Page 245


   STRTRY Byte Definitions

   +-------------------------------------------------------+
   |  TRY   |RETRY |RECAL |      |  X   | UNIT |         |X|
   +-------------------------------------------------------+
   0       6      12       18     27           31      34 35

   Word            Byte   ____            ____
   Label   Bits    Label      Content   _____   ____    _____      _______

   STRTRY  0-5     STYTRY     Number of times to retry before
                              error considered hard.

   STRTRY  6-11    STYSER     Number of times to retry on search
                              and data errors

   STRTRY  12-17   STYRCL     Number of recalibrates for search
                              and data errors

   STR1PT     27   STP1PT     Set if STRPT1 is only retrieval
                              pointer for MFD.

   STRUN1  28-31   STYUN1     Logical unit number within this
                              file structure where MFD begins.

   STRPVS     35   STYPVS     Non-zero if this is a private
                              structure.
                                                                 Page 246


   104.0  SWPLST -- SWAPPING LIST TABLE


   Description:   Table used by the VM swapper in conjunction with MEMTAB
                  to  keep  track  of jobs being swapped or having paging
                  I/O in progress.

   Defined in:    COMMON

   Used by:       SCHED1, SWPSER, VMSER


    0                 17 18             26 27             35
   +-------------------------------------------------------+
   |        Bits        | Start phys. pg. |    # of pg.*   |
   |-------------------------------------------------------|
   |                                                       |
   |-------------------------------------------------------|
                            .  .  .

   Notes:

        SL.FRG = 1B0   Fragmented entry
        SL.DIO = 1B1   Direction of I/O  (1 = out)
        SL.SIO = 1B2   Swapping/paging  (1 = swapping)
        SL.IOP = 1B3   I/O in progress
        SL.IOD = 1B4   I/O done (this swap list entry
                       is done)
        SL.IPC = 1B5   On if an IPCF page
        SL.DFM = 1B6   Don't find me (used to keep FNDSLE
                       from finding this entry)
        SL.CHK = 1B11  Swapping checksum error
        SL.ERR = 1B12  I/O error (IODTER, IODERR, or
                       IOIMPM)
        SL.CHN = 1B13  Channel error (IOCHMP or IOCHNX)

        * if not a fragmented entry:

              Bits 14-26      - starting physical page number
                                (used as an index into MEMTAB)

              Bits 27-35      - number of pages

        * if fragmented:

             Bits 18-35       - address of fragment table.
                                The fragment table is linked
                                the same way the JBTSWP entry
                                is, but the entries are as above.
                                                                 Page 247


   105.0  SW2LST -- SECONDARY SWPLST


   Description:   The original SWPLST entry is stored  here  for  cleanup
                  purposes,   since  SWPLST  is  modified  while  I/O  is
                  progressing.

   Defined in:    COMMON

   Used by:       VMSER


           +-------------------------------------+
   SW2LST  |                                     |
           |-------------------------------------|
           |                                     |
           |-------------------------------------|
                           . . .






   106.0  SW3LST -- THIRD SWPLST


   Description:   The right half of this table is used to store  the  job
                  number  of  the  job being swapped or doing paging I/O,
                  and left half holds the contents of SWPOUT.

   Defined in:    COMMON

   Used by:       SCHED1, SWPSER, VMSER


           +-------------------------------------+
   SW3LST  |                  .                  |
           |                  .                  |
           |-------------------------------------|
           |     (SWPOUT)     |    Job Number    |
           |-------------------------------------|
           /               .   .  .              /

                                                                 Page 248


   107.0  SWPTAB -- SWAPPING TABLE


   Description:   Contains addresses of the Unit Data Blocks of all units
                  available  for  swapping.   This  table  specifies  the
                  active swapping list.

   Defined in:    COMMOD

   Used by:       CPNSER, FILFND, FILIO, ONCMOD, SEGCON, SWPSER,  SYSINI,
                  VMSER


   +-------------------------------------+
   |                UDB 1                |
   |-------------------------------------|
   |                UDB 2                |
   |-------------------------------------|
   |                UDB 3                |
   |-------------------------------------|
   |                                     |
   |                                     |
   |-------------------------------------|
   |                UDB n                |
   +-------------------------------------+
                                                                 Page 249


   108.0  TABSTR -- STRUCTURE TABLE


   Description:   Contains addresses of all File Structure Data Blocks in
                  the  system.   File  structures  are in order of access
                  speed, fastest to slowest.

                  Index value  for  each  entry  is  the  File  Structure
                  Number, FSN.

   Defined in:    COMMOD

   Used by:       COMMON, CPNSER, FILFND, FILIO, FILUUO, ONCMOD, SYSINI


                  +-------------------------------------+
   STRAOB:        |  -.SLMAX-1       |    .FSMIN        |
                  |-------------------------------------|
   STRTAB:        |                STR 1                |
                  |-------------------------------------|
                  |                STR 2                |
                  |-------------------------------------|
                  |                                     |
                  |                                     |
                  |-------------------------------------|
                  |                STR n                |
                  +-------------------------------------+

   Notes:

        1.  Number of entries is STRNUM.  This value cannot exceed 36.

        2.  The first word is an AOBJN pointer to the rest of the table.

                                                                 Page 250


   109.0  TRANSFER TABLES


   Description:   These tables are  used  in  the  requeuing  process  to
                  determine the destination queue and quantum runtime for
                  jobs being requeued by the scheduler.

   Defined in:    SCHED1


   Although these tables  are  defined  by  macros  in  COMMON  they  are
   represented here in their expanded form:

   EQFIX== 400000,,QFIX ;SPECIFIES FIX TRANFER TO END OF Q
   EQLNKX==400000,,QLNKZ ;SPECIFIES REQUEING AND QUANTUM RUN
                    ; TIME BASED ON CURRENT QUEUE AND
                    ; JOB SIZE

   QNULW:         EXP EQFIX  ;NULL QUEUE
                  XWD -1,-NULQ

   QSTOP::
   QSTOPW: EXP EQFIX               ;STOP QUEUE
           XWD -1,-STOPQ

   QJDCW:  EXP EQFIX               ;DAEMON WAIT QUEUE
           XWD -1,-JDCQ

   QCMW::  EXP EQFIX               ;COMMAND WAIT QUEUE
           XWD -1,-CMQ

   QTSW:                           ;TTY I/O WAIT SATISFIED
   QRNW:   EXP EQFIX               ;JOBS JUST BECAME RUNNABLE
           XWD QADTAB##,-PQ1

   QRNW1:  EXP EQFIX               ;BACK OF QP1, NO QUANTUM CHANGE
           XWD  -1,-PQ1

   QRNW2:  EXP EQFIX               ;BACK OF PQ2, NO QUANTUM CHANGE
           XWD  -1,-PQ1

   QTIOWW: EXP EQFIX               ;TTY I/O WAIT SATISFIED
           XWD -1,TIOWQ

   QSLPW:  EXP  EQFIX              ;SLEEP FOR .GE. 1 SECOND
           XWD  -1,-SLPQ

   QEWW:   EXP EQFIX               ;EVENT WAIT
           XWD -1,-EWQ

   QTIME:  EXP EQLNKZ              ;WHEN QUANTUM TIME EXCEEDED
           XWD 0,QRQTBL
                                                                 Page 251


   110.0  TTFCOM -- FORCED COMMANDS TABLE


   Description:   Allows SCNSER  to  force  a  specified  command  to  be
                  executed  for  a  job without having to put the command
                  into the terminal buffer.
|
|                 The TTFCOM table contains one entry, in SIXBIT  format,
|                 for each command that SCNSER might want to force.  Each
|                 entry is conditionally assembled.
|
|                 Each symbol in TTFCOM is associated with a  value  that
|                 equals  its offset within TTFCOM.  The LDB DDB contains
|                 this offset for forced commands.

   Defined in:    SCNSER

   Used in:       CLOCK1, COMCON, NETMCR, NETSER, NETVTM,  ONCE,  SYSINI,
                  UUOCON

   Label                  Content                   Command
           +-------------------------------------+
   TTFCXC  |                HALT                 | Control-C
           |-------------------------------------|
   TTFCXD  |                .BYE                 | Dataset
           |                                     | disconnect
           |-------------------------------------|
   TTFCXH  |               .HELLO                | Dataset
           |                                     | connect
           |-------------------------------------|
   .lit
   TTFCXR  |               .RESTA                | System restart
           |-------------------------------------|
   TTFCXK  |                KJOB                 | Kill job
           |-------------------------------------|
   TTFCXI  |               INITIA                | Call Initializing
           |                                     | CUSP
           |-------------------------------------|
   TTFCXJ  |               .FCONT                | Forced Continue
           |-------------------------------------|
   TTFCXT  |                .TYPE                | Retype line
           +-------------------------------------+
   TTFCXW  |                USESTA               | <CTRL/T>
           +-------------------------------------+
   TTFCXL  |                .NETLD               | Network Reload
           +-------------------------------------+
   TTFCXS  |                 HALT                | <CTRL/C>
           |                                     | with no trapping
           +-------------------------------------+
   TTFCXB  |                .BPT                 | <CTRL/D> breakpoint
           +-------------------------------------+
   TTFCXX  |                CTEST                | (For patching)
           +-------------------------------------+
                                                                 Page 252


   111.0  TERMINAL CHUNKS

|
|  Description:   Used to hold characters that need  to  be  typed  on  a
|                 terminal,  or  characters  received from a terminal and
|                 not yet read by a program.   The  first  word  of  each
|                 chunk  is  a  link  word  containing  the  addresses of
|                 previous and following chunks.  The  remainder  of  the
|                 terminal chunk is 3 words consisting of 3 12-bit bytes.
|                 Each byte contains an ASCII character or null.
|
|                 Buffers are set up dynamically, as needed, from a  pool
|                 of monitor free core reserved for that purpose.
|
|                 The association between a buffer and a line depends  on
|                 pointers in the Line Data Block.
|
|                 Buffers are built from four word  "chunks,"  which  are
|                 linked together as necessary.
|
|  Defined in:    SCNSER
|
|          +-------------------------------------+
|          | Prev chunk addr  | Next chunk addr  |
|          |-------------------------------------|
|          |  Byte 0 |    Byte 1   |   Byte 2    |
|          |-------------------------------------|
|          |  Byte 3 |    Byte 4   |   Byte 5    |
|          |-------------------------------------|
|          |  Byte 6 |    Byte 7   |   Byte 8    |
|          +-------------------------------------+
|
|
|  Notes:
|
|       1.  The bits in each byte are defined as:
|
|       Bits      Meaning        ____      _______
|
|       9         Image mode
|       10        Character has been echoed
|       11        Character has been logically deleted from the character
|                 stream.
|       12        Current  byte   is   a   special   function   character
|                 (meta-character), rather than a normal data character.
|
|
|   2.  If  there  is  not  another  chunk  in  a  given  direction,  the
|       corresponding linkage will be zero.

    3.  All chunks that are not part of a buffer are linked  together  to
        form the "free list".  The word TTFTAK points to the oldest chunk
        in the free list, and word TTFPUT points to the newest  chunk  in
        the free list.
                                                                 Page 253


    4.  The size of an individual buffer is limited  by  program  action.
        An output buffer cannot exceed 80 characters.  If an input buffer
        exceeds 172 characters (value  of  symbol  TTIWRN)  each  receive
        interrupt  will  force the output of an XOFF.  If an input buffer
        contains 300 characters (symbol TTIMAX) no additional  characters
        will  be accepted from that line.  A bell will be substituted for
        the echo of a lost character.

    5.  See description of Line Data Block for various pointers which are
        used with the TTY buffer.

                                                                 Page 254


   112.0  TTUUOT -- TTCALL DISPATCH TABLE



   Description:   This table contains pre-check and dispatch  information
                  for TTCALL UUOs.  The bits in the left half are checked
                  before dispatching.  There is one entry for each TTCALL
                  UUO.

   Defined in:    SCNSER


           +-------------------------------------------------------+
   TTUUOT: | Pre-check bits  |              |   Dispatch address   | TTCALL 0
           |-------------------------------------------------------|
           |                 |              |                      | TTCALL 1
           |-------------------------------------------------------|
           |                 |              |                      | TTCALL 2
           |-------------------------------------------------------|
           |                 |              |                      |
           |                 |              |                      |
           |-------------------------------------------------------|
           |                 |              |   Dispatch address   | TTCALL 17
           +-------------------------------------------------------+
             0              4                18                  35

   Bit    Label    Meaning

    0     TC.ADC   This function must be address-checked
    1     TC.USR   This function must be at user level else
                   return
    2     TC.USW   This function must be at user level else wait
    3     TC.ATW   This function must be attached, else wait
    4     TC.ATR   This function must be attached, else return
    5     TC.ECS   This function releases the previous input line,
                   causing a subsequent RESCAN to fail
                                                                 Page 255


   113.0  TTYTAB -- TTY TABLE


   Description:   One entry per job, indexed by job number.  This is  the
                  table of controlling (attached) terminals for each job.

   Defined in:    COMMON

   Used by:       CLOCK1, COMCON, COMDEV, CPNSER, ERRCON, FILIO,  IPCSER,
                  PSISER, PTYSER, SCNSER, UUOCON


           +-------------------------------------------------------+
   TTYTAB: |                           |                           | Job 0
           |-------------------------------------------------------|
           |                           |        DDB address        | Job 1
           |-------------------------------------------------------|
           |                           |        DDB address        | Job 2
           |-------------------------------------------------------|
           |                           |        DDB address        | Job 3
           |-------------------------------------------------------|
           |                           |                           |
           |                           |                           |
           |                           |                           |
           |                           |                           |
           |                           |                           |
           |-------------------------------------------------------|
           |                           |        DDB address        | Job n
           +-------------------------------------------------------+

   A zero entry indicates no attached terminal, otherwise, right half  is
   controlling DDB for the job.  There is always a TTY DDB for every job,
   even though  no  TTY  need  be  attached.   Thus,  UUOs  look  through
   TTYTAB(n) for a DDB because UUOs come from jobs.
                                                                 Page 256


   114.0  TYPTAB -- DEVICE TYPES TABLE


   Description:   Contains three letter generic  device  type  prefix  in
                  SIXBIT format for all possible devices in the system.

                  Used by UUOCON subroutine which finds a DDB  given  its
                  Universal Device Index.

   Defined in:    UUOCON

   Used by:       UUOCON


             +-------------------------------------+
             |             SIXBIT/DSK/             |
             |-------------------------------------|
             |             SIXBIT/DTA/             |
             |-------------------------------------|
             |             SIXBIT/MTA/             |
             |-------------------------------------|
             /                 . . .               /
             +-------------------------------------+
                                                                 Page 257


   115.0  UCLJMP -- CALL AND CALLI UUO DISPATCH TABLE


   Description:   Contains dispatch addresses for CALL  and  CALLI  UUOs.
                  There  is  one  entry for each two routines.  Left half
                  contains address for  even  numbered  routines;   right
                  half for odd numbered routines

                  Indexed by one half the CALLI argument.

                  For CALL UUOs, a table lookup is done in UCLTAB to  get
                  routine  number;  for CALLI UUOs the number is supplied
                  directly.  One half of this routine number is  used  as
                  the  table  index.   The  left  half  is taken for even
                  numbers;  right half for odd.  UUOCON  then  dispatches
                  to that address.

   Defined in:    UUOCON

   Used by:       UUOCON


   +-------------------------------------+
   /               .  .  .               /
   |-------------------------------------|
   | Customer adr -4  | Customer adr -3  |
   |                                     |
   | Customer adr -2  | Customer adr -1  |
   |                                     |
   |-------------------------------------|
   |   DEC    adr 0   |  DEC     adr 1   |
   |-------------------------------------|
   |   DEC    adr 2   |  DEC     adr 2   |
   |-------------------------------------|
   /               .  .  .               /
   +-------------------------------------+

   Notes:

   UCLJMP has entries corresponding to entries in UCLTAB.  Table  entries
   may  be  added  in  the  negative  direction  by customers, and in the
   positive  direction  by  DIGITAL  (DEC).   Once  a  table   entry   is
   established,  its  position  can never be changed without invalidating
   those programs that use the corresponding CALLI.
                                                                 Page 258


   116.0  UCLTAB -- CALL UUO NAMES TABLE


   Description:   Contains names of the CALL UUOs.  There  is  one  entry
                  for each CALL function.

                  Indexed by corresponding CALLI value.  Customer defined
                  CALLs  have  negative  index  values;   DEC  CALLs have
                  positive values.  Table entries are SIXBIT  expressions
                  of  the  CALL  names.  There are corresponding dispatch
                  addresses in the UCLJMP table.


           +-------------------------------------+
   CCLTAB: |          Customer CALL -m           |
           |-------------------------------------|
           |          Customer CALL -2           |
           |-------------------------------------|
           |          Customer CALL -1           |
           |-------------------------------------|
   UCLTAB: |             DEC CALL 0              |
           |-------------------------------------|
           |             DEC CALL 1              |
           |-------------------------------------|
           |             DEC CALL 2              |
           |-------------------------------------|
           |             DEC CALL n              |
           +-------------------------------------+


   Notes:

        1.  Customers may extend the table in the negative direction with
            as many of their own CALLs as desired.

        2.  The value  specified  in  a  CALLI  UUO  corresponds  to  the
            position  of the CALL UUO name in this table.  Hence, once an
            entry is established, its position in the table can never  be
            changed  without  invalidating any existing programs that use
            that CALLI.

        3.  All CALLs above CALLI AC,55 do not have a corresponding  CALL
            with  a  SIXBIT argument.  In the future, only CALLIs will be
            added by DIGITAL.

                                                                 Page 259


   117.0  UDB -- UNIT DATA BLOCK


   Description:   One UDB for each physical disk drive on the system (two
                  if  the  drive  is  dual ported).  Unit Data Blocks are
                  generated dynamically by  AUTCON  when  the  system  is
                  started and when units come on line.

   Defined in:    COMMOD

   Used by:       COMMON, CPNSER, DPXKON, ERRCON, FHXKON, FILFND,  FILIO,
                  FILUUO, FSXKON, KLSER, ONCMOD, RPXKON, SYSINI, VMSER


           +-------------------------------------------------+
    UNINAM | SIXBIT physical unit name                       |
           |-------------------------------------------------|
    UNILOG | SIXBIT logical name within structure (HOMLOG)   |
           |-------------------------------------------------|
    UNIHID | SIXBIT Home Block ID name (HOMHID)              |
           |-------------------------------------------------|
   *UNISYS | Next UDB in system    |    SIC     |      LUN   |
           |-------------------------------------------------|
    UNISTR | Next UDB for STR      |    STR Data Block       |
           |-------------------------------------------------|
    UNICHN | Next UDB on channel   |    CHN Data Block       |
           |-------------------------------------------------|
    UNIKON | Next UDB on controller|    KON Data Block       |
|          |-------------------------------------------------|
|  *UNISWP | Next UDB for swapping |         CFS             |
           |-------------------------------------------------|
    UNIHCT | Hard disk error statistics                      |
           |-------------------------------------------------|
    UNISCT | Soft and hard error statistics                  |
           |-------------------------------------------------|
    UNIMCT | Monitor detected error statistics               |
           |-------------------------------------------------|
    UNIERR | Device CONI at time of last hard error          |
           |-------------------------------------------------|
    UNISOF | CONI at time of last error before recovery      |
           |-------------------------------------------------|
    UNIHBN | Last logical block number on hard or soft error |
           |-------------------------------------------------|
    UNIBRC | Number of buffered mode blocks read on unit     |
           |-------------------------------------------------|
    UNIBWC | Number of buffered mode blocks written on unit  |
           |-------------------------------------------------|
                                                                 Page 260


           |-------------------------------------------------|
    UNIDRC | Number of dump mode blocks read on unit         |
           |-------------------------------------------------|
    UNIDWC | Number of dump mode blocks written on unit      |
           |-------------------------------------------------|
    UNIMRC | Number of monitor blocks read on unit           |
           |-------------------------------------------------|
    UNIMWC | Number of monitor blocks written on unit        |
           |-------------------------------------------------|
    UNIICT | Number of blocks swapped in from unit           |
           |-------------------------------------------------|
    UNIOCT | Number of blocks swapped out to unit            |
           |-------------------------------------------------|
    UNIMSC | Number of monitor + swap seeks on this unit     |
           |-------------------------------------------------|
    UNIUSC | Number of user mode seeks on this unit          |
           |-------------------------------------------------|
    UNIPCT | Number of positioning | Number of soft+hard seek|
           |      failures         |  incomplete failures    |
           |-------------------------------------------------|
    UNIFKS | Free K for swapping on this unit                |
           |-------------------------------------------------|
    UNISDI | Last DATAI status before recovery attempted     |
           |-------------------------------------------------|
    UNIHDI | Last DATAI status after first recovery failed   |
           |-------------------------------------------------|
    UNIECT | # times error status returned for last operation|
           |-------------------------------------------------|
    UNIHNG | Hung timeout counters                           |
           |-------------------------------------------------|
   *UNISTS | Status code for unit                            |
           |-------------------------------------------------|
   *UNICCT |Section# for|   BCT    |    No. of channel       |
           |swapping SAT|          |    termination errors   |
           |-------------------------------------------------|
    UNIHOM | 1st home block address|  redundant home blk adr |
           |-------------------------------------------------|
    UNIQUE | addr. of 1st PWQ DDB  |   Job no. of PWQ DDB    |
           |-------------------------------------------------|
    UNIGRP |  # blocks to try for  | Last disk position      |
           |       on output       |     (RP20)              |
           |-------------------------------------------------|
    UNIBPU | # logical blocks per unit (returned by DSKCHR)  |
           |-------------------------------------------------|
    UNIBPM | # of logical blocks/unit incl. maint. cyls.     |
           |-------------------------------------------------|
    UNIPCI | # of blocks paged in from unit                  |
           |-------------------------------------------------|
                                                                 Page 261


           |-------------------------------------------------|
    UNIPCO | # of blocks paged out to unit                   |
           |-------------------------------------------------|
   *UNICHR |    BPC   |   BPT    |    Blocks per cylinder    |
           |-------------------------------------------------|
   *UNICPS |    WPS   | |   SPU  |           CPS             | UNIWPS
           |-------------------------------------------------|
    UNICYL | Current physical cylinder number                |
           |-------------------------------------------------|
    UNIBLK | Logical block number within unit                |
           |-------------------------------------------------|
    UNISAB | Address of first SAB in ring                    |
           |-------------------------------------------------|
    UNITAL | # of free blocks on unit (reserved + FCFS)      |
           |-------------------------------------------------|
   *UNIDES | Unit description bits for DSKCHR                |
           |-------------------------------------------------|
    UNIPTR | -length swap SAT table| Addr of swap SAT table  |
           |-------------------------------------------------|
    UNISLB | 1st logical block for swapping on unit          |
           |-------------------------------------------------|
    UNIXRA |  # blks read using   |  # blks written using    |
           |  extended ribs       |  extended ribs           |
           |-------------------------------------------------|
    UNICDA | Previous cont. of RH | Addr of active DDB       |
           |-------------------------------------------------|
    UNIGEN | Generation number of UDB                        |
           | (AOSed when unit is dismounted)                 |
           |-------------------------------------------------|
    UNIRCV | # of hung unit retries without success          |
           |-------------------------------------------------|
    UNISWA | addr of current      |  distance to swap block  |
           | SWPLST entry         |                          |
           |-------------------------------------------------|
    UNISWD | Distance to swap cylinder                       |
           |-------------------------------------------------|
    UNIQUL | Length of position wait queue                   |
           |-------------------------------------------------|
    UNIBUC | # of blocks in 10/11 compatibility mode         |
           |-------------------------------------------------|
    UNIDIA | Job # of job shutting| Addr of DDB of job       |
           | down I/O (DIAG. UUO) | shutting down I/O (DIAG.)|
           |-------------------------------------------------|
|  *UNIALT |   Bit mask of CPUs   |  Alternate port addr     |
|          |-------------------------------------------------|
|  *UNI2ND | A |  Reserved        |  Alternate port addr     |
|          |-------------------------------------------------|
|   UNISER |  Drive serial number (double-word)              |
|          |-------------------------------------------------|
                                                                 Page 262


           |-------------------------------------------------|
    UNITIM | Hung-timer                                      |
           |-------------------------------------------------|
    UNIJOB | Previous RH UNIJOB   | Job no. of RH UNICDA     |
           |-------------------------------------------------|
   *UNIAJB | DA resource status word                         |
|          |-------------------------------------------------|
|  *UNIDS2 | N | P | res. |  KOF  |        PUN               |
           |-------------------------------------------------|
    UNILTM | Universal date/time of lock on structure        |
           |-------------------------------------------------|
    UNISPT | RH is address of storage allocation             |
           | pointers (SAT) table                            |
           |-------------------------------------------------|
    UNIPGT | Page quarter turns   |     Page turns           |
           |(No. of times RIB was reread to get new pointers)|
           |-------------------------------------------------|
    UNICRC |       No. of monitor cache read calls           |
           |-------------------------------------------------|
    UNICRH |       No. of monitor cache read hits            |
           |-------------------------------------------------|
    UNICWC |       No. of monitor cache write calls          |
           |-------------------------------------------------|
    UNICWH |       No. of monitor cache write hits           |
           |-------------------------------------------------|
    UNICBK |     No. of monitor blocks cached for this unit  |
|          |-------------------------------------------------|
|   UNIK4S | Word addr of K for swapping on this unit        |
           |-------------------------------------------------|
    UNILAS | Last command issued to massbus device           |
           |-------------------------------------------------|
    UNISCR | Contents of control register at first error     |
           |-------------------------------------------------|
    UNIHCR | Contents of control register at end             |
           |-------------------------------------------------|
    UNISDR | Contents of data register at first error        |
           |-------------------------------------------------|
    UNIHDR | Contents of data register at end                |
           |-------------------------------------------------|
    UNIEBK | Drive registers saved here on error.  LH has    |
           | last error, RH has first error.  Last word in   |
           | block is command which cause the error.         |
           |      (0-16 words, determined by X'ERNO)         |
           +-------------------------------------------------+

   * Indicates that details are shown on following pages.
                                                                 Page 263


   117.1  UNISYS Word


   +--------------------------------------------------------+
   |   Next UDB in system  |  SIC   |         |     LUN     |
   +--------------------------------------------------------+
    0                    17 18       25        30         35

        Word      Bits      Byte      Description        ____      ____      ____      ___________

        UNISYS    0-17                Core address of next UDB in system.
                                      Zero indicates last unit.

        UNISIC    18-25     UNYSIC    Number of SAT blocks  in  core  for
                                      this unit.

        UNILUN    30-35     UNYLUN    Logical  unit  number  within  file
                                      structure for unit





   117.2  UNISWP Word


   +-------------------------------------------------------+
   |Next UDB for swapping | |  CFS  |  K for swapping      |
   +-------------------------------------------------------+
    0                   17   20   22 23                   35

        Word      Bits      Byte      Description        ____      ____      ____      ___________

        UNISWP    0-17                Address of next UDB for swapping

        UNIFCS    20-22     UNYCFS    Swapping class of unit

        UNIK4S    23-35     UNYK4S    Number of K  for  swapping  on  the
                                      unit
                                                                 Page 264


   117.3  UNISTS Word


   +-------------------------------------------------------+
   |                       Code                            |
   +-------------------------------------------------------+
    0                                                    35


        Word      Code      Description        ____      ____      ___________

        ICOD      0         Unit idle
        SWCOD     1         Obsolete
        SCOD      2         Obsolete
        PWCOD     3         Position wait
        PCOD      4         Positioning
        TWCOD     5         Waiting to transfer data
        TCOD      6         Transferring data
        MDACOD    7         Unit useable only by  MDA  (mountable  device
                            allocator)
|       OWCOD     10        Obsolete
        OCOD      11        Operator wait, no file active
|       OW2COD    12        Obsolete
        O2COD     13        Same as OCOD, but no message once a minute




   117.4  UNICCT Word


   +-------------------------------------------------------+
   | Section# |   BCT  | _# of channel termination errors  |
   +-------------------------------------------------------+
    0        8 9      17 18                              35

   UNISNS   0-8    UNYSNS       Section number of swapping
                                SAT table
   UNIBCT   9-17   UNYBCT       Number of slots left in BAT
                                block for unit
   UNICCT  18-35                Number of channel termination
                                errors on this unit


|
|
|
|  117.5  UNIGRP Word
|
|
|  +-------------------------------------------------------+
|  | Blocks to try on output  | P | N | R | M |   |  LKP   |
|  +-------------------------------------------------------+
|
                                                                 Page 265


|       Bits      Symbol    Meaning        ____      ______    _______
|
|          18     UNIPWQ    Clock request outstanding of another  CPU  to
|                                     process the Position Wait Queue.
|
|          19     UNINDU    Disk cache needs sweeping
|
|          20     UNIRHP    HOM block reread in progress (CI disks)
|
|          21     UNIMSG    "Offline" message has  been  given  for  this
|                                     minute.
|
|       22-26               Reserved
|
|       27-35     UNILKP    Last known position of disk (RP20 disks)
|



   117.6  UNICHR Word


   +-------------------------------------------------------+
   |      BPC    |      BPT      |   Blocks per cylinder   |
   +-------------------------------------------------------+
    0           8 9            17 18                     35

        Bits      Symbol    Meaning        ____      ______    _______

        UNIBPC    0-8       UNYBPC    Number of blocks per cluster
        UNIBPT    9-17      UNYBPT    Number of blocks per track
        UNIBPY    18-35     UNYBPY    Number of blocks per cylinder





   117.7  UNICPS Word


   +-------------------------------------------------------+
   |      WPS     |  |      SPU     |        CPS           |
   +-------------------------------------------------------+
    0            8 9  10          17 18                  35

        Bits      Symbol    Meaning        ____      ______    _______

        UNIWPS    0-8       UNYWPS    Number of words per SAT block
        UNISPU    9-17      UNYSPU    Number of SAT blocks on the unit
        UNICPS    18-35     UNYCPS    Number of clusters per SAT
                                                                 Page 266


   117.8  UNIDES Word


   +-------------------------------------------------------+
   |                 Bits                                  |
   +-------------------------------------------------------+

   Word             Bit Label or   ____             ___ _____ __
   Label    Bit     Byte Pointer    Content   _____    ___     ____ _______    _______

   UNIDES    0       UNPRHB         Monitor must reread home
                                    block to ensure pack ID
                                    correct.  Set when a pack
                                    goes offline.
   UNIDES    1       UNPOFL         Unit is offline.
   UNIDES    2       UNPHWP         Unit is hardware write
                                    protected
   UNIDES    3       UNPSWP         Unit is in a structure
                                    which is software write-
                                    protected.
   UNIDES    4       UNPSAF         Unit is in a single access
                                    structure.
   UNIDES    5       UNPZMT         Structure mount count is
                                    zero.
   UNIPRF    6       UNPPRF         Unit is in a private
                                    structure.
   UNIUST    7-8                    Unit status, as follows:
                     UNVPIM         0 - unit is up and pack
                                    mounted.
                     UNVPBM         1 - unit is up and pack is
                                    being mounted.
                     UNVNPM         2 - unit is up, but pack
                                    is not mounted.
                     UNVDWN         3 - unit is down.
   UNIDES    9       UNPMSB         Unit has more than one SAT
                                    block.
   UNIDES    10      UNPNNA         No new access on structure.
   UNIAWL    11      UNPAWL         Structure is write-protected for
                                    all jobs.
   UNIDES    12      UNPFUS         Unit got a file-unsafe.
   UNIWMD    13      UNPWMD         Unit waiting for MDA to do
                                    something.
   UNIDES    14      UNPALT         Unit is dual-ported.
             15      UNPUSI         Unit status is inconsistent.
             16      UNPRSS         Removing swapping space from unit.
   UNISCN    18-20                  Data channel number
                                                                 Page 267


   Word             Bit Label or   ____             ___ _____ __
   Label    Bit     Byte Pointer    Content   _____    ___     ____ _______    _______

   UNIKTP    21-26   UNYKTP         Controller type, as follows:
                     TYPDR          0 - DR (Future drum, if any)
                     TYPFH          1 - FH RC10 (Burroughs disk or
                                    Bryant drum)
                     TYPDP          2 - DP RP10 (RP01-03 disks)
                     TYPMD          3 - MD Bryant mass disk
                     TYPFS          4 - FS RH10 with RS04
                     TYPRP          5 - RP RH10 with RP04-06
                     TYPRN          6 - RH20/RP20
   UNIKNM    27-29   UNYKNM         Controller number within type.
   UNIUTP    30-32   UNYUTP         Unit type
|  UNIPUN    33-35   UNYPUN         Obsolete (see UNIDS2)


   Notes:

        1.  This word is returned by the DSKCHR UUO.  Those items  marked
            with an asterisk are returned by the DSKCHR UUO.

        2.  Controller type starts at zero (for  example,  DPA=0,  DPB=1,
            and so on).

                                                                 Page 268


|  117.9  UNIALT Word
|
|
|  +-------------------------------------------------------+
|  |  Bit mask for CPU       |    Alternate port address   |
|  +-------------------------------------------------------+
|
|  Notes:
|
|       1.  The left half of UNIALT contains a bit mask representing  the
|           CPU(s) that can access the disk (for CI disks only).  The bit
|           is on, if the HSC50 has been initiated on the device.  Bit 17
|           = CPU0, Bit 16 = CPU1, Bit 15 = CPU2,...
|
|       2.  The right half contains the address of the other port, if  an
|           alternate port is indicated by UNI2ND.
|
                                                                 Page 269


   117.10  UNI2ND Word

|
|  +-------------------------------------------+
|  | A |                  |    UDB address     |
|  +-------------------------------------------+
|   0                   17 18                35
|
|  For dual-ported disks, Bit 0 is on, and the right  half  contains  the
|  address of the the alternate port.
|
   Entire word is zero if this unit is not being  accessed  through  dual
   ports.   For  units  which  are dual ported, UNI2ND will be one of the
   following:

        XWD  0,UDB-addr-of-alternate   If this is the main port for the
                                       unit

        XWD -1,UDB-addr-of-main        If this is the alternate port
                                                                 Page 270


   117.11  UNIDS2 Word


   +-------------------------------------------------------+
   | N | P | Res. |    KOF    |     KNM    |    PUN        |
   +-------------------------------------------------------+

   Notes:

        1.  Bit 0 (U2PNRM) is set if the unit has non-removable media.

        2.  Bit 1 (U2PPGA) is set if  port  became  inaccessible  without
            giving an off-line interrupt.

        3.  Bits 2-8 are reserved.

        4.  Bits 9-17 (UNIKOF) contains  the  offset  of  the  unit  into
            KONTAB.

        5.  Bits 18-26 (UNIKNM) contains the controller number.

        6.  Bits 27-35 (UNIPUN) contains the physical  unit  number  (lap
            plug number).




   117.12  UNIAJB Word


        1.  Is -1 if no DA in progress on this unit

        2.  Is +n if job n is allocating but no other jobs are waiting.

        3.  Is n,,n is job n is allocating and others are waiting to  use
            the DA resource.

                                                                 Page 271


   118.0  UFB -- UFD DATA BLOCK


   Description:   One data block for every UFD/file structure pair  which
                  has  an  active  file.  All blocks for a file structure
                  are linked together.

   Defined in:    COMMOD

   Used by:       FILFND, FILIO, FILUUO


           +-------------------------------------------------------+
    UFBTAL |   Total of reserved + free blocks left in this UFD    |
           |-------------------------------------------------------|
   *UFBPPB |Next UFB, this user |  privileges   |  UN1 |           |
           |-------------------------------------------------------|
    UFBPT1 |            First retrieval pointer to UFD             |
           |-------------------------------------------------------|
    UFBWRT |             FCFS quota             |     Nr. blks     |
           |-------------------------------------------------------|
    UFBFSN | FSN  |                                                |
           |-------------------------------------------------------|
    UFBAUJ | Equals n is job n owns the AU for this UFB            |
           |-------------------------------------------------------|
    UFBWAT | Non-zero is a job is waiting for the AU resource      |
           +-------------------------------------------------------+

   Notes:

   UFBTAL will go negative if the user has exceeded quota  and  is  using
   overdraw.   No  new  ENTERs  allowed  if this is 0 or negative.  Total
   includes RIBs.

   UFBWRT -  Bits  0-26  contain  the  logged-in  first-come/first-served
   quota.   This  is never decremented.  Bits 27-35 contain the number of
   blocks written in the UFD itself.
                                                                 Page 272


   UFBPPB Byte Definitions:

           +-------------------------------------------------------+
           |                         |             |  |     |      |
           +-------------------------------------------------------+
            0                      17 18         26   28     32  35

   Word   ____
   Label    Bits      Symbol     Content   _____    ____      ______     _______

   UFBPPB   0-17                 Core address of next UFD data
                                 block for this PPN (in another
                                 file structure).
   UFBPRV   18-26     UFYPRV     Access privileges for this UFD
                                 in this structure.
                                 Byte pointer UFYPRV used to
                                 load this byte into AC.
                                 UFRXLK = 4  Can do LOOKUPs
                                 UFRXCR = 2  Can create files
                                 UFRXRD = 1  Can read directory
   UFB1PT    27      UFP1PT      Set if UFBPT1 is the only
                                 retrieval pointer for this UFD.
   UFBUN1    28-31   COYUN1      Logical unit number within file
                                 structure associated with first
                                 retrieval pointer.
                                                                 Page 273


|  119.0  UNQTAB -- COMMAND TABLE
|
|
|  Description:   Contains command characteristics bits for  all  monitor
|                 commands.   Indexed  by  command name offset in COMTAB.
|                 SET commands are described by UNQTB2.
|
|  Defined in:    COMMON
|
|  Used by:       COMCON, UUOCON
|
|  See also:      COMTAB, COMTB2, DISP, DISP2, UNQTB2
|
|
|  +-------------------------------------------------------+
|  |           Command bits (described below               |
|  +-------------------------------------------------------+
|
|       Bits      Symbol    Meaning        ____      ______    _______
|
|           0     NOINCK    No core needed for command
|           1     NOCRLF    No automatic <CRLF>
|           2     NOPER     No printing monitor prompt (period)
|           3     TTYRNU    Set terminal to user mode and start program
|           4     TTYRNC    Keep  terminal  in  monitor  mode  and  start
|                           program.
|           5     TTYRNW    Set terminal to user level  and  restore  I/O
|                           status.
|           6     CMWRQ     Requeue job after command wait.
|           7     NOMESS    No command response, ever.
|           8     ERRFLG    Command error
|           9     SACFLG    Command was executed in an alternate context.
|          10     NOFLM     Super-noCRLF.
|          18     NOCORE    No core needed for the command.
|          19     NOJOBN    No job number needed for command.
|          20     NOLOGN    A job does not need to be logged  in  to  use
|                           this command.
|          21     NOACT     Command must wait until job's devices are not
|                           active.
|          22     NORUN     The  job  must  not  be  running.    <CTRL/C>
|                           required.
|          23     INCORE    Job must be in core, if it has core.
|          24     NXONLY    Not legal for execute-only program
|          25     NBATCH    Not legal for batch job.
|          26     CMDERR    Error encountered in command processing.
|          27     NORCMP    Allow use by job that is not logged in, on  a
|                           remote terminal, even with M.RCMP set.
|          28               Reserved.
|          29     CUSTMR    Reserved for customer definition.
|       30-31               Reserved.
|          32     UNIQ.1    Command is unique to one character.
|          33     UNIQ.2    Command is unique to two characters.
|          34     UNIQ.3    Command is unique to three characters.
|          35     UNIQ.4    Command is unique to four characters.
                                                                 Page 274


|  120.0  UNQTB2 -- SET COMMAND TABLE
|
|
|  Description:   Contains bits describing  characteristics  of  the  SET
|                 commands.    UNQTAB   contains   descriptions   of  the
|                 remainder of the  monitor  commands.   The  tables  are
|                 formatted  identically.   UNQTB2  is indexed by command
|                 name offset into COMTB2.
|
|  Defined in:    COMMON
|
|  Used by:       COMCON, UUOCON
|
|  See also:      COMTAB, COMTB2, DISP, DISP2, UNQTAB
|
|  +-------------------------------------------------------+
|  |          Command characteristics bits                 |
|  +-------------------------------------------------------+
|
|
|  Refer to UNQTAB for definitions of bits.
                                                                 Page 275


|  121.0  UNQTBC -- CUSTOMER-DEFINED COMMAND TABLE
|
|
|  Description:   Contains   command   characteristics   bits   for   all
|                 customer-defined  monitor commands.  Indexed by command
|                 name offset in CSTTAB.
|
|  Defined in:    COMMON
|
|  Used by:       COMCON, UUOCON
|
|  See also:      CSTTAB, DISPC
|
|
|  +-------------------------------------------------------+
|  |           Command bits (described below               |
|  +-------------------------------------------------------+
|
|       Bits      Symbol    Meaning        ____      ______    _______
|
|           0     NOINCK    No core needed for command
|           1     NOCRLF    No automatic <CRLF>
|           2     NOPER     No printing monitor prompt (period)
|           3     TTYRNU    Set terminal to user mode and start program
|           4     TTYRNC    Keep  terminal  in  monitor  mode  and  start
|                           program.
|           5     TTYRNW    Set terminal to user level  and  restore  I/O
|                           status.
|           6     CMWRQ     Requeue job after command wait.
|           7     NOMESS    No command response, ever.
|           8     ERRFLG    Command error
|           9     SACFLG    Command was executed in an alternate context.
|          10     NOFLM     Super-noCRLF.
|          18     NOCORE    No core needed for the command.
|          19     NOJOBN    No job number needed for command.
|          20     NOLOGN    A job does not need to be logged  in  to  use
|                           this command.
|          21     NOACT     Command must wait until job's devices are not
|                           active.
|          22     NORUN     The  job  must  not  be  running.    <CTRL/C>
|                           required.
|          23     INCORE    Job must be in core, if it has core.
|          24     NXONLY    Not legal for execute-only program
|          25     NBATCH    Not legal for batch job.
|          26     CMDERR    Error encountered in command processing.
|          27     NORCMP    Allow use by job that is not logged in, on  a
|                           remote terminal, even with M.RCMP set.
|          28               Reserved.
|          29     CUSTMR    Reserved for customer definition.
|       30-31               Reserved.
|          32     UNIQ.1    Command is unique to one character.
|          33     UNIQ.2    Command is unique to two characters.
|          34     UNIQ.3    Command is unique to three characters.
|          35     UNIQ.4    Command is unique to four characters.
                                                                 Page 276


   122.0  UNWTAB -- UNWIND RESOURCE TABLE


   Description:   Contains the names of routines for unwinding  scheduler
                  interlocks   and   resource   waits.    This  table  is
                  equivalent to AVALTB and REQTAB.  The default unwinding
                  routine  is  UNWRES.   The default scheduler routine is
                  SCDRES.

   Defined in:    S

   Used by:       SCHED1

   Each word in this table appears as:
             +------------------------------------------------------------+
             | Ptr to unwind routine     | Ptr to scheduler routine       |
             +------------------------------------------------------------+

   Where the left half contains the address of  the  routine  to  use  to
   unwind  the  resource,  and the right half contains the address of the
   scheduler level routine to get the resource.
                                                                 Page 277


   123.0  UFD -- USER FILE DIRECTORY


   Description:   Contains the locations for all files in  the  structure
                  belonging  to  a  particular project programmer number.
                  One UFD in each structure for each  project  programmer
                  number having any files in that structure.

   Defined in:    COMMOD

   Used by:       FILFND, FILIO, FILUUO


             +-------------------------------------+
             |            File 1 entry             |
             |-------------------------------------|
             |            File 2 entry             |
             |-------------------------------------|
             |            File 3 entry             |
             |-------------------------------------|
             |                                     |
             +-------------------------------------+


   Format of each entry:

           +-------------------------------------+
   UFDNAM  |         File name in SIXBIT         |
           |-------------------------------------|
   UFDEXT  |    Extension     |       CFP        | UFDCFP
           +-------------------------------------+


   Note:

   See MFD for discussion of compressed file pointers (CFPs).
                                                                 Page 278


   124.0  UPT -- USER PROCESS TABLE


   Description:   Contains information about each job, and is used by the
                  monitor to control memory mapping, scheduling, and I/O,
                  and contains "scratch space" for  dynamically  changing
                  variables about the job.

                  The UPT is pointed to by the GETTAB table .GTUPM (100),
                  and  has  been called the User Page Map Page (UPMP) for
                  many years.  The UPT points to the page maps  for  each
                  user  section  that  has  been created, but contains no
                  page mapping information itself.

   Defined in:    S.MAC

   Symbol  Offset     Map

                  +------------------------------------------------------+
   JOBPDO    0    /            Push down list (156 words)                /
                  |------------------------------------------------------|
   JOBPRO  156    |       Protected job data area (24 words)             |
                  |------------------------------------------------------|
   .UPLPS  202    |    Saved pointer to current virtual page number      |
                  |------------------------------------------------------|
   .UPSLX  203    |                        |      SWPLST index           |
                  |------------------------------------------------------|
   .UPTMP  204    |    Temporary locations used for swapping (6 words)   |
                  |------------------------------------------------------|
   .UPUAC  212    | Block of 20 ACs used to save job's ACs               |
                  |   while getting PFH.EXE                              |
                  |------------------------------------------------------|
   .UPFFT  232    |           Virtual time of first page fault           |
                  |------------------------------------------------------|
   .UPLFT  233    |                Virtual time of last fault            |
                  |------------------------------------------------------|
   .UPVCT  234    |   Real page faults     |  Faults when page is in core|
                  |------------------------------------------------------|
   .UPREL  235    |     Highest location gotten by CORE UUO or command   |
                  |------------------------------------------------------|
   .UPTMI  236    |       Interval for virtual time interrupts           |
                  |------------------------------------------------------|
   .UPTMC  237    |  Count-down counters for virtual timer interrupts    |
                  |------------------------------------------------------|
   .UPNXP  240    |        Page range as specified in PAGE. arg. list    |
                  |------------------------------------------------------|
   .UPJOB  241    |                    Job number                        |
                  |------------------------------------------------------|
   .UPMEM  242    |           Total virtual memory a job has             |
                  |------------------------------------------------------|
   .UPHSE  243    |  Virtual address of the end of the high segment      |
                  |------------------------------------------------------|
   .UPHSS  244    |  Virtual address of the start of the high segment    |
                  |------------------------------------------------------|
                                                                 Page 279


   Symbol  Offset  Map
                  |------------------------------------------------------|
   .UPVRT  245    |Non-zero if job is virtual (LH=high seg.,RH=low seg.) |
                  |------------------------------------------------------|
   .UPBTS  246    |           Random collection of bits  (see below)     |
                  |------------------------------------------------------|
   .UPANA  247    |            Count of non-accessible pages             |
                  |------------------------------------------------------|
   .UPICT  250    |          Incremental count of page faults            |
                  |------------------------------------------------------|
   .UPPFH  251    |             Copy of .JBPFH on swap-out               |
                  |------------------------------------------------------|
   .UPFOP  252    |       Used by FILOP. to recover from a page fail     |
                  |------------------------------------------------------|
   SPYTAB  253    /            Spy pages table  (17 words)               /
                  |------------------------------------------------------|
   .UPHVA  272    |    Used for address checking at interrupt level      |
                  |------------------------------------------------------|
   .UPLST  273    |Pointer to swappable DDBs  |                          |
                  |------------------------------------------------------|
   .UPFCC  274    |             Header for cached free space             |
                  |------------------------------------------------------|
   .UPFCU  275    |            Header for uncached free space            |
                  |------------------------------------------------------|
   .UPFCD  276    |Core loc. of SWITCH.INI   | Header for restricted     |
                  |                          |    free space             |
                  |------------------------------------------------------|
   .UPLNM  277    |Ptr. to logical name space|         T4                |
                  |------------------------------------------------------|
   .UPCTA  300    |                          |Extended channel table loc.|
                  |------------------------------------------------------|
   .UPMBF  301    |           Address of monitor buffer                  |
                  |------------------------------------------------------|
   .UPLBF  302    |  Flag to indicate use of extra page of directory     |
                  |  0=don't get, -n=IOWD for it, n=can get              |
                  |------------------------------------------------------|
   .UPSBF  303    |         Saved .UPMBF when doing 4-block read         |
                  |------------------------------------------------------|
   .UPEND  304    |          Last word allocated to UPMP                 |
                  |------------------------------------------------------|
   .UPPFT  420    |  Addr of user page fault trap instruction            |
                  |------------------------------------------------------|
   .UPAOT  421    |  Addr of user arithmetic trap instruction            |
                  |------------------------------------------------------|
   .UPPDT  422    |  Addr of user push down list overflow instruction    |
                  |------------------------------------------------------|
   .UP03T  423    |          Addr of user trap 3 instruction             |
                  |------------------------------------------------------|
   .UPMUO  424    |      MUUO flags           |   MUUO opcode, AC        |
                  |------------------------------------------------------|
                                                                 Page 280


   Symbol  Offset  Map
                  |------------------------------------------------------|
   .UPMUP  425    |               MUUO old PC                            |
                  |------------------------------------------------------|
   .UPMUE  426    |                MUUO effective address                |
                  |------------------------------------------------------|
|  .UPUPF  427    |        Addr of MUU Process Context word              |
|                 |------------------------------------------------------|
   .UPMTS  430    /            MUUO trap vector (10 words)               /
   .UPMTE  437    /            End of trap vector                        /
                  |------------------------------------------------------|
   WSBTAB  440    |   Working set bit table (17 words)                   |
                  |------------------------------------------------------|
   AABTAB  457    |   Access allowed bit table (17 words)                |
                  |------------------------------------------------------|
           476    /                     Unused  (2 words)                /
                  |------------------------------------------------------|
   .LMPFW  500    |                 Page fail word                       |
                  |------------------------------------------------------|
   .LMPFP  501    |               Page fail old PC word (2 words)        |
                  |------------------------------------------------------|
           503    |               Page fail new PC word                  |
                  |------------------------------------------------------|
   .LMEBH  504    |     EBOX cycle meter count (high-order bits)         |
                  |------------------------------------------------------|
   .LMEBL  505    |     EBOX cycle meter count (low-order bits)          |
                  |------------------------------------------------------|
   .LMMBH  506    |     MBOX cycle meter count (high-order bits)         |
                  |------------------------------------------------------|
   .LMMBL  507    |     MBOX cycle meter count (low-order bits)          |
                  |------------------------------------------------------|
                  /                   Unused                             /
                  |------------------------------------------------------|
   SECTAB  540 -  /      Address of user's section page map pages        /
         .  . .   /                                                      /
           777    +------------------------------------------------------+
                                                                 Page 281


   Notes:

        The bits defined in .UPBTS are:

        Bits      Symbol    Meaning        ____      ______    _______
|
|       0         UP.BIG    User has created extended sections
        1         UP.WHC    Working set has changed.
        2         UP.MGP    Monitor got PFH
        3         UP.GET    Running GET to get program that is to big  to
                            fit in core
        4         UP.SAA    Set access allowed immediately
        5         UP.CSP    Core image may contain SPY pages
        6         UP.MPF    Merging PFH
        7         UP.MMO    Job  owned  and  released  MM  resource  over
                            scheduler call
        8         UP.PGB    Paging I/O pages have not been returned
        9         UP.IYB    "In-your-behalf" PPN
        10        UP.WSS    Working set is scrambled
        11        UP.DST    Don't put TTY at monitor level
        12        UP.CXO    Core  image  (not  just  high   segment)   is
                            execute-only
        13        UP.FIP    FILOP.  in progress
        14        UP.DDW    Don't diddle working set
        15        UP.MIP    Migrate set lock for this job
|       16        UP.NZS    Need to swap in non-zero section, or
|       16        UP.MAP    Current SWPLST entry has map information
|       17        UP.CTX    Context save/restore in progress.   Used  for
|                           RUN   error   recovery   and   high   segment
|                           manipulation.
|       18        UP.SWF    SET WATCH FILES has been set
|       19        UP.JXP    MAPBAK.  Call XPANDH when done.
                                                                 Page 282


   125.0  USER PAGE MAP


   Description:   The page map contains the  physical  page  number  that
                  corresponds to each virtual page for the user.  Indexed
                  by virtual page number, this page contains one word for
                  each  virtual  page.   That  word contains the physical
                  address for  that  page,  and  the  accessibility  bits
                  associated with the page.

   Each page pointer is formatted as follows:

   +-------------------------------------------------------+
   |Cd|P|W|K|C|A|SP|N|C|O|SS|     Addr                     |
   +-------------------------------------------------------+

        Bits      Symbol    Meaning        ____      ______    _______

          0-2               Accessibility code:

                            Code Meaning                            ____ _______

                            0    No access is allowed
                            1    Immediate page pointer
                            2    Shared page pointer
                            3    Indirect page pointer

            3     UP.PUB    Public page
            4     UP.WRT    Writable page
            5     UP.KPM    "Keep Me" bit (page should not be cleared  on
                            sweeps).
            6     UP.CSH    Page has been cached.
            7     UP.AAB    Access allowed (see AABTAB)
            8     UP.SPY    Spy privileges are required  to  access  this
                            page.
            9     UP.NIA    No I/O allowed (usually set for high  segment
                            pages).
           10     UP.COR    Page is in core.
           11     UP.OIQ    On for in-progress queues.
           12     UP.SSP    Slow swapping space.
        15-35     UP.ADR    Disk or memory address field.   This  address
                            is  essentially  an  effective  address.  The
                            accessibility code in Bits 0-2 determine  the
                            handling of the address, whether immediate or
                            indirect.  If indirect, the address is mapped
                            through the SPT (Special Pages Table).
                                                                 Page 283


   126.0  UUOTAB -- UUO DISPATCH ADDRESS TABLE


   Description:   Contains address of operator-dependent UUO routines.

                  Table is in order of UUO op code,  with  two  addresses
                  per  entry.   Entry n contains entries corresponding to
                  op codes 40 + 2n, 41 + 2n.

                  Entries corresponding to invalid op codes  contain  the
                  address  of  UUOERR.   Some  of  these are reserved for
                  future use  by  DIGITAL,  others  for  customers.   See
                  current listing for specific examples.

   Defined in:    UUOCON

   Used by:       UUOCON


   +-------------------------------------------------------+
   |    Adr for op code 40     |    Adr for op code 41     |
   |-------------------------------------------------------|
   |    Adr for op code 42     |    Adr for op code 43     |
   |-------------------------------------------------------|
   /                           .                           /
   /                           .                           /
   |-------------------------------------------------------|
   |    Adr for op code 76     |    Adr for op code 77     |
   +-------------------------------------------------------+
                                                                 Page 284


   127.0  WSBTAB -- WORKING SET BIT TABLE


   Description:   This bit table is found in the UPT from location 440 to
                  456.   If  a bit is on in this table, then the relative
                  page is in core.

   Defined in:    S.MAC

   Used by:       VMSER


           +-------------------------------------+
           |                                     |
           |                                     |
           |                                     |
           |-------------------------------------|
      440  | | | | | |                           |
           |-------------------------------------|
           |                                     | WSBTAB
           |                                     |
           |-------------------------------------|
      456  |                           | | | | | |
           |-------------------------------------|
           |                                     |












                                 APPENDIX A

                          ANF-10 FRONT END TABLES



                                  CONTENTS

                          ANF10 Table Descriptions


           1.0     CHUNK WORDS  . . . . . . . . . . . . . . . . . . . . 2
           2.0     DEVICE DATA BLOCKS . . . . . . . . . . . . . . . . . 4
           2.1       DB.STS . . . . . . . . . . . . . . . . . . . . . . 8
           2.2       DB.RDT (Remote Data Type)  . . . . . . . . . . . . 9
           2.3       DB.DCS Bits For Terminals  . . . . . . . . . . . . 9
           2.4       DB.DCS Bits For Line Printers  . . . . . . . . . . 9
           2.5       DB.DCM Bits  . . . . . . . . . . . . . . . . . .  10
           2.6       DB.TTS Bits  . . . . . . . . . . . . . . . . . .  10
           2.7       DB.BCD Bits  . . . . . . . . . . . . . . . . . .  10
           3.0     DH-11 BLOCK  . . . . . . . . . . . . . . . . . . .  11
           4.0     DMC11 BASE TABLE . . . . . . . . . . . . . . . . .  12
           5.0     DMC11 MESSAGE BUFFERS  . . . . . . . . . . . . . .  13
           6.0     DMC11 MESSAGE BUFFER QUEUES  . . . . . . . . . . .  14
           7.0     DN11 BLOCK . . . . . . . . . . . . . . . . . . . .  15
           8.0     DZ11 BLOCK . . . . . . . . . . . . . . . . . . . .  16
           9.0     LINE BLOCK . . . . . . . . . . . . . . . . . . . .  17
           9.1       LB.STS Bits  . . . . . . . . . . . . . . . . . .  23
           9.2       LB.ST5 Bits  . . . . . . . . . . . . . . . . . .  23
           9.3       LB.DVS (Interrupt Service Routine) Codes . . . .  24
           9.4       LB.MPS (Node Status) . . . . . . . . . . . . . .  24
           9.5       LB.NSS Bits (FTDCP1) . . . . . . . . . . . . . .  24
           9.6       LB.STX Bits  . . . . . . . . . . . . . . . . . .  24
           9.7       LB.STY Bits  . . . . . . . . . . . . . . . . . .  25
           9.8       LB.NSS Bits (FTDCP3 Or FTDCP4) . . . . . . . . .  25
           10.0    LINE CONTROL BLOCK . . . . . . . . . . . . . . . .  26
           10.1      LC.CAR Bits  . . . . . . . . . . . . . . . . . .  27
           10.2      LC.STA Bits (State Of Modem Control) . . . . . .  27
           10.3      LC.SPD Codes For Transmit And Receive Speeds . .  27
           11.0    PHASE II LINK ENTRY BLOCK  . . . . . . . . . . . .  28
           11.1      LE.STS Bits  . . . . . . . . . . . . . . . . . .  29
           11.2      LE.STT Codes . . . . . . . . . . . . . . . . . .  30
           12.0    STATION CONTROL BLOCK  . . . . . . . . . . . . . .  31
           12.1      SB.FLG Bits  . . . . . . . . . . . . . . . . . .  32
           13.0    TASK BLOCK . . . . . . . . . . . . . . . . . . . .  33
           13.1      TK.STS Bits  . . . . . . . . . . . . . . . . . .  34
   ANF-10 FRONT END TABLES                                       Page A-2


           14.0    TO-11 BLOCK  . . . . . . . . . . . . . . . . . . .  35
           14.1      TE.LIN Bits  . . . . . . . . . . . . . . . . . .  35
           15.0    TO-10 BLOCK  . . . . . . . . . . . . . . . . . . .  36
   ANF-10 FRONT END TABLES                                       Page A-3


   A.1  CHUNK WORDS

   Description:   Describes the format of chunks for messages.

   Defined in:    DNCNFG.P11


              +------------------------------------------------------------+
    0         |                  Link to next chunk in                     |
              |                     current message                        |
              |------------------------------------------------------------|
    CN.MLK    |                   Link to next message                     |
              |                      (or 0 if none)                        |
              |------------------------------------------------------------|
    CN.LEN    |          Message length, including NCL header,             |
              |                    but excluding BCC                       |
              |------------------------------------------------------------|
    CN.TIM    |                       DDCMP timer                          |
              |                                                            |
              |------------------------------------------------------------|
    CN.DDB    |           Address of DDB sending this message              |
              |              (depends on DEVN+FT.DTE NE 0)                 |
              |------------------------------------------------------------|
    CN.SCB    |            Pointer to SCB window for message               |
              |                                                            |
              |------------------------------------------------------------|
    CN.ADR    |               Address of next byte to use                  |
    CN.DDC    |             (start of DDCMP header:  CN.DDC)               |
              |------------------------------------------------------------|
    CN.CNT    |              Count of bytes left in message                |
              |                                                            |
              |------------------------------------------------------------|
    CN.NCN    |                      NCN saved here                        |
              |                                                            |
              |------------------------------------------------------------|
              |                     DDCMP header BCC                       |
              |                                                            |
              |------------------------------------------------------------|
    CN.NCT    |                 NCT byte of NCL message                    |
              |              (the NCL message begins here)                 |
              |------------------------------------------------------------|
    DATA      /                 This is the message data                   /
              |                                                            |
    CNKSIZ==> +------------------------------------------------------------+

   Notes:

|       FIRFRE Address of first free chunk.
|
|       LSTFRE Address of last free chunk.
|
|       FRECNT Count of free chunks.
|
|       FREMAX Max number of chunks.
        CNKLN1 Max amount of data in first chunk of message.
   ANF-10 FRONT END TABLES                                       Page A-4


             (CNKSIZ - CN.NCT)

        CN.DT2 Length of header in succeeding chunks of message.

        CNKLN2 Max amount of data in succeeding chunks of message.
             (CNKSIZ - CN.DT2)
   ANF-10 FRONT END TABLES                                       Page A-5


   A.2  DEVICE DATA BLOCKS


   Description:   Contains information needed to perform I/O  operations.
                  One such block for each device.

   Defined in:    DNDEV.P11


            +---------------------------------------------------------------+
   DB.STS   |                        Status bits                            |
            |                                                               |
            |DS.|DS.|DS.|DS.|DS.|DS.|DS.|DS.|DS.| 0 |DS.|DS.|DS.|DS.|DS.|DS.|
            |CON|XDS|TTY|IQU|EPL|XCH|COR|Q10|PAU|   |DIE|ACT|OUT|QUE|DSC|CAC|
            |---------------------------------------------------------------|
   DB.LNK   |                         Link address to                       |
            |                             next DDB                          |
            |---------------------------------------------------------------|
   DB.HDW   |                   Hardware address for device                 |
   DB.DHB   |                                                               |
            |---------------------------------------------------------------|
   DB.RPC   |                     Default starting address                  |
            |                   (moved to DB.OPC by CLRDDB)                 |
            |---------------------------------------------------------------|
   DB.TPC   |                  Timer-runout dispatch address                |
            |                                                               |
            |---------------------------------------------------------------|
   DB.DVT   |                        Device attributes                      |
            |                                                               |
            |---------------------------------------------------------------|
   DB.DVU   |     Device controller type     |        Device unit type      |
   DB.DVV   |                                |                              |
            |---------------------------------------------------------------|
   DB.WID   |                  Carriage width for terminals                 |
   DB.RLN   |                Record length for other devices                |
            |---------------------------------------------------------------|
   DB.ACR   |          Unit number          |        Auto-crlf point        |
   DB.UNI   |                               |                               |
            |---------------------------------------------------------------|
   DB.OBJ   |       NCL remote object       |        NCL object type        |
   DB.ROT   |              type             |                               |
            |---------------------------------------------------------------|
   DB.MDR   |Maximum number of chunks device| Maximum number of output      |
   DB.CHK   |  can have before sending DRQ  |   data requests (DRQ)         |
            |---------------------------------------------------------------|
   DB.TYP   |     Restricted node number    |         Type of device        |
   DB.RNN   |    (Depends on FT.RNN = 1)    |                               |
            |---------------------------------------------------------------|
   ANF-10 FRONT END TABLES                                       Page A-6


            |---------------------------------------------------------------|
   DB.PFH   |  Node number to reconnect to  |Preferred host to connect to   |
   DB.RCN   |      (Depends on FTHOST)      |      (Depends on FT.PFH)      |
            |---------------------------------------------------------------|
   DB.OLA   |                        Our link address                       |
            |                                                               |
            |---------------------------------------------------------------|
   DB.RDT   |                  Remote data type (see below)                 |
            |              depends on FT.RDM, FT.RDP, or FT.RDA             |
            |---------------------------------------------------------------|
   DB.TSK   |       Address of task for this device:  Printer get task      |
            |                    (depends on FT.TSK EQ 1)                   |
            |---------------------------------------------------------------|
   DB.TSK+2 |                       Keyboard get task                       |
            |                    (depends on FT.TSK EQ 1)                   |
            |---------------------------------------------------------------|
   DB.TSK+4 |                       Printer put task                        |
            |                    (depends on FT.TSK EQ 1)                   |
            |---------------------------------------------------------------|
   DB.TSK+6 |                       Keyboard put task                       |
            |                    (depends on FT.TSK EQ 1)                   |
            |---------------------------------------------------------------|
   DB.DCS   |                     Device control status                     |
   DB.ZER   |                                                               |
            |TS.|TS.|RNG|TS.|TS.|TS.|TS.|TS.|TS.|TS.|TS.|TS.|TS.|TS.|TS.|TS.|
            |ADL|DSR|CAR|DTR|CRL|LMD|TIW|FRM|TAB|TAP|PAG|IMO|IMI|FRZ|.LC|DFE|
            |---------------------------------------------------------------|
   DB.MML   |                     Maximum message length                    |
            |                           for device                          |
            |---------------------------------------------------------------|
   DB.DCM   |                               |       Data code and mode      |
            |                               |          (see below)          |
            |   |   |   |   |   |   |   |   |  |DCM|DCM|DCM|DCM|DCM|DCM|DCM |
            |   |   |   |   |   |   |   |   |  |.CF|.XX|.DI|.HO|.IM|.EB|.AS |
            |---------------------------------- ----------------------------|
   DB.RLA   |                      Remote link address                      |
            |                                                               |
            |---------------------------------------------------------------|
   DB.SCB   |              SCB address for user of this device              |
            |                                                               |
            |---------------------------------------------------------------|
   DB.OBF   |               Pointer to from-10 (output) buffer              |
            |                                                               |
            |---------------------------------------------------------------|
   DB.OLN   |                   Length of current message                   |
            |                                                               |
            |---------------------------------------------------------------|
   DB.OCN   |                 Count for current sub-message                 |
            |                                                               |
            |---------------------------------------------------------------|

   ANF-10 FRONT END TABLES                                       Page A-7



            |---------------------------------------------------------------|
   DB.OAD   |                      Current byte pointer                     |
            |                                                               |
            |---------------------------------------------------------------|
   DB.OPC   |                 PC to run at when in run queue                |
            |                                                               |
            |---------------------------------------------------------------|
   DB.ODR   |     Current column number     |        Number of output       |
   DB.COL   |                               |         data requests         |
            |---------------------------------------------------------------|
   DB.IDR   |      Compressed character     |        Number of input        |
   DB.CCN   |             Count             |         data requests         |
            |---------------------------------------------------------------|
   DB.TIM   |        Timer type code        |          Timer value          |
            |                               |negative=seconds,positive=jiff |
            |---------------------------------------------------------------|
   DB.HLD   |                      Character being held                     |
            |             (used when outputing free CRLF, ...)              |
            |---------------------------------------------------------------|
   DB.VFU   |                 Pointer to line-printer's VFU                 |
            |                                                               |
            |---------------------------------------------------------------|
   DB.CHR   |                  Character being uncompressed                 |
            |                                                               |
            |---------------------------------------------------------------|
   DB.IBF   |               Pointer to to-ten (input) buffers               |
            |                                                               |
            |---------------------------------------------------------------|
   DB.ICC   |                               |     Input character count     |
            |                               |                               |
            |---------------------------------------------------------------|
   DB.ICN   |              Input message count:  total message              |
            |                                                               |
            |---------------------------------------------------------------|
   DB.ICN+2 |           Incremental count for current sub message           |
            |                                                               |
            |---------------------------------------------------------------|
   DB.ICN+4 |                Address of field for byte count                |
            |                                                               |
            |---------------------------------------------------------------|
   DB.IAD   |                    Input character address                    |
            |                                                               |
   DB.SIZ=> +---------------------------------------------------------------+


   End of standard DDB.

   The following pages contain the terminal-dependent data.
   ANF-10 FRONT END TABLES                                       Page A-8



            +--------------------------------------------------------------+
   DB.BIT   |                       Line number mask:                      |
            |        PDP-11 bit number "N" is set for line number "N"      |
            |--------------------------------------------------------------|
   DB..LN   |   Fill timer for <^H> <010>   |    4 bit binary line number  |
   DB.FIL   |          (backspace)          |                              |
            |--------------------------------------------------------------|
   DB.FIL+2 |   Fill timer for <LF> <012>   |   Fill timer for <^I> <011>  |
            |          (line feed)          |             (tab)            |
            |--------------------------------------------------------------|
   DB.FIL+4 |   Fill timer for <FF> <014>   |   Fill timer for <VT> <013>  |
            |          (form feed)          |         (vertical tab)       |
            |--------------------------------------------------------------|
   DB.EPL   |       Serial number for       |    Fill time for <CR> <015>  |
            |   Echo pipeline marker (EPL)  |       (carriage return)      |
            |--------------------------------------------------------------|
   DB.LCB   |                         Pointer to LCB                       |
            |            for physical line to user of this device          |
            |--------------------------------------------------------------|
   DB.DNS   |     DN-11 timer (seconds)     |   DN-11 table displacement   |
   DB.DNT   |      (depends on FTDN11)      |   & stats (depends on FTDN11)|
            |--------------------------------------------------------------|
   DB.TTS   |                     TTY status (see below)                   |
            |                                                              |
            |   |   |   |   |   |   |   |   |   |   |   |   |   |  |CHR|TT.|
            |   |   |   |   |   |   |   |   |   |   |   |   |   |  |APL|APL|
            |--------------------------------------------------------------|
   DB.DNR   |                 DN-11 request word (see below)               |
   DB.TZR   |                      (depends on FTDN11)                     |
            |--------------------------------------------------------------|
   DB.BCD   |                BCD terminal status  (see below)              |
            |                      (depends on FT2741)                     |
            |BCD|BCD|BCD|BCD|BCD| <==| BCD|==> |BCD|BCD|BCD|BCD|BCD|BCD|BCD|
            |274|XRB|KBL|PRL|CDB|    | COD |BRK|UPS|OCR|RCR|CON|TDY|APL|HDB|
            |--------------------------------------------------------------|
   DB.STR   |                   Pointer to string to type                  |
            |                                                              |
            |--------------------------------------------------------------|
   DB.TOC   |              Number of output characters in chunk            |
            |                                                              |
            |--------------------------------------------------------------|
   DB.TOB   |                       TTY output buffer:                     |
            |                   pointer to first character                 |
            |--------------------------------------------------------------|
   DB.TOB+2 |                   Pointer to last character                  |
            |                                                              |
            |--------------------------------------------------------------|
   ANF-10 FRONT END TABLES                                       Page A-9



            |--------------------------------------------------------------|
   DB.ASP   |         Character for         |         ASAP character       |
   DB.BUF   |         DH-11 to type         |           (^G, ...)          |
            |--------------------------------------------------------------|
   DB.FTM   |                Fill time for current character               |
            |                                                              |
            |--------------------------------------------------------------|
   DB.PCN   |          Printer count (number of characters from NCL)       |
            |      (this and the following words depend on FT.TSK EQ 1)    |
            |--------------------------------------------------------------|
   DB.PPT   |                     Printer putter pointer                   |
            |                                                              |
            |--------------------------------------------------------------|
   DB.PTK   |                     Printer taker pointer                    |
            |                                                              |
            |--------------------------------------------------------------|
   DB.KPT   |                    Keyboard putter pointer                   |
            |                                                              |
            |--------------------------------------------------------------|
   DB.KTK   |                     Keyboard taker pointer                   |
            |                                                              |
            |--------------------------------------------------------------|
   DB.KQU   /                        Keyboard queue                        /
            |                    (length is "TQS" words)                   |
   DB.TSZ=> +--------------------------------------------------------------+




   A.2.1  DB.STS


        Bit       Value     Description        ___       _____     ___________

        DS.CAC    000001    Send out CONNECT ACCEPT
        DS.DSC    000002    Send out DISCONNECT CONFIRM
        DS.QUE*   000004    Device has a RUN request in queue
        DS.OUT*   000010    Device does output
        DS.ACT*   000020    Device is ACTIVE
        DS.DIE    000040    Abort, other end of connection died
        DS.IST    000100    Input stopped by XOFF
        DS.PAU    000200    Task is using TTY for input (FT.TSK=1)
        DS.Q10    000400    Task has queued characters to ten (FT.TSK=1)
        DS.COR    001000    Device wants core to run
        DS.XCH    002000    Send CHARACTERISTICS message
        DS.EPL    004000    Send echo pipeline marker
        DS.IQU    010000    Input has been queued to NCL
        DS.TTY*   020000    Device is a terminal
        DS.XDS    040000    Send DB.DCS to other node
        DS.CON    100000    Device is CONNECTED

        * = Bits cleared on DDB initialization (CLRDDB)
   ANF-10 FRONT END TABLES                                      Page A-10


   A.2.2  DB.RDT (Remote Data Type)


        Bit       Value     Description        ___       _____     ___________

        RDEMPT    000001    Multipoint
        RDEPTP    000002    Point-to-Point
        RDEASC    000004    ASCII
        RDEBRK    100000    ASCII break was seen



   A.2.3  DB.DCS Bits For Terminals

        Bit       Value     Description        ___       _____     ___________

        TS.DFE     000001   Deferred echo mode
        TS..LC*   000002    Lower case mode
        TS.FRZ    000004    Output frozen by XOFF
        TS.IMI    000010    Input image mode
        TS.IMO    000020    Output image mode
        TS.PAG    000040    TTY paging enabled (XON/XOFF)
        TS.TAP    000100    Paper tape mode
        TS.TAB*   000200    Hardware tabs
        TS.FRM*   000400    Hardware form feeds
        TS.TIW    001000    Terminal is in input wait
        TS.LMD    002000    Terminal is in line mode
        TS.CRL    004000    No free CRLF
        TS.DTR*   010000    DTR is present on line
        TS.RNG*   020000    RING is present on line
        TS.CAR*   020000    CARRIER is present on line
        TS.DSR*   040000    DSR is present on line
        TS.ADL    100000    Line is an auto-dial line (BELL 801)

        * = Preserved on a system restart



   A.2.4  DB.DCS Bits For Line Printers

        Bit       Value     Description        ___       _____     ___________

        LPT.FE     000001    Fatal error
        LPT.FL     000002    Offline
        LPT.PZ     000004    Page count zero
        LPT.VE     000010    VFU error
        LPT.RE     000020    RAM error
        LPT.IC     000040    Illegal
        LPT.OV     000100    Optical VFU
        LPT.PE     000200    Parity
        LPT.DE     000400    Demand
        LPT.ME     001000    Master synch error
        LPT.RV     002000    Receiving VFU data from the 10
        LPT.RR     004000    Receiving RAM data from the 10
   ANF-10 FRONT END TABLES                                      Page A-11


   A.2.5  DB.DCM Bits

        Bit       Value     Description        ___       _____     ___________

        DCM.AS    001       ASCII
        DCM.EB    002       EBCDIC
        DCM.IM    004       Image mode
        DCM.HO    010       Hollerith mode (card-reader only)
        DCM.DI    020       DEC Image mode (card-reader only)
        DCM.XX    040       Reserved
        DCM.CF    100       Compressed data mode




   A.2.6  DB.TTS Bits


        Bit       Value     Description        ___       _____     ___________

        TT.APL    000001    Terminal is in APL mode
        CHRAPL    000002    This is an APL character




   A.2.7  DB.BCD Bits


        Bit       Value     Description        ___       _____     ___________

        BCD274    100000    This line is a 2741
        BCDXRB    040000    Sending a reverse break
        BCDKBL    040000    Keyboard is currently locked
        BCDPRL    010000    Printer is currently locked
        BCDCDB    004000    Last time line was reversed was to get input
        BCDCOD    003400    Code for current golf ball
        BCDBRK    000200    Currently processing a receive BREAK
        BCDUPS    000100    Set if in upper shift mode
        BCDOCR    000040    Set if last character xmitted was a <CR>
        BCDRCR    000020    Set if last character received was a <CR>
        BCDCON    000010    Set if last character was a control fan ()
        BCDTDY    000004    Set if terminal is in TTY TIDY mode
        BCDAPL    000002    Set if terminal is in APL mode
        BCDHDB    000001    Set if terminal has DEBREAK feature

   Notes:

        The symbol FIRDDB points to the first DDB in the system.
        Start zeroing at DB.ZER on a restart.
        Value of TQS (number of words in keyboard queue) is 20 octal.

   ANF-10 FRONT END TABLES                                      Page A-12


   A.3  DH-11 BLOCK


   Description:   Contain device dependent information pertaining to each
                  DH11.   One  such  block  for each DH11.  Referenced by
                  DH BLK where " " is the DH-11 number (0,1,2,...)

   Defined in:    DNDH11.P11

             +-------------------------------------------------------------+
   0         |                 Hardware address of this DH-11              |
             |                       (0 if not present)                    |
             |-------------------------------------------------------------|
   DHBBAR    |                       Active lines mask                     |
             |           PDP-11 bit "N" is on if line "N" is active        |
             |-------------------------------------------------------------|
   DHB.BN    |               Line number on node of first line             |
             |                         on this DH-11                       |
             |-------------------------------------------------------------|
   DHB.DM    |               Address of DM-11BB for this DH-11             |
             |                          (0 if none)                        |
             |-------------------------------------------------------------|
   DHB.VC    |                  Vector address of this DH-11               |
             |                                                             |
             |-------------------------------------------------------------|
   DHB.LC    /          This space contains the line control blocks        /
             |                      (LC..SZ X 20 words)                    |
   DHB.SZ==> +-------------------------------------------------------------+

   Notes:

        DHB.SZ = DHB.LC + (LC..SZ X 20)
   ANF-10 FRONT END TABLES                                      Page A-13


|  A.4  DMC11 BASE TABLE
|
|
|  Description:   Contains device dependent information for  each  DMC11.
|                 One  such  block  for each DMC11.  Referenced by DMBAS
|                 where " " is the DMC11 number (0 - DMCN).
|
|  Defined in:    DNCDMC.P11
|
|             +------------------------------------------------------------+
|             |                               |              Fill          |
|             |                               |           (5 bytes)        |
|             |------------------------------------------------------------|
|             |                               |                            |
|             |                               |                            |
|             |------------------------------------------------------------|
|             |        Received NAK's         |                            |
|   MB.RNK    |                               |                            |
|             |------------------------------------------------------------|
|   MB.XNB    |          Sent NAK's           |          Sent NAK's        |
|   MB.XNH    |          bad header           |          no buffer         |
|             |------------------------------------------------------------|
|   MB.XND    |          Sent REP's           |          Sent NAK's        |
|   MB.XRP    |                               |           Data BCC         |
|             |------------------------------------------------------------|
|   MB.RRP    |         Fill to end           |        Received REP's      |
|   MB.XX     |    (255. - MB.RRP bytes)      |                            |
|             |------------------------------------------------------------|
|             /                               /                            /
|             |                               |                            |
|   MB.LEN==> +------------------------------------------------------------+
|
|  Notes:
|
|       MB.LEN=D256
|       DMCLB0 is the address of the first DMC11 line.
|
|       The first five bytes, and the remaining bytes after  MB.RRP,  are
|       used  for  other  counters  by the DMC11, but are not used by the
|       DMC11 driver.  For further information regarding the base  table,
|       refer to the DMR11 Synchronous Controller User's Guide.
   ANF-10 FRONT END TABLES                                      Page A-14


   A.5  DMC11 MESSAGE BUFFERS


   Description:   Blocks of physically  contiguous  memory  used  by  the
                  DMC11  to send and receive data.  Buffers are shared by
                  all DMC11's on the system.  Referenced by  CB..   where
                  " " is the buffer number (0 - CB.NUM).

   Defined in:    DNCDMC.P11

              +------------------------------------------------------------+
    CB.LNK    |                      Link to next buffer                   |
              |                                                            |
              |------------------------------------------------------------|
    CB.CNT    |                   Number of bytes in buffer                |
              |                                                            |
              |------------------------------------------------------------|
    CB.DAT    /                           Data area                        /
              |                         (MSGMAX bytes)                     |
    CB.LEN==> +------------------------------------------------------------+


   Notes:

        MSGMAX defaults to D512 bytes.
        CB.NUM is the total number of buffers in the system.
        CB.NUM = DMCN X <DMCIBF + DMCOBF> where:
             DMCN is the number of DMC11's on the system
             DMCIBF is the number of input buffers
             DMCOBF in the number of output buffers.

        DMCIBF and DMCOBF default to 4.
        CBFRST is the address of the first buffer.
        CBFSTF is the address of the first free buffer.
        CBFREC is the count of free buffers.

   ANF-10 FRONT END TABLES                                      Page A-15


   A.6  DMC11 MESSAGE BUFFER QUEUES


   Description:   Contain pointers to DMC-11 buffers.   Allocated  within
                  each Line Block on systems with DMC-11s.

   Defined in:    DNCDMC.P11

              +------------------------------------------------------------+
    CBQ.CT    |                          Queue length                      |
              |                                                            |
              |------------------------------------------------------------|
    CBQ.FS    |                    Address of first buffer                 |
              |                                                            |
              |------------------------------------------------------------|
    CBQ.LS    |                     Address of last buffer                 |
              |                                                            |
    CBQ.LN==> +------------------------------------------------------------+
   ANF-10 FRONT END TABLES                                      Page A-16


|  A.7  DN11 BLOCK
|
|
|  Description:   Contain status and device information for each line  of
|                 an  automatic calling unit.  Referenced by DN BLK where
|                 " " is the DN11 number (0 - DN11N).
|
|            Defined in:  DNDN11.P11
|
|
|             +------------------------------------------------------------+
|             |                    Hardware status register                |
|             |                                                            |
|             |------------------------------------------------------------|
|             |                 DDB address for associated ACU             |
|             |                                                            |
|             |------------------------------------------------------------|
|   DNPTR     |                  Pointer to last digit dialed              |
|             |                                                            |
|             |------------------------------------------------------------|
|             /                               /        Digits to dial      /
|             |                               |  (^D18 bytes, first is NUL)|
|             |------------------------------------------------------------|
|             /       Last digit is 017       /                            /
|             |                               |                            |
|   DNTABL==> +------------------------------------------------------------+
|
|  Notes:
|
|       The first digit is always NUL.
|       The last digit is always 017.
|       One DN11 can handle up to 4 lines.
|
   ANF-10 FRONT END TABLES                                      Page A-17


|  A.8  DZ11 BLOCK
|
|
|  Description:   Contain device dependent information pertaining to each
|                 DZ11.   One  such  block  for each DZ11.  Referenced by
|                 DZ BLK where " " is the DZ11 number (0 - NDZ11).
|
|  Defined in:    DNDZ11.P11
|
|
|             +------------------------------------------------------------+
|   DZADDR    |               Hardware address for this DZ11               |
|             |                                                            |
|             |------------------------------------------------------------|
|   DZB.BN    |              Line number on node of first line             |
|             |                        of this DZ11                        |
|             |------------------------------------------------------------|
|   DZB.VC    |                 Vector address of this DZ11                |
|             |                                                            |
|             |------------------------------------------------------------|
|   DZB.BR    |                         Break bits                         |
|             |                                                            |
|             |------------------------------------------------------------|
|   DZB.LC    /         This space contains the line control blocks        /
|             |                    (LC..SZ X 10 words)                     |
|   DZB.SZ==> +------------------------------------------------------------+
|
|  Notes:
|
|       DZB.SZ = DZB.LC + <LC..SZ X 10>
|
   ANF-10 FRONT END TABLES                                      Page A-18


   A.9  LINE BLOCK


   Description:   Contain information for DDCMP  lines.   One  block  for
                  each  DDCMP line.  Referenced by LBLK  where " " is the
                  line number (0,1,2,...NTLINE).

   Defined in:    DNCNFG.P11


           +---------------------------------------------------------------+
   LB.STS  |                        Line status bits                       |
           |                          (see below)                          |
           |LS.|MPT|LS.|LS.|LS.|LS.|LS.|LS.|LS.|LS.|LS.|LS.|LS.|LS.|LS.|LS.|
           |.SS|NSP|SSY|XDT|XCT|.RN|.XG|.RG|.XQ|.RQ|NRP|XRP|XAK|XNK|STK|.ST|
           |---------------------------------------------------------------|
   LB.ST5  |                       Second status word                      |
           |                          (see below)                          |
           |L2.|   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
           |DDP|   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |
           |---------------------------------------------------------------|
   LB.LNK  |                    Link to next line block                    |
           |                                                               |
           |---------------------------------------------------------------|
   LB.DDB  |                 Addr. of associated DDP device                |
           |                    (depends on FT.DDP NE 0)                   |
           |---------------------------------------------------------------|
   LB.BIT  |                Bit corresponding to line number               |
           |       (PDP-11 bit number "N" is on for line number "N")       |
           |---------------------------------------------------------------|
   LB.LNU  |  Device service routine code  |          Line number          |
   LB.DVS  |          (see below)          |             binary            |
           |---------------------------------------------------------------|
   LB.LVL  |                         Level for link                        |
           |                                                               |
           |---------------------------------------------------------------|
   LB.DHB  |            Asynch:  DH11/DZ11 device control block            |
   LB.SLA  |                 Synch:  line hardware address                 |
           |---------------------------------------------------------------|
   LB..LN  |                   Asynch:  4 bit line number                  |
   LB.SLV  |            Synch:  synchronous line vector address            |
           |---------------------------------------------------------------|
   LB.LCB  |          DH11/DZ11 only:  line control block address          |
           |                 (Depends on DH.MAX+DZ.MAX > 0)                |
           |---------------------------------------------------------------|
   LB.MPL  |             Link to next line drop for multipoint             |
           |                      (depends on FT.MPT)                      |
           |---------------------------------------------------------------|
   ANF-10 FRONT END TABLES                                      Page A-19



           |---------------------------------------------------------------|
   LB.MPN  |           Multipoint next station selection control           |
           |                      (depends on FT.MPT)                      |
           |---------------------------------------------------------------|
   LB.MPA  |    Multipoint select timer    |  Multipoint station address   |
   LB.MPT  |      (depends on FT.MPT)      |      (depends on FT.MPT)      |
           |---------------------------------------------------------------|
   LB.MPS  |   Additional control status   |    Multipoint node status     |
           |      (depends on FT.MPT)      |      (depends on FT.MPT)      |
           |   |   |   |   |   |   |   |   |MP.|MP.|MP.|MP.|   |MP.|   |MT.|
           |   |   |   |   |   |   |   |   |SEL|OFF|SOL|SNM|   |RTS|   |CMS|
           |---------------------------------------------------------------|
   LB.NSS  |                     NSP status (see below)                    |
           |                      (Depends on FTDCP1)                      |
           |   |NS.|NS.|NS.|   |NS.|   |   |   |   |   |   |   |   |   |   |
           |   |STR|EDS|CNF|   |NSQ|   |   |   |   |   |   |   |   |   |   |
           |---------------------------------------------------------------|
   LB.NNM  |         Node number he        |        Node number for        |
   LB.DNA  |            talks to           |            NSP node           |
           |---------------------------------------------------------------|
   LB.MML  |                     Maximum message length                    |
           |                                                               |
           |---------------------------------------------------------------|
   LB.SNM  /          Software ID          /          Station name         /
   LB.SID  |         (SIDSIZ bytes)        |         (SNMSIZ bytes)        |
           |---------------------------------------------------------------|
   LB.DAT  /   Configuration information   /              Date             /
   LB.CNF  |         (NSPCFS bytes)        |         (DATESZ bytes)        |
           |---------------------------------------------------------------|
   LB.VNN  |    ANF node name for DECNET   |   ANF node number for DECNET  |
   LB.VNM  | (depends on FTDCP4) (6 bytes) |   (depends on FTDCP3!FTDCP4)  |
           |---------------------------------------------------------------|
           |                               |                               |
           |                               |                               |
           |---------------------------------------------------------------|
           |                               |                               |
           |                               |                               |
           |---------------------------------------------------------------|
           |   DECNET node number for ANF  |                               |
   LB.HNN  |                               |                               |
           |---------------------------------------------------------------|
   LB.HNM  |                               |    DECNET node name for ANF   |
           |                               |           (6 bytes)           |
           |---------------------------------------------------------------|
           |                               |                               |
           |                               |                               |
           |---------------------------------------------------------------|
           |                               |                               |
           |                               |                               |
           |---------------------------------------------------------------|
   LB.CNN  /          Options list         /      ANF node to recieve      |
   LB.CNF  |        (NSP$MX+1 bytes)       |        DECNET connects        |
           |---------------------------------------------------------------|
   ANF-10 FRONT END TABLES                                      Page A-20



           |---------------------------------------------------------------|
   LB.OCN  |                     Count of ACKs received                    |
           |                       for messages sent                       |
           |---------------------------------------------------------------|
   LB.OCN+2|                 Total number of NAKs received                 |
           |                                                               |
           |---------------------------------------------------------------|
   LB.OCN+4|                 NAKs received for REP responses               |
           |                                                               |
           |---------------------------------------------------------------|
   LB.OCN+6|                NAKs received because of bad BCC               |
           |                                                               |
           |---------------------------------------------------------------|
   LB.OCN+1|                   NAKs received for no room                   |
           |                                                               |
           |---------------------------------------------------------------|
   LB.ICN  |                 Number of messages received OK                |
           |                                                               |
           |---------------------------------------------------------------|
   LB.ICN+2|                       Total bad messages                      |
           |                                                               |
           |---------------------------------------------------------------|
   LB.ICN+4|                Total transmitted REPs which won               |
           |                         NAK responses                         |
           |---------------------------------------------------------------|
   LB.BNN  |         Bootstrapping         |         Bootstrapping         |
           |             timer             |          node number          |
           |---------------------------------------------------------------|
   LB.FB   |                      First DMC-11 buffer                      |
           |                     (depends on DMCN NE 0)                    |
           |---------------------------------------------------------------|
   LB.BAS  |                     Address of DMC-11 base                    |
           |                     (depends on DMCN NE 0)                    |
           |---------------------------------------------------------------|
   LB.WHA  |                  Address of caller of L.DOWN                  |
           |                      (depends on FTWHYD)                      |
           |---------------------------------------------------------------|
   LB.WHS  |        Copy of LB.OBF+4       |    # of last ACKed message    |
   LB.WHN  |      (depends on FTWHYD)      |      (depends on FTWHYD)      |
           |---------------------------------------------------------------|
   LB.STX  |                    For DMC-11:  status word                   |
           |            For DUP-11:  dispatch address for driver           |
           |   |   |   |   |   |   |   |   |   |   |   |   |   |LS2|LS2|LS2|
           |   |   |   |   |   |   |   |   |   |   |   |   |   |RUN|WAI|MAI|
           |---------------------------------------------------------------|
   LB.STY  |                     Status word for DUP-11                    |
           |                      (depends on FTDUP11)                     |
           |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |UP$|
           |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |RCC|
           |---------------------------------------------------------------|
   ANF-10 FRONT END TABLES                                      Page A-21



           |---------------------------------------------------------------|
   LB.LCT  |                       Active link count                       |
           |                      (depends on FTDCP1)                      |
           |---------------------------------------------------------------|
   LB.LKT  |                     Pointer to link table                     |
           |                      (depends on FTDCP1)                      |
           |---------------------------------------------------------------|
   LB.LLE  |                        Last link entry                        |
           |                      (depends on FTDCP1)                      |
           |---------------------------------------------------------------|
   LB.NSS  |                    Status word (see below)                    |
           |                 (depends on FTDCP3 or FTDCP4)                 |
           |   |   |   |   |   |   |   |   |   |   |   |   |   |LBS|LBS|LBS|
           |   |   |   |   |   |   |   |   |   |   |   |   |   |.NQ|.L1|.IC|
           |---------------------------------------------------------------|
   LB.LEB  |                      Pointer to LEB chain                     |
           |                 (depends on FTDCP3 or FTDCP4)                 |
           |---------------------------------------------------------------|
   LB.SCB  |               SCB address for node at other end               |
           |                     of this physical link                     |
           |---------------------------------------------------------------|
   LB.2ND  |               Pointer to next line block in the               |
           |                    event of parallel lines                    |
           |---------------------------------------------------------------|
   LB.REP  |                           REP timer                           |
           |                   counted down once a second                  |
           |---------------------------------------------------------------|
   LB.ROK  |      Last message number      |      Last message number      |
   LB.LAR  |          ACK received         |          received OK          |
           |---------------------------------------------------------------|
   LB.LAP  |        Highest message        |      Last message number      |
   LB.HSN  |          number sent          |         ACK processed         |
           |---------------------------------------------------------------|
   LB.RDC  |       Last NAK code sent      |           REP timer           |
   LB.NCD  |                               |      (incr once a second)     |
           |---------------------------------------------------------------|
   LB.TRY  |                               |Count of BCC NAKS rcvd for firs|
           |                               |message in queue (under FT.BIG)|
           |---------------------------------------------------------------|
   LB.XDN  |             Routine to JSR to on synchronous line             |
           |                    transmit done interrupts                   |
           |---------------------------------------------------------------|
   LB.CTL  /                Next control message to transmit               /
           |                           (10 bytes)                          |
           |---------------------------------------------------------------|
   ANF-10 FRONT END TABLES                                      Page A-22



           |---------------------------------------------------------------|
   LB.COB  |                     Current output buffer                     |
           |        Word 1 = Pointer to 1st chunk of current message       |
           |---------------------------------------------------------------|
   LB.COB  |               Word 2 = Pointer to current chunk               |
           |                                                               |
           |---------------------------------------------------------------|
   LB.COB  |                 Word 3 = Number of bytes left                 |
           |                                                               |
           |---------------------------------------------------------------|
   LB.BOO  |              Pointer to bootstrap message to send             |
           |                                                               |
           |---------------------------------------------------------------|
   LB.OBF  |                        Output buffers                         |
           |                Word 1 = Address of first buffer               |
           |---------------------------------------------------------------|
   LB.OBF+2|             Word 2 = Address of last buffer (or 0)            |
           |                                                               |
           |---------------------------------------------------------------|
   LB.OBF+4|              Word 3 = Number of messages in queue             |
           |                                                               |
           |---------------------------------------------------------------|
   LB.RDN  |               Dispatch address for receive done               |
           |                                                               |
           |---------------------------------------------------------------|
   LB.CIB  |          Current input buffer   (current chunk address)       |
           |                                                               |
           |---------------------------------------------------------------|
   LB.CIB+2|              Number of characters left in message             |
           |                                                               |
           |---------------------------------------------------------------|
   LB.SXR  |                     Transmitter address #1                    |
           |                                                               |
           |---------------------------------------------------------------|
   LB.SXR+2|                   Transmitter word count #1                   |
           |                                                               |
           |---------------------------------------------------------------|
   LB.SXR+4|                     Transmitter address #2                    |
           |                                                               |
           |---------------------------------------------------------------|
   LB.SXR+6|                   Transmitter word count #2                   |
           |                                                               |
           |---------------------------------------------------------------|
   ANF-10 FRONT END TABLES                                      Page A-23



           |---------------------------------------------------------------|
   LB.SRR  |                      Receiver address #1                      |
           |                                                               |
           |---------------------------------------------------------------|
   LB.SRR+2|                     Receiver word count #1                    |
           |                                                               |
           |---------------------------------------------------------------|
   LB.SRR+4|                      Receiver address #2                      |
           |                                                               |
           |---------------------------------------------------------------|
   LB.SRR+6|                     Receiver word count #2                    |
           |                                                               |
           |---------------------------------------------------------------|
   LB.SLE  |           Count of synchronous line error interrupts          |
           |     (depends on FT.SLB - synchronous line error reporting)    |
           |---------------------------------------------------------------|
   LB.SLE+2|            Hardware status on last error interrupt            |
           |     (depends on FT.SLB - synchronous line error reporting)    |
           |---------------------------------------------------------------|
   LB.SLE+4|            Count of synchronous line xmit timeouts            |
           |     (depends on FT.SLB - synchronous line error reporting)    |
           |---------------------------------------------------------------|
   LB.CTY  |           Address of string to type on CTY for line           |
           |                 (depends on FT.HLP and FT.SLB)                |
           |---------------------------------------------------------------|
   LB.CRS  |         Synchronous interface status at crash - word 0        |
           |                 (depends on DEBUG and FT.SLB)                 |
           |---------------------------------------------------------------|
   LB.CRS+2|         Synchronous interface status at crash - word 1        |
           |                 (depends on DEBUG and FT.SLB)                 |
           |---------------------------------------------------------------|
   LB.CRS+4|         Synchronous interface status at crash - word 2        |
           |                 (depends on DEBUG and FT.SLB)                 |
           |---------------------------------------------------------------|
   LB.CRS+6|         Synchronous interface status at crash - word 3        |
           |                 (depends on DEBUG and FT.SLB)                 |
           |---------------------------------------------------------------|
   LB.IPT  |                          Input putter                         |
           |              relative to beginning of line block              |
           |---------------------------------------------------------------|
   LB.ITK  |                          Input taker                          |
           |              relative to beginning of line block              |
           |---------------------------------------------------------------|
   LB.IBF  /  Input buffers:  First 8 bytes are DDCMP ctrl msg or header.  /
           |      Word 5 is link to rest of message.  length=5*NINBUF      |
   LB.SIZ=>+---------------------------------------------------------------+

   Notes:

        This is the end of the standard Line Block.
        Optional sections are layed out on the following pages.

   ANF-10 FRONT END TABLES                                      Page A-24


   This is the DMC-11 specific section of the Line  Block,  beginning  at
   LB.IBF.

             +-------------------------------------------------------------+
   LB.INQ    /                  Buffers given to DMC to fill               /
             |                        (CBQ.LN words)                       |
             |-------------------------------------------------------------|
   LB.IND    /                 Filled buffers returned by DMC              /
             |                        (CBQ.LN words)                       |
             |-------------------------------------------------------------|
   LB.OUT    /                   Buffers queued to be sent                 /
             |                        (CBQ.LN words)                       |
             |-------------------------------------------------------------|
   LB.TMO    |                    Timer to time out DMC-11                 |
             |                                                             |
             +-------------------------------------------------------------+



   A.9.1  LB.STS Bits


        Bit       Value     Description        ___       _____     ___________

        LS..ST    000001    Send a START
        LS.STK    000002    Send a STACK
        LS.XNK    000004    Send a NAK
        LS.XAK    000010    Send an ACK
        LS.XRP    000020    Send a REP message
        LS.NRP    000040    Need response to REP message
        LS..RQ    000100    RCV interrupt queued
        LS..XQ    000200    XMIT done interrupt queued
        LS..RG    000400    Sync receiver active
        LS..XG    001000    Sync transmitter active
        LS..RN    002000    Received NAK
        LS.XCT    004000    Transmitting a CONTROL message
        LS.XDT    010000    Transmitting a DATA message
        LS.SSY    020000    Strip sync before next message
        LS.MPT    040000    Multi-point line
        LS.NSP    040000    NSP  line  (depends  on  FTDCP1,  FTDCP3   or
                            FTDCP4)
        LS..SS    100000    Stripping sync now




   A.9.2  LB.ST5 Bits


        Bit       Value     Description        ___       _____     ___________

        L2.DDP    100000    Line block in use as a DDP device

   ANF-10 FRONT END TABLES                                      Page A-25


   A.9.3  LB.DVS (Interrupt Service Routine) Codes


        0 = LS..DP     DP11 Line
        2 = LS..DS     DS11 Line
        4 = LS..DU     DU11 Line
        6 = LS..DV     DV11 Line
        10= LS..DQ     DQ11 Line
        12= LS..UP     DUP11 Line
        14= LS..DM     DMC11 Line
        16= LS..DH     DH11 Line
        20= LS..DZ     DZ11 Line




   A.9.4  LB.MPS (Node Status)


        Bit       Value     Description        ___       _____     ___________

        MP.SFF    017       Selection failure count
        MP.SEL    200       Station selected
        MP.OFF    100       Station offline
        MP.SOL    040       Set offline when deselected
        MP.SNM    020       Set select bit in next message transmitted
        MP.RTS    004       Inhibits setting of RTS
        MP.CMS    001       Set to enable MP.RTS transition




   A.9.5  LB.NSS Bits (FTDCP1)


        Bit       Value     Description        ___       _____     ___________

        NS.STR    040000    Strip always
        NS.EDS    020000    Enable dynamic stripping
        NS.NSQ    020000    Something in queue for this line
        NS.CNF    010000    Send CONFIGURATION message




   A.9.6  LB.STX Bits


        Bit       Value     Description        ___       _____     ___________

        LS2MAI    000001    Maintenance mode
        LS2WAI    000002    Waiting for memory or buffers
        LS2RUN    000004    DMC is running

   ANF-10 FRONT END TABLES                                      Page A-26


   A.9.7  LB.STY Bits


        Bit       Value     Description        ___       _____     ___________

        UP$RCC    000001    Set if BCC is good when service is called



   A.9.8  LB.NSS Bits (FTDCP3 Or FTDCP4)

        Bit       Value     Description        ___       _____     ___________

        LBS.IC    000001    In contact with NSP
        LBS.L1    000002    NSP node is level 1 (intercept node)
        LBS.NQ    000004    Node is in NSP queue

   Notes:

        Words LB.NNM through LB.DAT depend on FTDCP1 being set.

        Words LB.VNN through LB.CNN depend on FTDCP3 or FTDCP4 being set.

        LB.SXR and LB.SRR depend on at least one of the following being
        non-negative (Asynchronous DDCMP or no DQ-11s):

             FTDP11, FTDS11, FTDU11, FTDUP11, (NTLINE-NLINES)

        Start zeroing from LB.ZER on a restart.

        Default value of NINBUF is 4.

   ANF-10 FRONT END TABLES                                      Page A-27


   A.10  LINE CONTROL BLOCK


   Description:   Contain control information pertaining to each terminal
                  line.  One block for each terminal line.  Referenced by
                  "LCB " where " " is the line number.

   Defined in:    DNCNFG.P11


           +---------------------------------------------------------------+
   LC.CAR  |                      DM-11BB control word                     |
           |                  bits  0-9 are timer (LCB.TM)                 |
           |   |   |LCB|LCB|   |   |   |   |   |   |   |   |   |   |   |   |
           |   |   |.AB|.DS|   |   |   |   |   |   |   |   |   |   |   |   |
           |---------------------------------------------------------------|
   LC.STA  |      Number of times LPR      |     State of modem control    |
   LC.MOD  |          is modified          |   (see next page for values)  |
           |---------------------------------------------------------------|
   LC.XSP  |      Coded receive speed      |      Coded transmit speed     |
   LC.RSP  |    (whole word is "LC.SPD")   |                               |
           |---------------------------------------------------------------|
   LC.PXS  |Saved RCV speed for non auto-bd|Saved xmit speed for non auto-b|
   LC.PRS  |    (whole word is "LC.PSP")   |         data-set lines        |
           |---------------------------------------------------------------|
   LC.BLK  |                       Link to DDB or LB                       |
           |                                                               |
           |---------------------------------------------------------------|
   LC.INS  |               Address of input service processor              |
           |                                                               |
           |---------------------------------------------------------------|
   LC.OUS  |              Address of output service processor              |
           |                                                               |
           |---------------------------------------------------------------|
   LC.CNT  |                         Count of bytes                        |
           |                 (DZ-11 lines only, NDZ11 NE 0)                |
           |---------------------------------------------------------------|
   LC.BUF  |                    Buffer pointer for bytes                   |
           |                 (DZ-11 lines only, NDZ11 NE 0)                |
   LC..SZ=>+---------------------------------------------------------------+

   ANF-10 FRONT END TABLES                                      Page A-28


   A.10.1  LC.CAR Bits


        Bit       Value     Description        ___       _____     ___________

        LCB.BK    100000    Break character flag (framing error)
        LCB.IG    040000    Ignore line for one character
        LCB.AB    020000    Autobaud Line
        LCB.DS    010000    Data Set Line
        LCB.LS    004000    Low speed auto baud detect
        LCB.TM    00177     Timer




   A.10.2  LC.STA Bits (State Of Modem Control)


        Bit       Value     Description        ___       _____     ___________

        LCS.VG              Virgin state
        LCS.RG    002       Ringing
        LCS.CD    004       Carrier Detect
        LCS.CS    006       Carrier detect staisfied (2 second wait)
        LCS.AB    010       Auto Bauding
        LCS.RU    012       Running unconnected (No -10 connected)
        LCS.RW    014       Running waiting for -10 connection to finish
        LCS.RC    016       Running and connected to -10
        LCS.LC    020       Carrier lost
        LCS.HA    022       Want to hang up
        LCS.HG    024       Hung up, carrier off for 18 seconds
        LCS.DL    026       Dialer is running
        LCS.DS    030       Dialout succeeded
        LCS.DF    032       Dialout failed
        LCS.MX    032       Maximum state number for LC.STA




   A.10.3  LC.SPD Codes For Transmit And Receive Speeds


        Speed     Code      Speed          Code        _____     ____      _____          ____

        50        1         1800           12
        75        2         2200           13
        110       3         2400           14
        134.5     4         3600           15
        150       5         4800           16
        200       6         7200           17
        300       7         9600           20
        600       10        19200          21
        1200      11        EXTERNAL-A     22
                            EXTERNAL-B     23
   ANF-10 FRONT END TABLES                                      Page A-29


   A.11  PHASE II LINK ENTRY BLOCK


   Description:   Contains status and control information for the  DECNET
                  compatible  port connections.  Used with DECNET version
                  2.

   Defined in:    DNNSP3.P11


           +---------------------------------------------------------------+
   LE.STS  |                          Status bits                          |
           |                    (see descriptions below)                   |
           |LES|LES|LES|LES|LES|LES|LES|LES|LES|LES|LES|LES|   |   |   |   |
           |.NR|.MR|.MD|.DR|.LS|.DN|.DA|.LN|.LA|.DS|.DV|.DC|   |   |   |   |
           |---------------------------------------------------------------|
   LE.LNK  |                  Next LE block for this node                  |
           |                                                               |
           |---------------------------------------------------------------|
   LE.SCB  |                  Pointer to SCB for this node                 |
           |                                                               |
           |---------------------------------------------------------------|
   LE.NCL  |                   Link address NCL is using                   |
           |                                                               |
           |---------------------------------------------------------------|
   LE.DCP  |         Link address NCL and NSP think is destination         |
           |odd byte is incremental number            even byte is LEB numb|
           |---------------------------------------------------------------|
   LE.NSP  |                   Link address NSP is using                   |
           |                                                               |
           |---------------------------------------------------------------|
   LE.DPN  |          Destination device that NCL is asking about          |
           |                                                               |
           |---------------------------------------------------------------|
   LE.LIL  |                   Last input LS/INT message                   |
           |                                                               |
           |---------------------------------------------------------------|
   LE.LID  |                    Last input data message                    |
           |                                                               |
           |---------------------------------------------------------------|
   LE.LOL  |                   Last output LS/INT message                  |
           |                                                               |
           |---------------------------------------------------------------|
   LE.LOD  |                   Last  output data message                   |
           |                                                               |
           |---------------------------------------------------------------|
   LE.OQL  |                 List header of LS/INT message                 |
           |              which have been output but not ACKed             |
           |---------------------------------------------------------------|
   LE.OQD  |                  List header of data messages                 |
           |             which have been output  but not ACKed             |
           |---------------------------------------------------------------|
   ANF-10 FRONT END TABLES                                      Page A-30



           |---------------------------------------------------------------|
   LE.BUF  |                      Buffer for this link                     |
           |                                                               |
           |---------------------------------------------------------------|
   LE.IIK  |                   Last input intercept ACKed                  |
           |                                                               |
           |---------------------------------------------------------------|
   LE.IDK  |                     Last input data ACKed                     |
           |                                                               |
           |---------------------------------------------------------------|
   LE.ODK  |                    Last output data ACKed                     |
           |                                                               |
           |---------------------------------------------------------------|
   LE.ODS  |                     Last output data sent                     |
           |                                                               |
           |---------------------------------------------------------------|
   LE.STT  |     Reason to send to NSP     |       Current link state      |
   LE.RSN  |         for disconnect        |          (see below)          |
           |---------------------------------------------------------------|
   LE.MDR  | Outstanding data requests for |Maximum number of data requests|
   LE.ODR  |           this link           |         for this link         |
           |---------------------------------------------------------------|
   LE.TIM  |                               |       Logical link timer      |
           |                               |                               |
   LE.SIZ=>+---------------------------------------------------------------+




   A.11.1  LE.STS Bits


        Bit       Value     Description        ___       _____     ___________

        LES.DC    000020    Have to send DISCONNECT
        LES.DV    000040    Connection is to a device, not a task
        LES.DS    000100    Connection is being broken
        LES.LA    000200    Have to send LS/INT ACK
        LES.LN    000400    Have to send LS/INK NAK
        LES.DA    001000    Have to send DATA ACK
        LES.DN    002000    Have to send DATA NAK
        LES.LS    004000    Have to send LS to request an intr.  message
        LES.DR    010000    Have to send extra DATA REQUEST message
        LES.MD    020000    Set if in middle of a dialog messsage
        LES.MR    040000    Set if other side is requesting a message
        LES.NR    100000    Set if other side is doing no requesting

   ANF-10 FRONT END TABLES                                      Page A-31


   A.11.2  LE.STT Codes


        Bit       Value     Description        ___       _____     ___________

        LES.ID    000       Idle
        LES.LI    002       NCL is trying to initialize a logical link
        LES.PI    004       NSP is trying to initialize a logical link
        LES.RN    006       Link is setup
        LES.DS    010       Trying to disconnect

   ANF-10 FRONT END TABLES                                      Page A-32


   A.12  STATION CONTROL BLOCK


   Description:   Contain status information pertaining to each  node  in
                  the network.  One such block for each node.  Referenced
                  by "SCB " where " " is the station number (0,1,2,...).

   Defined in:    DNCNFG.P11


           +---------------------------------------------------------------+
   SB.FLG  |                         Station flags                         |
           |                          (See below)                          |
           |SF.|SF.|SF.|SF.|SF.|SBF|SBF|SBF|SBF|SF.|SBF|SBF|SBF|SF.|SBF|SBF|
           |NSP|FAK|MCR|XRC|XCN|.NQ|.SQ|.SK|.NK|XAK|.RR|.RP|.NB|HID|.IC|.IU|
           |---------------------------------------------------------------|
   SB.HXN  |       Last ACK processed      |      Highest NCL message      |
   SB.LAP  |                               |       number transmitted      |
           |---------------------------------------------------------------|
   SB.HAR  |     Receive message number    |      Highest ACK received     |
   SB.RMN  |                               |                               |
           |---------------------------------------------------------------|
   SB.TIM  |                               |             Timer             |
           |                               |      for REPs and STARTs      |
           |---------------------------------------------------------------|
   SB.IMQ  |                  Input message queue address                  |
           |                  (messages not yet in order)                  |
           |---------------------------------------------------------------|
   SB.OMQ  |                  Output message queue address                 |
           |              (ACKed by DDCMP, but not yet by NCL)             |
           |---------------------------------------------------------------|
   SB.SQS  /                  Sequential node control area                 /
           |             (SEQLIM-1 blocks of SB.SQS bytes each)            |
           |---------------------------------------------------------------|
   SB.LBA  |                   Address of LB for station                   |
           |                                                               |
           |---------------------------------------------------------------|
   SB.LVL  |                 Cost of best path to this node                |
           |                                                               |
           |---------------------------------------------------------------|
   SB.RTN  |               Return address over call to "MARK"              |
           |                                                               |
           |---------------------------------------------------------------|
   SB.RR0  |                  Saved R0 over call to "MARK"                 |
           |                                                               |
           |---------------------------------------------------------------|
   SB.RSB  |                  Saved SB over call to "MARK"                 |
           |                                                               |
           |---------------------------------------------------------------|
   ANF-10 FRONT END TABLES                                      Page A-33



           |---------------------------------------------------------------|
   SB.WOQ  |                 Queue of messages waiting for                 |
           |                   message number assignment                   |
           |---------------------------------------------------------------|
   SB.NGH  /                         Neighbors list                        /
           |                      ((NGHMAX*2)+1 words)                     |
           |---------------------------------------------------------------|
   SB.SNM  /                      Station name (ascii)                     /
           |                         (SNMSIZ bytes)                        |
           |---------------------------------------------------------------|
   SB.SID  /                      Software id (ascii)                      /
           |                         (SIDSIZ bytes)                        |
           |---------------------------------------------------------------|
   SB.DAT  /                     Software date (ascii)                     /
           |                         (DATESZ bytes)                        |
           |---------------------------------------------------------------|
   SB.NNM  |                          Node number                          |
           |                             binary                            |
   SB.SIZ=>+---------------------------------------------------------------+




   A.12.1  SB.FLG Bits


        Bit       Value     Description        ___       _____     ___________

        SBF.IU    000001    SCB is in use (for TENSCB means port enabled)
        SBF.IC    000002    Station    in    contact    (exchanged    NCL
                            START/STACK)
        SF.HID    000004    We have the node ID for station
        SBF.NB    000010    Need to send a NEIGHBORS message to node
        SBF.RP    000020    A REP to this station is outstanding
        SBF.RR    000040    We owe a response to this station's REP
        SF.XAK    000100    We need to send an NCL-ACK to this station
        SBF.NK    000200    We need to send an NCL-NAK to this station
        SBF.SK    000400    We need to send an NCL-STACK to this station
        SBF.SQ    001000    This station is a sequential node
        SBF.NQ    002000    A request  is  in  the  NCL  queue  for  this
                            station
        SF.XCN    004000    We need to send a  CONFIGURATION  message  to
                            node
        SF.XRC    010000    We need to request a CONFIG message from node
        SF.MCR    020000    This station has a command decoder
        SF.FAK    040000    Future ACK - ACK received but DDCMP not done
        SF.NSP    100000    NSP line (depends on FT.DCP)

   Notes:

        SB.NGH format for  each  neighbor's  entry  is  the  SCB  address
        followed by the Link Level.

   ANF-10 FRONT END TABLES                                      Page A-34


   A.13  TASK BLOCK


   Description:   Contain pointers and status information  pertaining  to
                  tasks using the DECNET compatible port.  One such block
                  for each task.  Used for DECNET phase II only.

   Defined in:    DNTSK.P11


           +---------------------------------------------------------------+
   TK.STS  |                    Task status information                    |
           |                          (see below)                          |
           |TK.|TK.|TK.|TK.|TK.|TK.|   |   |   |   |   |   |   |   |   |   |
           |RUN|LGI|TRG|WAK|NOP|SLP|   |   |   |   |   |   |   |   |   |   |
           |---------------------------------------------------------------|
   TK.LNK  |                     Link to next TK block                     |
           |                                                               |
           |---------------------------------------------------------------|
   TK.RQL  |                         Run queue link                        |
           |                                                               |
           |---------------------------------------------------------------|
   TK.PRI  |                   Pointer to priority queue                   |
           |                                                               |
           |---------------------------------------------------------------|
   TK.JSA  |                    Address to continue task                   |
           |                                                               |
           |---------------------------------------------------------------|
   TK.RSA  |                    Address to start task at                   |
           |                      on a system restart                      |
           |---------------------------------------------------------------|
   TK.PDL  |                   Address of push down list                   |
           |                                                               |
           |---------------------------------------------------------------|
   TK.PDL+2|                 Current push down list pointer                |
           |                                                               |
           |---------------------------------------------------------------|
   TK.TIM  |                         Seconds timer                         |
           |                                                               |
           |---------------------------------------------------------------|
   TK.QTM  |                               |          Quantum time         |
           |                               |           in jiffies          |
           |---------------------------------------------------------------|
   TK.TPC  |                   Address to goto when clock                  |
           |                            goes off                           |
           |---------------------------------------------------------------|
   TK.DTK  |                 Copy of DB.TSK for current SVC                |
           |                                                               |
           |---------------------------------------------------------------|
   ANF-10 FRONT END TABLES                                      Page A-35


           |---------------------------------------------------------------|
   TK.SPT  |                       Send queue putter                       |
           |                                                               |
           |---------------------------------------------------------------|
   TK.STK  |                        Send queue taker                       |
           |                                                               |
           |---------------------------------------------------------------|
   TK.SQU  /                           Send queue                          /
           |                         (TKSQSZ words)                        |
           |---------------------------------------------------------------|
   TK.ARG  |                 Save value to return to caller                |
           |                                                               |
   TK.SIZ=>+---------------------------------------------------------------+




   A.13.1  TK.STS Bits


        Bit       Value     Description        ___       _____     ___________

        TK.RUN    100000    Task is runnable
        TK.LGI    040000    Task is "Logged In" (has not EXITed yet)
        TK.TRG    020000    Task has been triggered by another task
        TK.WAK    010000    Some even has woken this task
        TK.NOP    004000    Device was not OPENed on this call
        TK.SLP    002000    Task is sleeping (in timer queue)

   ANF-10 FRONT END TABLES                                      Page A-36


   A.14  TO-11 BLOCK


   Description:   Contain pointers and control information pertaining  to
                  messages from the 10 to the 11.  Used only in DN87S and
                  DN20 systems.  Note that these reside  in  chunks,  and
                  that the following definitions redefine the meanings of
                  some entries in the standard chunk.

   Defined in:    DNDTE.P11


           +---------------------------------------------------------------+
   TE.LNK  |                Address of next chunk in message               |
           |                                                               |
           |---------------------------------------------------------------|
   TE.QPR  |              Number of bytes left to transfer in              |
           |                    queued protocol message                    |
           |---------------------------------------------------------------|
   TE.LEN  |                    Total length of message                    |
           |                                                               |
           |---------------------------------------------------------------|
   TE.FFW  |           Copy of first word for current QPR message          |
   TE.LIN  |               (line number and flags in hi byte)              |
           |   |   |   |   |   |   |   |FW.|   |   |   |   |   |   |   |   |
           |   |   |   |   |   |   |   |MOR|   |   |   |   |   |   |   |   |
           |---------------------------------------------------------------|
   TE.CNK  |                  Space left in current chunk                  |
           |                                                               |
           |---------------------------------------------------------------|
   TE.QHD  |                Queued protocol message header:                |
           |                    length of first message                    |
           |---------------------------------------------------------------|
   TE.QFN  |                      QPR word:  function                      |
           |                                                               |
           |---------------------------------------------------------------|
   TE.QDV  |                QPR word:  device  (will be NCL)               |
           |                                                               |
           |---------------------------------------------------------------|
   TE.QSP  |                             Spare                             |
           |              (start of user data for compression)             |
           |---------------------------------------------------------------|
   TE.ADR  |                Address of where to put data of                |
           |                         next fragement                        |
   TE..SZ=>+---------------------------------------------------------------+




   A.14.1  TE.LIN Bits


        Bit       Value     Description        ___       _____     ___________

        FW.MOR    000400    There will be another QPR msg in NCL message
   ANF-10 FRONT END TABLES                                      Page A-37


   A.15  TO-10 BLOCK


   Description:   Contain pointers and control information pertaining  to
                  messages from the 11 to the 10.  Used only on DN87S and
                  DN20 systems.  Note that these reside  in  chunks,  and
                  that the following definitions redefine the meanings of
                  some entries in the standard chunk.

   Defined in:    DNDTE.P11


           +---------------------------------------------------------------+
   TT.FLK  |                          Forward link                         |
           |                                                               |
           |---------------------------------------------------------------|
   TT.RLK  |                         Backward link                         |
           |                                                               |
           |---------------------------------------------------------------|
   TT.ALC  |                        Space allocated                        |
           |                         for this block                        |
           |---------------------------------------------------------------|
   TT.HDL  |                        Length of header                       |
           |                                                               |
           |---------------------------------------------------------------|
   TT.QHD  |               First queued protocol (QPR) word:               |
           |                        length of header                       |
           |---------------------------------------------------------------|
   TT.QFN  |                      QPR word:  function                      |
           |                                                               |
           |---------------------------------------------------------------|
   TT.QDV  |                QPR word:  device  (will be NCL)               |
           |                                                               |
           |---------------------------------------------------------------|
   TT.QSP  |                         Spare (unused)                        |
           |                                                               |
           |---------------------------------------------------------------|
   TT.QFW  |          Line number          |    Indirect message length    |
           |          (first word)         |                               |
           |---------------------------------------------------------------|
   TT.ADR  |                      Address of real data                     |
           |                                                               |
           |---------------------------------------------------------------|
   TT.USR  |                       User supplied data                      |
           |                                                               |
           |---------------------------------------------------------------|
   TT.EFN  |                       Event flag number                       |
           |                                                               |
           +---------------------------------------------------------------+
   !