








                              FIELD TEST DRAFT
   TOPS-10 VERSION 7.03
   WRITER:  Mary J.  Marotta
   Location:  MRO1-2/L12
   Phone:  231-4277







                        TOPS-10 Tables Descriptions





|                                March 1986







                                  ABSTRACT

                  This   document   contains   illustrated
                  descriptions  of  the tables used by the
                  TOPS-10  monitor  to  allocate   memory,
                  control  jobs and resources, and provide
                  information.
|
|
|
|                                  Operating System: TOPS-10 Version 7.03
|                                                      GALAXY Version 5.1
|                                                     DECnet-10 Version 4
                                                                  Page ii


|                                                     Printed: March 1986



   The information in this document is subject to change  without  notice
   and  should  not  be  construed  as  a commitment by Digital Equipment
   Corporation.  Digital Equipment Corporation assumes no  responsibility
   for any errors that may appear in this document.

   The software described in this document is furnished under  a  license
   and  may  only  be used or copied in accordance with the terms of such
   license.

   No responsibility is assumed for the use or reliability of software on
   equipment that is not supplied by DIGITAL or its affiliated companies.





         Copyright  C , 1980, 1986, Digital Equipment Corporation.
                            All Rights Reserved.





   The postage-prepaid READER'S COMMENTS form on the last  page  of  this
   document  requests  the  user's  critical  evaluation  to assist us in
   preparing future documentation.

   The following are trademarks of Digital Equipment Corporation:

        DEC                 DECnet              IAS
        DECUS               DECsystem-10        MASSBUS
        Digital Logo        DECSYSTEM-20        PDT
        PDP                 DECwriter           RSTS
        UNIBUS              DIBOL               RSX
        VAX                 EduSystem           VMS
                                                VT

                                                                 Page iii






                                  FOREWORD







        TOPS-10 Monitor Tables Descriptions are the result of the  effort
        to  document  and illustrate information that system analysts and
        programmers might need to repair or modify TOPS-10 monitor source
        code.   This  document  is  provided by the Software Publications
        department for LCG  Software  Engineering  without  guarantee  of
        technical accuracy.

        The tables are simply an extension and  summary  of  the  monitor
        source   code.    To   the  inexperienced  user,  they  may  seem
        bewilderingly complex.  However, to the user with  experience  in
        TOPS-10  monitor  internals,  and in the TOPS-10 data structures,
        this document can be a useful reference for a conceptual view  of
        the monitor.

        The monitor source code itself is complex and lengthy,  since  it
        supports  many  types of hardware and many software applications.
        The code does not regard the support status of any  product,  and
        this  document  follows  suit.   For  complete  information about
        product support, refer to the current  TOPS-10  Software  Product
        Description.

        This document is only a summary of the  information  written  and
        processed  by  the  monitor.   It  is  an  effort  to  record the
        information critical in developing and maintaining  TOPS-10.   Do
        not  assume  this document is correct in all cases.  Please refer
        to source code listings of the appropriate modules whenever using
        the information in these tables.

        The data structures for the ANF-10 network software are listed at
        the end of this document, in Appendix A.

        The monitor tables are listed  to  reflect  a  TOPS-10  operating
        system  based on one or more KL processors.  The information will
        be different for any other type of system.
                                                                  Page iv


                                Conventions                                ___________


        The TOPS-10 tables are described in a consistent format  that  is
        used   to  illustrate  actual  assembly  code.   The  tables  are
        described as follows.

   Table Name -- Brief, Descriptive Title


   Description:   A description of the table.

   Defined in:    Module where table is defined.

   Used by:       Modules that access the table.


   See also:      Optional, where to look for more information.



              +----------------------------------------------------------+
   Word name  |          General description of word's contents          |
              |----------------------------------------------------------|
              |         Left half          |       Right half            |
              |----------------------------------------------------------|
    Symbol*   |     * means "see following pages" for more information   |
              |----------------------------------------------------------|
              |                Note that text is centered                |
              +----------------------------------------------------------+


   * Details on following pages.

   Notes:

        1.  This space is used to include more information about words or
            bits in the table.

        2.  Or any restrictions or warnings.

        3.  Data words  that  require  more  detail  are  listed  on  the
            following pages as shown below.

                                                                   Page v


   The following pages are used to described the  contents  of  words  or
   bytes, and the definitions of the bit settings.


   +------------------------------------------------------------+
   |Breakdown of bytes  | X|     or bits | X|  UN1 | X| X| X| X |
   +------------------------------------------------------------+
    0                 17 18 19         26 27 28  31 32 33 34 35


        Word                Mask        ____                ____
        Symbol    Bits      Symbol    Description        ______    ____      ______    ___________

        WORD      0-17      SYMBOL    Description of contents
        WORD      18        SYMBOL    Description

   Or, the format may include the following information:

        Symbol    Bits      Description        ______    ____      ___________

        WORD      0-17      Description of contents
        WORD      18        Description

   Notes:

        1.  More notes,

        2.  If necessary.

                                                                  Page vi


                                  CONTENTS

           1.0     ACC -- ACCESS TABLE  . . . . . . . . . . . . . . . . 1
           1.1       ACCNMB Byte Definitions  . . . . . . . . . . . . . 2
           1.2       ACCPPB Byte Definitions  . . . . . . . . . . . . . 3
           1.3       ACCADT Byte Definitions  . . . . . . . . . . . . . 4
           1.4       ACCPRV Byte Definitions  . . . . . . . . . . . . . 5
           2.0     AVALTB -- AVAILABLE RESOURCE TABLE . . . . . . . . . 7
           3.0     BAF -- BAD ALLOCATION FILE . . . . . . . . . . . . . 8
           3.1       BAFNBS Byte Definitions  . . . . . . . . . . . . . 9
           3.2       BAFREG . . . . . . . . . . . . . . . . . . . . .  10
           4.0     USER I/O BUFFER  . . . . . . . . . . . . . . . . .  12
           4.1       First Word (I/O Status Bits) . . . . . . . . . .  12
           4.2       Second Word  . . . . . . . . . . . . . . . . . .  12
           4.3       Third Word . . . . . . . . . . . . . . . . . . .  13
           5.0     BUFFER RING HEADER . . . . . . . . . . . . . . . .  14
           6.0     CDB -- CPU DATA BLOCK  . . . . . . . . . . . . . .  15
           7.0     CDT -- CONNECTED DEVICE TABLE  . . . . . . . . . .  32
           8.0     CHKTAB -- UUO CHECK BIT TABLE  . . . . . . . . . .  33
           9.0     CHKTBC -- CALL AND CALLI UUO CHECK BIT TABLE . . .  34
           10.0    CHN -- CHANNEL DATA BLOCK  . . . . . . . . . . . .  36
           11.0    CHTABL -- SPECIAL CHARACTER TABLE  . . . . . . . .  39
           12.0    CHREQV -- CHARACTER EQUIVALENCE TABLE  . . . . . .  51
           13.0    CIPWT -- CLOCK REQUEST QUEUE . . . . . . . . . . .  57
           14.0    COMTAB -- COMMAND TABLE  . . . . . . . . . . . . .  58
           15.0    CSRTAB -- CONTEXT SAVE/RESTORE TRANSLATION TABLE .  59
           16.0    CSTTAB -- CUSTOMER-DEFINED COMMANDS TABLE  . . . .  64
           17.0    COMTB2 -- SET COMMAND TABLE  . . . . . . . . . . .  65
           18.0    DDB -- DEVICE DATA BLOCK . . . . . . . . . . . . .  66
           18.1      DEVCHR -- Device Characteristics Word  . . . . .  72
           18.2      DEVIOS -- Device Input/Output Status Word  . . .  73
           18.3      DEVMOD -- Device Modes Word  . . . . . . . . . .  76
           18.4      DEVIAD -- Input Buffer Word  . . . . . . . . . .  77
           18.5      DEVOAD -- Output Buffer Word . . . . . . . . . .  79
           18.6      DEVSTA -- Device Station Word  . . . . . . . . .  80
           18.7      DEVXTR -- Extra Word . . . . . . . . . . . . . .  81
           18.8      DEVEVM -- Exec Virtual Memory Word . . . . . . .  82
           18.9      DEVESE -- Extended Software Error Word . . . . .  82
           18.10     DEVHCW -- Device Hardware Characteristics Word .  83
           18.11     DEVCPU -- CPU Word . . . . . . . . . . . . . . .  84
           18.12     DEVJOB -- Job Word . . . . . . . . . . . . . . .  84
           18.13     DEVFUN -- UDB Pointer (Disk DDB Only)  . . . . .  85
           18.14     DEVELB -- Error Information  . . . . . . . . . .  85
           18.15     DEVRIB -- Current RIB Information  . . . . . . .  86
           18.16     DEVCUR -- Current Unit Information   . . . . . .  86
           18.17     DEVFCS -- CFP-Supplied Word  . . . . . . . . . .  87
           18.18     DEVRBn -- Retrieval Pointer  . . . . . . . . . .  87
           18.19     TDVSTS -- Status Information Word  . . . . . . .  88
           19.0    DEVDSP -- DEVICE DISPATCH TABLE  . . . . . . . . .  89
           20.0    DISK CACHE DATA STRUCTURE  . . . . . . . . . . . .  91
           21.0    DISP AND DISP2 -- COMMAND DISPATCH TABLES  . . . .  93
           22.0    DISPC -- CUSTOMER-DEFINED COMMAND DISPATCH TABLE .  94
           23.0    DSCTAB -- DATASET CONTROL TABLE  . . . . . . . . .  95
           24.0    ENQ/DEQ BLOCKS . . . . . . . . . . . . . . . . . .  96
           25.0    EPT -- EXEC PROCESS TABLE  . . . . . . . . . . . .  98
                                                                 Page vii


           26.0    EXE FORMAT SAVE FILES  . . . . . . . . . . . . . . 100
           27.0    FETTBL -- TABLE OF BITS FOR MONITOR FEATURES . . . 102
           28.0    FRAGMENT TABLE . . . . . . . . . . . . . . . . . . 103
           29.0    HOM -- HOME BLOCK  . . . . . . . . . . . . . . . . 104
           30.0    INTTAB -- INTERRUPT ROUTINE TABLE  . . . . . . . . 108
           31.0    JBTADR -- JOB ADDRESS TABLE  . . . . . . . . . . . 110
           32.0    JBTAD2 -- SECOND JOB ADDRESS TABLE . . . . . . . . 111
           33.0    JBTCHK -- SEGMENT CHECKSUM TABLE . . . . . . . . . 112
           34.0    JBTCLM -- JOB CORE LIMITS  . . . . . . . . . . . . 113
           35.0    JBTCQ -- JOB QUEUES TABLE  . . . . . . . . . . . . 114
           36.0    JBTCSQ -- SUBQUEUES TABLE  . . . . . . . . . . . . 116
           37.0    JBTDDB -- DDB REQUESTED BY JOB . . . . . . . . . . 117
           38.0    JBTDEV -- HIGH SEGMENT DEVICE TABLE  . . . . . . . 118
           39.0    JBTDTC -- JOB REQUESTING DECTAPE DDB . . . . . . . 119
           40.0    JBTIMI -- JOB PAGE COUNT . . . . . . . . . . . . . 120
           41.0    JBTIMO -- SWAPPED-OUT PAGE COUNT . . . . . . . . . 121
           42.0    JBTIPC -- REQUESTED IPCF INTERLOCK . . . . . . . . 122
           43.0    JBTJIL -- JUST-SWAPPED-IN LIST . . . . . . . . . . 123
           44.0    JBTJRQ -- REQUEUE LIST . . . . . . . . . . . . . . 124
           45.0    JBTLIM -- JOB TIME LIMIT TABLE . . . . . . . . . . 125
           46.0    JBTLOC -- JOB LOCATION TABLE . . . . . . . . . . . 126
           47.0    JBTNAM -- JOB NAME TABLE . . . . . . . . . . . . . 127
           48.0    JBTOLS -- JOB OUTPUT LIST  . . . . . . . . . . . . 128
           49.0    JBTPC -- USER MODE PC  . . . . . . . . . . . . . . 129
           50.0    JBTPDB -- PROCESS DATA BLOCK TABLE . . . . . . . . 130
           51.0    JBTPIA -- SOFTWARE PROGRAM INTERRUPT TABLE . . . . 131
           52.0    JBTPPN -- PROJECT PROGRAMMER NUMBER TABLE  . . . . 132
           53.0    JBTPRV -- JOB PRIVILEGE BITS . . . . . . . . . . . 133
           54.0    JBTRQT -- JOB RUN-QUEUE TIME TABLE . . . . . . . . 134
           55.0    JBTRSP -- RESPONSE TIME TABLE  . . . . . . . . . . 135
           56.0    JBTRTD -- REAL TIME DEVICES  . . . . . . . . . . . 136
           57.0    JBTSCD -- SUBQUEUE (CLASS) TABLE . . . . . . . . . 137
           58.0    JBTSFD -- SUB-FILE DIRECTORY TABLE . . . . . . . . 138
           59.0    JBTSGN -- SEGMENT TABLE  . . . . . . . . . . . . . 139
           60.0    JBTSG2 -- HIGH SEGMENT SECTION NUMBERS . . . . . . 141
           61.0    JBTSHR -- HIGH SEGMENT SHARER COUNT  . . . . . . . 142
           62.0    JBTSPL -- SPOOL CONTROL TABLE  . . . . . . . . . . 143
           63.0    JBTSPS -- SECOND PROCESSOR STATUS  . . . . . . . . 144
           64.0    JBTSTS -- STATUS TABLE . . . . . . . . . . . . . . 146
           65.0    JBTST2 -- JOB STATUS TABLE 2 . . . . . . . . . . . 149
           66.0    JBTST3 -- JOB STATUS TABLE 3 . . . . . . . . . . . 151
           67.0    JBTSWP -- JOB SEGMENT SWAP AREA  . . . . . . . . . 152
           68.0    JBTUPM -- UPT ADDRESS TABLE  . . . . . . . . . . . 154
           69.0    JBTVIR -- PAGING RATE TABLE  . . . . . . . . . . . 155
           70.0    JBTWCH -- WATCH TABLE  . . . . . . . . . . . . . . 156
           71.0    JDA -- DEVICE ASSIGNMENT TABLE . . . . . . . . . . 157
           72.0    JOBDAT -- DATA AREA  . . . . . . . . . . . . . . . 159
           73.0    JOB QUEUES AND WAIT STATE CODES  . . . . . . . . . 162
           74.0    KON -- KONTROLLER DATA BLOCK . . . . . . . . . . . 164
           75.0    KONTAB -- UDB ADDRESS TABLE WITHIN KON . . . . . . 167
           76.0    LDB -- LINE DATA BLOCK . . . . . . . . . . . . . . 168
           76.1      LDBCOM . . . . . . . . . . . . . . . . . . . . . 171
           76.2      LDBATR . . . . . . . . . . . . . . . . . . . . . 172
           76.3      LDBOST . . . . . . . . . . . . . . . . . . . . . 173
           76.4      LDBDCH . . . . . . . . . . . . . . . . . . . . . 174
                                                                Page viii


           76.5      LDBBYT . . . . . . . . . . . . . . . . . . . . . 176
           76.6      LDBBY2 . . . . . . . . . . . . . . . . . . . . . 177
           76.7      LDBLSW . . . . . . . . . . . . . . . . . . . . . 178
           76.8      LDBPAG . . . . . . . . . . . . . . . . . . . . . 179
           76.9      LDBISR . . . . . . . . . . . . . . . . . . . . . 180
           76.10     LDBISB . . . . . . . . . . . . . . . . . . . . . 181
           76.11     LDBTTW . . . . . . . . . . . . . . . . . . . . . 182
           76.12     LDBREM+0 . . . . . . . . . . . . . . . . . . . . 183
           76.13     LDBREM+2 . . . . . . . . . . . . . . . . . . . . 185
           76.14     LDBREM+3 . . . . . . . . . . . . . . . . . . . . 186
           76.15     LDBREM+4 (MCR) . . . . . . . . . . . . . . . . . 187
           76.16     LDBREM+4 (VTM) . . . . . . . . . . . . . . . . . 188
           76.17     LDBTTD . . . . . . . . . . . . . . . . . . . . . 189
           76.18     LDBMIC . . . . . . . . . . . . . . . . . . . . . 190
           76.19     LDBBKM . . . . . . . . . . . . . . . . . . . . . 191
           76.20     LDBBKB . . . . . . . . . . . . . . . . . . . . . 192
           77.0    LINTAB -- LINE TABLE . . . . . . . . . . . . . . . 193
           78.0    LOGTAB -- LOGIN JBTTAB POINTER TABLE . . . . . . . 194
           79.0    LVDTBL -- LEVEL D DISK PARAMETER TABLE . . . . . . 195
           80.0    MAGTAPE CONTROLLER DATA BLOCK  . . . . . . . . . . 200
           81.0    MAGTAPE UNIT DATA BLOCK  . . . . . . . . . . . . . 202
           82.0    MEMTAB -- VIRTUAL MEMORY PAGE TABLE  . . . . . . . 205
           83.0    METABL -- META-CHARACTER TABLE . . . . . . . . . . 206
           84.0    MFD -- MASTER FILE DIRECTORY . . . . . . . . . . . 207
           85.0    NMB -- FILE NAME BLOCK . . . . . . . . . . . . . . 209
           86.0    NUMTAB -- TABLE OF GETTAB TABLES . . . . . . . . . 212
           87.0    PAGTAB -- PAGE TABLE . . . . . . . . . . . . . . . 213
           88.0    PDB -- PROCESS DATA BLOCK  . . . . . . . . . . . . 214
           89.0    PPB -- PROJECT PROGRAMMER NUMBER DATA BLOCK  . . . 219
           90.0    PTYTAB -- PSEUDO-TERMINAL DDB TABLE  . . . . . . . 220
           91.0    PT2TAB -- PAGE SECTION NUMBERS . . . . . . . . . . 221
           92.0    QBITS -- WAIT STATE CODE REQUEUE TABLE . . . . . . 222
           93.0    QUEUE TRANSFER TABLE . . . . . . . . . . . . . . . 224
           94.0    QUEUE TABLE - JOB SCANNING (ISCAN, OSCAN, SSCAN,
                   SSCAN1)  . . . . . . . . . . . . . . . . . . . . . 226
           95.0    QQSTAB -- QUANTUM TIME QUEUE TABLE . . . . . . . . 227
           96.0    QTTAB -- QUEUE PROGRESSION QUEUE TABLE . . . . . . 228
           97 REQTAB -- SHARABLE DEVICE REQUEST TABLE  . . . . . 229
           98.0    RIB -- RETRIEVAL INFORMATION BLOCK . . . . . . . . 230
           98.1      RIBEXT Byte Definitions  . . . . . . . . . . . . 232
           98.2      RIBPRV Byte Definitions  . . . . . . . . . . . . 232
           98.3      RIBSTS Byte Definition . . . . . . . . . . . . . 233
           98.4      RIBELB Byte Definitions  . . . . . . . . . . . . 233
           98.5      File-Specific Definitions  . . . . . . . . . . . 234
           98.6      RIBXRA Byte Definitions (same Format As DEVRIB)  236
           98.7      Retrieval Pointer Format . . . . . . . . . . . . 236
           99.0    SAB -- STORAGE ALLOCATION BLOCK  . . . . . . . . . 237
           100.0   SAT.SYS  . . . . . . . . . . . . . . . . . . . . . 239
           101.0   SCHEDULER SCAN TABLES  . . . . . . . . . . . . . . 240
           102.0   SPT -- STORAGE ALLOCATION POINTER TABLE  . . . . . 242
           103.0   STR -- FILE STRUCTURE DATA BLOCK . . . . . . . . . 243
           104.0   SWPLST -- SWAPPING LIST TABLE  . . . . . . . . . . 246
           105.0   SW2LST -- SECONDARY SWPLST . . . . . . . . . . . . 247
           106.0   SW3LST -- THIRD SWPLST . . . . . . . . . . . . . . 247
           107.0   SWPTAB -- SWAPPING TABLE . . . . . . . . . . . . . 248
                                                                  Page ix


           108.0   TABSTR -- STRUCTURE TABLE  . . . . . . . . . . . . 249
           109.0   TRANSFER TABLES  . . . . . . . . . . . . . . . . . 250
           110.0   TTFCOM -- FORCED COMMANDS TABLE  . . . . . . . . . 251
           111.0   TERMINAL CHUNKS  . . . . . . . . . . . . . . . . . 252
           112.0   TTUUOT -- TTCALL DISPATCH TABLE  . . . . . . . . . 254
           113.0   TTYTAB -- TTY TABLE  . . . . . . . . . . . . . . . 255
           114.0   TYPTAB -- DEVICE TYPES TABLE . . . . . . . . . . . 256
           115.0   UCLJMP -- CALL AND CALLI UUO DISPATCH TABLE  . . . 257
           116.0   UCLTAB -- CALL UUO NAMES TABLE . . . . . . . . . . 258
           117.0   UDB -- UNIT DATA BLOCK . . . . . . . . . . . . . . 259
           117.1     UNISYS Word  . . . . . . . . . . . . . . . . . . 263
           117.2     UNISWP Word  . . . . . . . . . . . . . . . . . . 263
           117.3     UNISTS Word  . . . . . . . . . . . . . . . . . . 264
           117.4     UNICCT Word  . . . . . . . . . . . . . . . . . . 264
           117.5     UNIGRP Word  . . . . . . . . . . . . . . . . . . 264
           117.6     UNICHR Word  . . . . . . . . . . . . . . . . . . 265
           117.7     UNICPS Word  . . . . . . . . . . . . . . . . . . 265
           117.8     UNIDES Word  . . . . . . . . . . . . . . . . . . 266
           117.9     UNIALT Word  . . . . . . . . . . . . . . . . . . 268
           117.10    UNI2ND Word  . . . . . . . . . . . . . . . . . . 269
           117.11    UNIDS2 Word  . . . . . . . . . . . . . . . . . . 270
           117.12    UNIAJB Word  . . . . . . . . . . . . . . . . . . 270
           118.0   UFB -- UFD DATA BLOCK  . . . . . . . . . . . . . . 271
           119.0   UNQTAB -- COMMAND TABLE  . . . . . . . . . . . . . 273
           120.0   UNQTB2 -- SET COMMAND TABLE  . . . . . . . . . . . 274
           121.0   UNQTBC -- CUSTOMER-DEFINED COMMAND TABLE   . . . . 275
           122.0   UNWTAB -- UNWIND RESOURCE TABLE  . . . . . . . . . 276
           123.0   UFD -- USER FILE DIRECTORY . . . . . . . . . . . . 277
           124.0   UPT -- USER PROCESS TABLE  . . . . . . . . . . . . 278
           125.0   USER PAGE MAP  . . . . . . . . . . . . . . . . . . 282
           126.0   UUOTAB -- UUO DISPATCH ADDRESS TABLE . . . . . . . 283
           127.0   WSBTAB -- WORKING SET BIT TABLE  . . . . . . . . . 284


   APPENDIX A      ANF-10 FRONT END TABLES

                          ANF10 Table Descriptions


           A.1     CHUNK WORDS  . . . . . . . . . . . . . . . . . . . A-3
           A.2     DEVICE DATA BLOCKS . . . . . . . . . . . . . . . . A-5
           A.2.1     DB.STS . . . . . . . . . . . . . . . . . . . . . A-9
           A.2.2     DB.RDT (Remote Data Type)  . . . . . . . . . .  A-10
           A.2.3     DB.DCS Bits For Terminals  . . . . . . . . . .  A-10
           A.2.4     DB.DCS Bits For Line Printers  . . . . . . . .  A-10
           A.2.5     DB.DCM Bits  . . . . . . . . . . . . . . . . .  A-11
           A.2.6     DB.TTS Bits  . . . . . . . . . . . . . . . . .  A-11
           A.2.7     DB.BCD Bits  . . . . . . . . . . . . . . . . .  A-11
           A.3     DH-11 BLOCK  . . . . . . . . . . . . . . . . . .  A-12
           A.4     DMC11 BASE TABLE . . . . . . . . . . . . . . . .  A-13
           A.5     DMC11 MESSAGE BUFFERS  . . . . . . . . . . . . .  A-14
           A.6     DMC11 MESSAGE BUFFER QUEUES  . . . . . . . . . .  A-15
           A.7     DN11 BLOCK . . . . . . . . . . . . . . . . . . .  A-16
           A.8     DZ11 BLOCK . . . . . . . . . . . . . . . . . . .  A-17
           A.9     LINE BLOCK . . . . . . . . . . . . . . . . . . .  A-18
                                                                   Page x


           A.9.1     LB.STS Bits  . . . . . . . . . . . . . . . . .  A-24
           A.9.2     LB.ST5 Bits  . . . . . . . . . . . . . . . . .  A-24
           A.9.3     LB.DVS (Interrupt Service Routine) Codes . . .  A-25
           A.9.4     LB.MPS (Node Status) . . . . . . . . . . . . .  A-25
           A.9.5     LB.NSS Bits (FTDCP1) . . . . . . . . . . . . .  A-25
           A.9.6     LB.STX Bits  . . . . . . . . . . . . . . . . .  A-25
           A.9.7     LB.STY Bits  . . . . . . . . . . . . . . . . .  A-26
           A.9.8     LB.NSS Bits (FTDCP3 Or FTDCP4) . . . . . . . .  A-26
           A.10    LINE CONTROL BLOCK . . . . . . . . . . . . . . .  A-27
           A.10.1    LC.CAR Bits  . . . . . . . . . . . . . . . . .  A-28
           A.10.2    LC.STA Bits (State Of Modem Control) . . . . .  A-28
           A.10.3    LC.SPD Codes For Transmit And Receive Speeds .  A-28
           A.11    PHASE II LINK ENTRY BLOCK  . . . . . . . . . . .  A-29
           A.11.1    LE.STS Bits  . . . . . . . . . . . . . . . . .  A-30
           A.11.2    LE.STT Codes . . . . . . . . . . . . . . . . .  A-31
           A.12    STATION CONTROL BLOCK  . . . . . . . . . . . . .  A-32
           A.12.1    SB.FLG Bits  . . . . . . . . . . . . . . . . .  A-33
           A.13    TASK BLOCK . . . . . . . . . . . . . . . . . . .  A-34
           A.13.1    TK.STS Bits  . . . . . . . . . . . . . . . . .  A-35
           A.14    TO-11 BLOCK  . . . . . . . . . . . . . . . . . .  A-36
           A.14.1    TE.LIN Bits  . . . . . . . . . . . . . . . . .  A-36
           A.15    TO-10 BLOCK  . . . . . . . . . . . . . . . . . .  A-37
                                                                   Page 1


|  1.0  ACC -- ACCESS TABLE
|


   Description:   Contains information needed in order to gain access  to
                  a specific version of a specific file.

                  One table for each existing version of each open file.

                  The  access  table  for  the  current  and  possibly  a
                  superseding  version  of  the  file  are  linked to the
                  corresponding NMB.  Also, each disk device  data  block
                  contains  a  pointer  to  the access table for the file
                  currently being accessed.

   Defined in:    COMMOD

   Used by:       FILFND, FILIO, FILUUO, IPCSER, SEGCON, SYSINI, UUOCON


   See also:      NMB, PPB


              +----------------------------------------------------------+
   ACCALC     |          Highest relative block number allocated         |
              |----------------------------------------------------------|
   ACCNMB*    |     NMB or next ACC         |   See following page       |
              |----------------------------------------------------------|
   ACCPT1     |              First retrieval pointer to file             |
              |----------------------------------------------------------|
   ACCDOR     |     Next dormant ACC        |   Previous dormant ACC     |
              |----------------------------------------------------------|
   ACCPPB*    |   See following pages       |           PPB              |
              |----------------------------------------------------------|
   ACCADT*    |                    See following pages                   |
              |----------------------------------------------------------|
   ACCWRT     |           Highest relative block number written          |
              |----------------------------------------------------------|
   ACCPRV*    | Privileges  |Mode|  Creation time   |Low creation date   |
              +----------------------------------------------------------+


   * Details on following pages.

   Notes:

        1.  When all users have  closed  a  file,  its  access  table  is
            considered  dormant.  Dormant access tables are linked into a
            doubly linked list through ACCDOR, and are not deleted  until
            their  core  space  is  needed.   If  a table is not dormant,
            ACCDOR contains zero.

        2.  ACCWRT and ACCALC do not include the second RIB.

                                                                   Page 2


   1.1  ACCNMB Byte Definitions



   +-----------------------------------------------------------+
   |  NMB or Next ACC            | A | LBS |1| UN1 | D| N| S| G|
   +-----------------------------------------------------------+
    0                          17  18 19-26 27 28-31 32 33 34 35



        Word                Mask        ____                ____
        Symbol    Bits      Symbol    Description        ______    ____      ______    ___________

        ACCNMB    0-17                Address of next ACC for  same  name
                                      and PPN if there is one.

        ACCABC    18        ACPABC    This file always has bad checksum.

        ACCLBS    19-26     ACYLBS    Number of words in last
                            ACZLBS    data block of file.

        ACC1PT    27        ACP1PT    File   has   only   one   retrieval
                                      pointer.

        ACCUN1    28-31     COYUN1    Logical   unit    number,    within
                                      structure, where file begins.

        ACCDIR    32        ACPDIR    This file is a directory.

        ACCNDL    33        ACPNDL    This file cannot be deleted.

        ACCSBC    34        ACPSBC    Sometimes bad checksum.

        ACCGRB    35        ACPGRB    Don't grab access table.

   Notes:

        1.  Normally there is only one ACC linked to an NMB.  But while a
            file  is  being superseded, both the old and the new versions
            of the file have ACCs linked to the NMB.

        2.  The low order two bits of a pointer to another  ACC  will  be
            zero.   The  pointer  back to the NMB points to Word 2 of the
            NMB, NMBACC.  Hence, its low order bits will not be zero.

        3.  There may be an arbitrary number of ACCs for  older  versions
            of  a  file, which are still being read.  However, these ACCs
            are not linked to the NMB.  The only pointers to them are  in
            the DDBs of the readers.

                                                                   Page 3


   1.2  ACCPPB Byte Definitions


   +------------------------------------------------------------+
   |   FSN    |Sim. updates|Z|   |       PPB                    |
   +------------------------------------------------------------+
    0--------5 6---------13 14    18--------------------------35

        Word                Mask        ____                ____
        Symbol    Bits      Symbol    Description        ______    ____      ______    ___________

        ACCFSN    0-5       ACYFSN    File structure number
                            ACZFSN    of structure  to  which  this  file
                                      belongs.

        ACCWCT    6-13      ACYWCT    Write count for
                            ACZWCT    simultaneous updates

        ACCZRB    14        ACPZRB    If SFD,  the  SFD  has  empty  data
                                      blocks.

        ACCPPB    18-35               Core address of  project-programmer
                                      data block (PPB)

                                                                   Page 4


   1.3  ACCADT Byte Definitions



   +------------------------------------------------------------+
   | A | Last Access Date    | N| Count/Use| R| D| STS | S| P| N|
   +------------------------------------------------------------+
    0-2 3------------------17  18 19-----27 28  29 30-32 33 34 35


        Word                Mask        ____                ____
        Symbol    Bits      Symbol    Description        ______    ____      ______    ___________

        ACCADT    0-2                 High-order 3 bits of creation date.
                                      Low-order part is in ACCCDT.

        ACCADT    3-17                Date this file  was  last  accessed
                                      for more than just LOOKUP.

        ACCNIU    18        ACPNIU    File not in UFD.

        ACCCNT    19-27     ACYCNT    Count of user channels
                            ACZCNT    with  LOOKUP  in  force  for   this
                                      version  of  this  file  or SFD use
                                      count.

        ACCREN    28        ACPREN    Rename in progress.

        ACCDEL    29        ACPDEL    File to be deleted when all readers
                                      finished.

        ACCSTS    30-32     ACYSTS    Access table status code:
                  30        ACPCRE    File being created.
                  31        ACPSUP    File being superseded.
                  32        ACPUPD    File being updated.

        ACCSMU    33        ACPSMU    This  file   being   simultaneously
                                      updated.

        ACCPAL    34        ACPPAL    Pre-allocated file.
        ACPSTS    35        ACPNDR    QUESER "don't delete on reset" bit.

   Notes:

        1.  Access Table state codes are:

            ACRCRE     4     File being created. ACPCRE
            ACRSUP     2     File superseding another ACPSUP
            ACRUPD     1     File being updated ACPUPD

        2.  The ACCADT table is called ACCUSE when the file is stored  in
            an SFD.

                                                                   Page 5


   1.4  ACCPRV Byte Definitions


   +------------------------------------------------------------+
   | Privilege | Mode  |   Creation time   |    Creation date   |
   +------------------------------------------------------------+
    0---------8 9----12 13---------------23 24----------------35


        Word                Mask        ____                ____
        Symbol    Bits      Symbol    Description        ______    ____      ______    ___________

        ACCPRV    0-8       ACYPRV    Privileges.
        ACCMOD    9-12                Data mode of file.
        ACCCTM    13-23               File creation time.
        ACCCDT    24-35               Low-order 12 bits of file  creation
                                      date.  Upper 3 bits in ACCADT.

   Notes:

   Privilege codes:

        Bits      Meaning        ____      _______

        0         FILDAE called on protection failure
        1-2       Owner's protection
        4-7       Not used
        3-5       Apply to any job with matching project number.
        6-8       Apply to all other jobs.

   A job is considered the owner of a file if one  of  the  following  is
   true:


        1.  INDPPN set to 0 at MONGEN  (default)  and  programmer  number
            matches or

        2.  INDPPN set to -1 at MONGEN and both  project  and  programmer
            number match.


   Privilege codes for user files:

        Code      Highest Privileges        ____      _______ __________

        7         None
        6         Execute
        5         Read
        4         Append (allocate, deallocate)
        3         Update
        2         Write (supersede, truncate)
        1         Rename (change attributes)
        0         Change privileges

                                                                   Page 6


   Privilege codes for directories:

        Code      Privilege Given by Bit Being Set        ____      _________ _____ __ ___ _____ ___

        4         Allows LOOKUPs in this directory
        2         Allows creates
        1         Allow directory to be read as a data file

   Any combination of these bits may be set.
                                                                   Page 7


   2.0  AVALTB -- AVAILABLE RESOURCE TABLE

   Description:   Contains flags to indicate that a sharable  device  has
                  become  available.   Each  entry  referenced by its own
                  label.

                  Entry is -1 if the corresponding sharable resource  has
                  become available since the last scheduling and some job
                  is waiting for it.

   Defined in:    COMMON

   Used by:       CLOCK1, COMMON, CPNSER, SCHED1, SYSINI

   The words in AVALTB are stored in the following order.   However,  not
   all words may be present on all systems.

        Word      Symbol    Contents        ____      ______    ________

        0         AUAVAL    Alter disk UFD quota
        1         DAAVAL    Disk storage allocation wait
        2         CBAVAL    Disk core block scan wait
        3         DTAVAL    DECtape control wait
        4         IPAVAL    IPCF interlock wait
        5         CXAVAL    Context save wait
        6         DCAVAL    Data control wait (magtape and DECtape)

   The following words are conditional  and  depend  on  a  feature  test
   option to be included:

        Word      Symbol    Cond.     Contents        ____      ______    _____     ________

        7         CAAVAL    FTLOCK    Semi-permanent core allocation wait
        15        MMAVAL    FTMP      Memory management wait
        16        EVAVAL    FTMP      Exec virtual memory wait
        17        EQAVAL    FTEQDQ    ENQ/DEQ wait
        20        MCAVAL    FTMP      Monitor I/O disk cache wait


   Special Notes:

        1.  Table REQTAB has entries corresponding to the AVALTB entries.

        2.  The AVALTB entries are built by the conditionally assembled
            RWAITS macro in S.MAC;  therefore, some of the above listed
            entries may not be present in all systems.

        3.  This table is initialized to zero.

                                                                   Page 8


   3.0  BAF -- BAD ALLOCATION FILE



   Description:   Disk  block  in  which  all  known  bad  regions  in  a
                  structure are recorded.

                  The BAF is always the next block after the  home  block
                  in  HOME.SYS,  with  a  copy  in Block 11 (decimal) and
                  belongs to BADBLK.SYS.

   Defined in:    COMMOD

   Used by:       FILIO, FILUUO, ONCMOD, REFSTR


   Symbol      Map
             +------------------------------------------------------------+
   BAFNAM    |        SIXBIT        / BAT  /                              |
             |------------------------------------------------------------|
   BAFFIR    |   No. of words in          |        Rel adr of first       |
             |   in BAFREG area           |        bad region pair        |
             |------------------------------------------------------------|
   BAFNBS*   |     NBS   |    NBR         |  KDC  |                       |
             |------------------------------------------------------------|
   BAFCNT    |           No. pairs added to BAF by monitor                |
             |------------------------------------------------------------|
   BAFREG*   |                     Bad region pair                        |
             |------------------------------------------------------------|
             |                     Bad region pair                        |
             |------------------------------------------------------------|
             /                           .                                /
             /                           .                                /
             /                           .                                /
             |------------------------------------------------------------|
   BAFCOD    |          0                 |    Unlikely code (606060)     |
             |                            |                               |
             |------------------------------------------------------------|
   BAFSLF    |          0                 |     This block # in unit      |
             |                            |                               |
             +------------------------------------------------------------+

   Notes:

        1.  The label BAFREG should not be used by programs that look  at
            this  block.   They  should  use  the right half of BAFFIR to
            determine location of the first bad region pair.

        2.  The Map Program is a stand-alone program that checks all disk
            blocks  and  writes an initial BAF.  As the monitor finds bad
            blocks, it makes additional entries in the BAF.

        3.  Both halves of BAFFIR are written by the mapping program  and
            are never changed by the monitor.  The left half is always an
            even number.
                                                                   Page 9


   3.1  BAFNBS Byte Definitions



   +------------------------------------------------------------+
   |   NBS   |    NBR            |   KDC   |                    |
   +------------------------------------------------------------+
    0------8  9---------------17  18-----24                    35


        Word                Mask        ____                ____
        Symbol    Bits      Symbol    Description        ______    ____      ______    ___________

        BAFNBS    0-8                 Number of bad blocks found  by  the
                                      map program.
        BAFNBR    9-17      BAYNBR    Number of bad regions found by  the
                                      map program.  (Number of entries in
                                      BAFREG table.) BAFKDC 18-24  BAYKDC
                                      Controller  device code used by map
                                      program.

                                                                  Page 10


   3.2  BAFREG


   First Word of Each Bad Region Pair

   +------------------------------------------------------------+
   |    NBB    | 0 |     PUB     | KNM | |          APN         |
   +------------------------------------------------------------+
    0--------8   9  10---------17 18-20   22------------------35


        Word                Mask        ____                ____
        Symbol    Bits      Symbol    Description        ______    ____      ______    ___________

        BAFNBB    0-8       BAYNBB    Number of bad blocks -1 in this bad
                                      region (not clusters).
        BAFOTH    9         BAPOTH    Non-zero  if  this  bad  region  is
                                      detected  on  another controller or
                                      processor   than   the   one   that
                                      originally added the entry.
        BAFPUB    10-17     BAPPUB    Physical unit within controller.
                                      Bit 17-n represents unit n, where n
                                      = 0-7.
        BAFKNM    18-20     BAYKNM    Logical controller number, of  this
                                      type.  From UNIKNM.
                  21        BAPNTP    Non-zero  if  new-style  BAT  block
                                      entry.
        BAFAPN    22-35     BAYAPN    Serial number of APR  running  when
                                      error was detected.

   Second Word of Bad Region Pair

   +------------------------------------------------------------+
   | Ver |OTR|DTR|HDR|     |  LBN of 1st bad block in region    |
   +------------------------------------------------------------+
    0---2  3   4   5  6---8 9---------------------------------35


        Word                Mask        ____                ____
        Symbol    Bits      Symbol    Description        ______    ____      ______    ___________

        BAFVER    0-2                 Version number of entry  (presently
                                      0)

        BAFERR    3         BAPOTR    Other error  (not  data  or  search
                                      error)
                  4         BAPDTR    Data  error  (parity  or  ECC  hard
                                      error)  5  BAPHDR  Search  error or
                                      header compare error

        BAFELB    9-35                LBN of first bad block in region

   Notes:

   Values of the word labels are relative to the  beginning  of  the  bad
                                                                  Page 11


   region pair, that is, 0 and 1.
                                                                  Page 12


   4.0  USER I/O BUFFER


   Description:   Contains pointers and storage area for I/O  data.   Set
                  up by user programs as needed.

   Defined in:    Status bits defined in S.MAC


             +------------------------------------------------------------+
             |                             |       File status bits       |
             |------------------------------------------------------------|
             | U |     Buffer size         |       Next buffer address    |
             |------------------------------------------------------------|
             |         Bookkeeping         |       Word count, n          |
             |------------------------------------------------------------|
             /                n = number of data words                    /
             |------------------------------------------------------------|
             /                       Unused area                          /
             /                     (S-n)-1 words                          /
             +------------------------------------------------------------+




   4.1  First Word (I/O Status Bits)


        Bit       Meaning        ___       _______

        18        Improper mode.
        19        Device detected error.
        20        Data error, for example, checksum failure.
        21        Block too large.
        22        End of file.
        23        Device is actively transmitting or receiving data.
        24-29     Device-dependent parameters.
        30        Synchronous input.  Stop device after  each  buffer  is
                  filled.
        31        Word count  supplied  by  user  for  output.   (Monitor
                  normally computes word count.)
        32-35     Data mode.




   4.2  Second Word


        Symbol    Bits      Description        ______    ____      ___________

        0         IOUSE     "Use" bit is set as follows:

                            I/O       In Progress    Finished                            ___       __ ________    ________
                                                                  Page 13


                            Input     0              1
                            Output    1              0

                            Note that 0 means the buffer is available  to
                            filler;   1  means  buffer  is  available  to
                            emptier.

        1         IOIBC     Inhibit zeroing output buffers at  completion
                            of output

        2-17      IOSIZ     Size of buffer, not counting first two words

        18-35               Address of second  word  of  next  buffer  of
                            ring.




   4.3  Third Word


        Bit       Meaning        ___       _______

        0-17      Depends on type of device and mode

        18-35     Word count.  (Normally  computed  by  monitor  for  the
                  device being used.)
                                                                  Page 14


   5.0  BUFFER RING HEADER


   Description:   Contains information that is used by programs to access
                  their I/O buffers.

   Defined in:    S.MAC


   Symbol     Map
             +------------------------------------------------------------+
   JBFADR    | V |                         |   Current buffer address     |
             |------------------------------------------------------------|
   JBFPTR    |                        Byte pointer                        |
             |------------------------------------------------------------|
   JBFCTR    |                         Byte count                         |
             |------------------------------------------------------------|
   JBFUDX    |               Universal Device Index (UDX)                 |
             +------------------------------------------------------------+

   Label values are relative to the beginning of the buffer ring header.

        Symbol    Bits      Description        ______    ____      ___________

        JBFADR    0         Virgin buffer ring bit (will be 1  if  buffer
                            ring has been set up but not referenced.
                  18-35     Address  of  second  word   of   the   buffer
                            currently available to the user program.
        JBFPTR    0-35      Byte pointer for user to access next byte  of
                            buffer with ILDB or IDPB.
        JBFCTR    0-35      Number of remaining bytes available to user.
        JBFUDX    0-35      UDX for MSGSER (MPX-controlled devices only)

   Notes:

        1.  Ring header must be set up within user program.

        2.  Values are initialized by each INPUT or OUTPUT UUO,  for  the
            buffer made available to the user.

        3.  User program must keep JBFPTR and JBFCTR up  to  date  as  it
            uses the buffer.

                                                                  Page 15


   6.0  CDB -- CPU DATA BLOCK


   Description:   There is one CPU data block for each CPU in the system.
                  The  block contains both a constant and a variable data
                  area, in contiguous address space.  Routine  addresses,
                  pointers,    bit    masks,    and   processor-dependent
                  instructions are representative of the  data  found  in
                  the  CPU  Constants  Area.   The  CPU Variables Area is
                  cleared at initialiation and  on  403  restarts.   This
                  area   contains  current  status  words  for  the  CPU,
                  including current job information, protected  job  data
                  locations,  scheduler  and  swapper  parameters, and so
                  forth.

                  References can  be  made  to  a  CDB  location  without
                  indexing.  The symbols used in this case will be in the
                  form of .Cnxxx, where n is  the  CPU  number  (such  as
                  .C0xxx, .C1xxx, .C2xxx, and so on).

                  A "C" macro is used to generate labels and data for the
                  Constants  Area.  A "V" macro is used to define symbols
                  and allocate space for the Variables Area.  No data  is
                  generated  by  a "V" macro call.  The "C" and "V" macro
                  calls are contained in the CDB macro, which is expanded
                  once for each CPU.

   Defined in:    COMMON

   Used by:       CLOCK1, CP1SER, ERRCON, KLSER, KSSER,  PSISER,  SCHED1,
                  SYSINI, UUOCON

   GETTAB Tables:

        55 (.GTC0C), 56 (.GTC0V)
        57 (.GTC1C), 60 (.GTC1V)
        61 (.GTC2C), 62 (.GTC2V)
        63 (.GTC3C), 64 (.GTC3V)
        65 (.GTC4C), 66 (.GTC4V)



                                    NOTE

                  All CDB symbols in the following  tables
                  require  a prefix of .CP or .Cn, where n
                  is the CPU number.

                  The following tables represent a  KL-SMP
                  (multiprocessor)  system, assembled with
                  KL-paging enabled.   Entries  will  vary
                  for other types of systems.


                                                                  Page 16


                      CPU Data Block -- Constants Area

   Symbol     Map
             +------------------------------------------------------------+
   CDB       |                Address of next CDB,,0                      |
             |------------------------------------------------------------|
   ASN       |                APR serial number                           |
             |------------------------------------------------------------|
   OK        |         Number of jiffies since this CPU stopped.          |
             |(if the value of this location is less than or equal to 0,  |
             |                 this CPU is running.)                      |
             |------------------------------------------------------------|
   EPT       |              Physical address of EPT                       |
             |------------------------------------------------------------|
   LOG       |  Logical CPU name as SIXBIT/CPUn/ (n=CPU number)           |
             |------------------------------------------------------------|
   PHY       |  Physical CPU name as SIXBIT/CPUxn (x=S or L, n=CPU number)|
             |------------------------------------------------------------|
   TYP       |                  CPU type, 4=KL10, 5=KS10                  |
             |------------------------------------------------------------|
   MPT       |           Pointer to bad address subtable bits.            |
             |  Bits 0-8=length            | RH=offset into CDB           |
             |------------------------------------------------------------|
   RTC       |              Real time clock (DK10) DDB adr                |
             |------------------------------------------------------------|
   RTD       |  DK10 DDB adr if high prec. time, 0 if low (APR clock)     |
             |------------------------------------------------------------|
   PAR       |                   Pointer to parity subtable               |
             |  Bits 0-8=length            | RH=offset into CDB           |
             |------------------------------------------------------------|
   RSP       |                   Pointer to response subtable             |
             |  Bits 0-8=length            | RH=offset into CDB           |
             |------------------------------------------------------------|
   DKX       |                   Number of DK10s on this CPU              |
             |------------------------------------------------------------|
   EBS       |                   EBOX ticks per second                    |
             |------------------------------------------------------------|
   MBS       |                   MBOX ticks per second                    |
             |------------------------------------------------------------|
   NMT       |                   Pointer to NXM subtable                  |
             |  Bits 0-8=length            | RH=offset into CDB           |
             |------------------------------------------------------------|
   CSB       |                   Pointer to CPU status block              |
             |  Bits 0-8=length            | RH=offset into CDB           |
             |------------------------------------------------------------|
                                                                  Page 17


             |------------------------------------------------------------|
   DSB       |                   Pointer to device status block           |
             |  Bits 0-8=length            | RH=offset into CDB           |
             |------------------------------------------------------------|
   SDP       |                   Pointer to SBDIAG subtable               |
             |  Bits 0-8=length            | RH=offset into CDB           |
             |------------------------------------------------------------|
   BPA       |               Performance analysis subtable ptr            |
             |  Bits 0-8=length            | RH=offset into CDB           |
             |------------------------------------------------------------|
   MAP       |                   Addr of CPU's exec map                   |
             |------------------------------------------------------------|
   SPT       |                   Special pages table                      |
             |------------------------------------------------------------|
   XPT       |                  Temporary storage for SPT                 |
             |------------------------------------------------------------|
   CPN       |                       CPU number                           |
             |------------------------------------------------------------|
   SK0       |  Generate SKPCPU(0) (Instruction to skip only on CPU0)     |
             |------------------------------------------------------------|
   SK1       |  Generate SKPCPU(1) (Instruction to skip only on CPU1)     |
             |------------------------------------------------------------|
   OK1       |                Address of policy CPU's OK word             |
             |------------------------------------------------------------|
   SLF       |                   Pointer to start of CDB                  |
             |------------------------------------------------------------|
   SCN       |  Scheduler run queue scan list addr (SSCAN or SSCAN1)      |
             |------------------------------------------------------------|
   SST       |             Address of subqueue scanning table             |
             |------------------------------------------------------------|
   NPD       |                     Null PDL pointer                       |
             |------------------------------------------------------------|
   EPD       |                     Error PDL pointer                      |
             |------------------------------------------------------------|
   NJD       |    Address of null job data area (offset by 20)            |
             |------------------------------------------------------------|
   STO       |              Scanner once-a-tick routine address           |
             |------------------------------------------------------------|
   ISR       |             Scanner once-a-second routine address          |
             |------------------------------------------------------------|
   DLK       |  Calls DSKLOK ownership flag (0 = currently owns DSKLOK)   |
             |------------------------------------------------------------|
                                                                  Page 18


             |------------------------------------------------------------|
   SCD       |    Scheduler interlock flag (-1=doesn't own interlock,     |
             |        0=owns interlock, n>0=has owned interlock)          |
             |------------------------------------------------------------|
   RES       |          Address of power fail restart return              |
             |------------------------------------------------------------|
   NBI       |           Number interrupts broken by BRKLOK               |
             |------------------------------------------------------------|
   ABK       |                Return address for CPNBPT                   |
             |------------------------------------------------------------|
   KAF       |             Keep-alive-failure dispatch address            |
             |------------------------------------------------------------|
   NAP       |  CONSO, CONI PI bits for all PIs except APR PI in progress |
             |------------------------------------------------------------|
   APP       |  CONSO, CONI PI bits for APR PI in progress                |
             |------------------------------------------------------------|
   API       |                 APR PI channel for this CPU                |
             |------------------------------------------------------------|
   ACO       |                 CONSO PI bit for APR PI on                 |
             |------------------------------------------------------------|
   CHL       |  Address of interrupt PC for interrupt level (APnCHL)      |
             |------------------------------------------------------------|
   CKL       |  Address of interrupt PC for clock level (CKnCHL)          |
             |------------------------------------------------------------|
   CON       |  APR CONSO mask for currently enabled condition            |
             |------------------------------------------------------------|
   EEB       |              Standard EXEC enabled CONSO bits              |
             |------------------------------------------------------------|
   IEF       |  Mask to clear all interrupting APR error flags            |
             |  except parity and clock errors and sweep done             |
             |------------------------------------------------------------|
   CCF       |               Clear clock flag instruction                 |
             |------------------------------------------------------------|
   HCT       |  Instruction that skips if clock has ticked.               |
             |------------------------------------------------------------|
   MPI       |  Address of parity sweep instruction (CPLMPI or CPSMPI)    |
             |------------------------------------------------------------|
   MPS       |Bits to request parity sweep|Addr of parity sweep subroutine|
             |------------------------------------------------------------|
   NXM       |              Mask to test/clear APR NXM bit                |
             |------------------------------------------------------------|
   MPE       |              Mask to test/clear APR parity err             |
             |------------------------------------------------------------|
                                                                  Page 19


             |------------------------------------------------------------|
   SCS       |  Scheduler doorbell bits for all CPUs except this CPU      |
             |------------------------------------------------------------|
   SCC       |  Scheduler doorbell bit for this CPU                       |
             |------------------------------------------------------------|
   QPS       |  Queued protocol doorbell bits for all CPUs except this CPU|
             |------------------------------------------------------------|
   QPC       |  Queued protocol doorbell bit for this CPU                 |
             |------------------------------------------------------------|
   DBM       |  Mask of all doorbell bits for this CPU                    |
             |------------------------------------------------------------|
   EBR       |              Exec base register on this CPU                |
             |------------------------------------------------------------|
   CTN       |  CTY number for this CPU     |  DLS line number on DTE     |
             |------------------------------------------------------------|
   DTN       |                Number of DTEs on this CPU                  |
             |------------------------------------------------------------|
   CAC       /  Saved AC set 0 at start of stopcode processing            /
             |------------------------------------------------------------|
   STT       |              K?SER temp for trap processing                |
             |------------------------------------------------------------|
   ST1       |                  Saved T1 on page traps                    |
             |------------------------------------------------------------|
   ST2       |                   Saved T2 on page traps                   |
             |------------------------------------------------------------|
   EJ1       |               K?SER temp for IME processing                |
             |------------------------------------------------------------|
   EJ2       |               K?SER temp for IME processing                |
             |------------------------------------------------------------|
   EJ3       |               K?SER temp for IME processing                |
             |------------------------------------------------------------|
   EJ4       |               K?SER temp for IME processing                |
             |------------------------------------------------------------|
   RCT       /                 Real time PI channel table                 /
             /                       (6 words)                            /
             |------------------------------------------------------------|
   RDT       /                  Real time dismiss table                   /
             /                       (6 words)                            /
             |------------------------------------------------------------|
   CPI       |         CONI PI at start of stopcode processing            |
             |------------------------------------------------------------|
                                                                  Page 20


             |------------------------------------------------------------|
   SVA       |Stopcode processing JSRs here to save all AC sets           |
             |------------------------------------------------------------|
   SVB       |Instruction that jumps to routine to save all AC sets       |
             |                 (JRST SVSETS)                              |
             |------------------------------------------------------------|
   TRP       |Current MUUO saved at start of stopcode processing          |
             |------------------------------------------------------------|
   RTS       |    Temporarily used during RTTRP error procedure           |
             |------------------------------------------------------------|
   RTT       |              "RTTRP in progress" Flag                      |
             |------------------------------------------------------------|
   TML       |         Value of time at last clock tick                   |
             |------------------------------------------------------------|
   OCB       |        0 if this CDB isn't owned by a CPU                  |
             |------------------------------------------------------------|
   AID       |        -1 if restart (not initial startup)                 |
             |------------------------------------------------------------|
   DWD       |             Recursion interlock for DIE                    |
             |------------------------------------------------------------|
   SAV       |                PI save routines                            |
             |  Tape PI Save routine addr |  Disk PI Save routine addr    |
             |------------------------------------------------------------|
   ACD       |             Zero if AUTCON has run on this CPU             |
             |------------------------------------------------------------|
   TIL       |                AUTCON tape interlock word                  |
             |------------------------------------------------------------|
   NUM       |   Starting Controller for AUTCON (RPx, RNx, MTx)           |
             |------------------------------------------------------------|
   CML       |  Address of start of tape channel's interrupt routine      |
             |------------------------------------------------------------|
   TCH       |              Used for vectored tape interrupts             |
             |------------------------------------------------------------|
   SPR       |  Instruction to cause parity error interrupt               |
             |------------------------------------------------------------|
   CPR       |  Instruction to clear parity error flag                    |
             |------------------------------------------------------------|
   SB0       |            SBDIAG function 0 argument                      |
             |------------------------------------------------------------|
   S0A       |               SBDIAG function 0 answer                     |
             |------------------------------------------------------------|
   SB1       |               SBDIAG function 1 argument                   |
             |------------------------------------------------------------|
   S1A       |                SBDIAG function 1 answer                    |
             |------------------------------------------------------------|
                                                                  Page 21


|            |------------------------------------------------------------|
|  TOA       |             Addr of character typeout routine              |
|            |------------------------------------------------------------|
|  TIV       |             Addr of vector with input routines             |
|            |------------------------------------------------------------|
|  NLD       |  DX20 auto-reload flag: 0 = enable, non-zero = disabled    |
|            |------------------------------------------------------------|
|  DDT       |      Instruction for this CPU to enter EDDT                |
|            |------------------------------------------------------------|
|  EDV       |      Code "EDV"            | Length of EXEC data vector    |
|            |------------------------------------------------------------|
|  ED1       |             Adr of address swapping block                  |
|            |------------------------------------------------------------|
|  ED2       |               Relocated contents of .JBSYM                 |
|            |------------------------------------------------------------|
|  ED3       |                Relocated contents of .JBUSY                |
|            |------------------------------------------------------------|
|  ED4       |                Address of word for DDT to use              |
|            |------------------------------------------------------------|
|  ED5       |                   CPU/paging hardware data                 |
|            |------------------------------------------------------------|
|  ED6       |             Physical address of this CPU's EPT             |
|            |------------------------------------------------------------|
|  ED7       |             Physical address of this CPU's SPT             |
|            |------------------------------------------------------------|
|  ED0       |             Physical address of this CPU's CST             |
|            |------------------------------------------------------------|
|  HSF       |                    Word for DDT to use                     |
|            |------------------------------------------------------------|
|  SYB       |              Length of address swapping block              |
|            |------------------------------------------------------------|
|  SY1       |                   Number of words to swap                  |
|            |------------------------------------------------------------|
|  SY2       |                  Address of first word to swap             |
|            |------------------------------------------------------------|
|  SY3       |                Place where new map may be found            |
|            |------------------------------------------------------------|
|  SY4       |                  Place to save old contents                |
|            |------------------------------------------------------------|
|  SPC       |    Stopcode PC flags are saved here during DIE routine     |
|            |------------------------------------------------------------|
|  SP1       |                     Stopcode PC                            |
|            |------------------------------------------------------------|
|  SP2       |                     New PC flags                           |
|            |------------------------------------------------------------|
|  SP3       |           JSR entry point into DIE routine                 |
|            |------------------------------------------------------------|
                                                                  Page 22


                      CPU Data Block -- Variables Area


   The variables area of the CDB has traditional, six-character  symbols,
   used  only  in  the CDB for CPU0.  Some of these symbols are obsolete,
   and have been superseded by symbols in the form .Cnxxx (where n is the
   CPU  number).   For  words  that  have  both  types  of  symbols,  the
   traditional symbol is listed below the .Cnxxx symbol, in parentheses.


   Symbol     Map
             +------------------------------------------------------------+
   VBG       |      Size of largest user program (in words)               |
   (CORMAX)  |                                                            |
             |------------------------------------------------------------|
             |           Pointer to last free block possible              |
   CORLST    |                                                            |
             |------------------------------------------------------------|
             |            Free + dormant + idle core blocks               |
   CORTAL    |                                                            |
             |------------------------------------------------------------|
             |                         Obsolete                           |
   SHFWAT    |                                                            |
             |------------------------------------------------------------|
             |     Absolute address of lowest hole in core                |
   HOLEF     |                                                            |
             |------------------------------------------------------------|
   UPT       |              Uptime for this CPU in clock ticks            |
             |------------------------------------------------------------|
             |                         Obsolete                           |
   SHFWRD    |                                                            |
             |------------------------------------------------------------|
             |                         Obsolete                           |
   STUSER    |                                                            |
             |------------------------------------------------------------|
             |       Highest job number currently assigned                |
   HIGHJB    |                                                            |
             |------------------------------------------------------------|
             |           Number of words cleared by CLRCOR                |
   CLRWRD    |                                                            |
             |------------------------------------------------------------|
   LST       |            Lost time on this CPU in jiffies                |
   (LSTWRD)  |                                                            |
             |------------------------------------------------------------|
             |            Size of physical memory in words                |
   MEMSIZ    |                                                            |
             |------------------------------------------------------------|
   TPE       |       Total parity errors detected on this CPU             |
             |------------------------------------------------------------|
   SPE       |   Total spurious parity errors (did not recur) on this CPU |
             |------------------------------------------------------------|
                                                                  Page 23


|            |------------------------------------------------------------|
|  MPC       |         Total number of times this CPU continued           |
|            |         after a parity error                               |
|            |------------------------------------------------------------|
|  MPA       |   Memory parity address of first bad address               |
|            |------------------------------------------------------------|
|  MPW       |           Contents of first bad word found                 |
|            |------------------------------------------------------------|
|  MPP       |  Memory parity PC exclusive of parity sweep                |
|            |------------------------------------------------------------|
|            |       Number of PDL OVF's at UUO level not recovered       |
|  EPOCNT    |                                                            |
|            |------------------------------------------------------------|
|            |                        Obsolete                            |
|  EPOREC    |                                                            |
|            |------------------------------------------------------------|
|            |                Highest legal value of CORMAX               |
|  MAXMAX    |                                                            |
|            |------------------------------------------------------------|
|            |          Count-down timer for SET KSYS command             |
|  SYSKTM    |                                                            |
|            |------------------------------------------------------------|
|            |                 Lower bound on CORMAX                      |
|  CORMIN    |                                                            |
|            |------------------------------------------------------------|
|  ABC       |            Address break count on this CPU                 |
|            |------------------------------------------------------------|
|  ABA       |           Address break address on this CPU                |
|            |------------------------------------------------------------|
|  LJR       |               Last job run on this CPU                     |
|            |------------------------------------------------------------|
|  ODA       /                     Obsolete (3 words)                     /
|            |------------------------------------------------------------|
|  STS       |              Stop timesharing on this CPU.                 |
|            | Contains job no. that did TRPSET or RECON. UUO.            |
|            |------------------------------------------------------------|
|  RUN       |     Operator-controlled scheduling bit for this CPU.       |
|            |     (Refer to GETTAB word %CVRUN for bit definitions)      |
             |------------------------------------------------------------|
   NUL       |            Null time for this CPU in jiffies               |
             |------------------------------------------------------------|
   EDI       |           No. of Exec "don't care" interrupts              |
             |------------------------------------------------------------|
   JOB       |                Current job on this CPU                     |
             |------------------------------------------------------------|
   OHT       |        Overhead time for this CPU in jiffies               |
             |------------------------------------------------------------|
   EVM       |          Max. amount of exec space for jobs                |
             |            mapped in exec mode by LOCK UUO.                |
             |------------------------------------------------------------|
   EVU       | Total exec virt addr. space currently being used           |
             |         to map user segments                               |
             |------------------------------------------------------------|
                                                                  Page 24


|            |------------------------------------------------------------|
|  LLC       | Number of times this CPU has looped waiting for other CPU  |
|            |------------------------------------------------------------|
|  TUC       |             Total number of UUOs on this CPU               |
|            |------------------------------------------------------------|
|  TJC       |              Total job context-switches                    |
|            |------------------------------------------------------------|
|  TNE       |                    Total NXM's                             |
|            |------------------------------------------------------------|
|  SNE       |               Total non-reproducible NXM's                 |
|            |------------------------------------------------------------|
|  NJA       |               Total jobs crashed this NXM                  |
|            |------------------------------------------------------------|
|  MNA       |                First address found with NXM                |
|            |------------------------------------------------------------|
|  EBJ       |                   EBOX ticks/jiffy                         |
|            |------------------------------------------------------------|
|  MBJ       |                   MBOX ticks/jiffy                         |
|            |------------------------------------------------------------|
|  PBA       |  Physical address with bad parity on last parity trap      |
|            |------------------------------------------------------------|
|  TBD       |    Contents of bad word on last AR/ARX parity trap         |
|            |------------------------------------------------------------|
|  TGD       |Good contents of word after recovery from AR/ARX parity trap|
|            |------------------------------------------------------------|
|  NPT       |           Total no. of AR/ARX parity traps                 |
|            |------------------------------------------------------------|
|  AER       |          Results of RDERA on last parity/NXM interrupt     |
|            |------------------------------------------------------------|
|  PEF       |         Results of CONI APR, on parity interrupt           |
|            |------------------------------------------------------------|
|  PSB       /                   Obsolete (4 words)                       /
|            |------------------------------------------------------------|
|  PPC       |              PC on last AR/ARX parity trap                 |
|            |------------------------------------------------------------|
|  PFW       |      Page fail word on last AR/ARX parity trap             |
|            |------------------------------------------------------------|
|  HPT       |                No. hard AR/ARX parity traps                |
|            |------------------------------------------------------------|
|  SAR       |                No. soft AR/ARX parity traps                |
|            |------------------------------------------------------------|
|  PTP       |                 No. page table parity traps                |
|            |------------------------------------------------------------|
|  CSN       |                   No. cache sweeps started                 |
|            |------------------------------------------------------------|
                                                                  Page 25


|            |------------------------------------------------------------|
|  CLN       |           No. of times scheduler skipped a job             |
|            |       because the job needed a cache sweep on another CPU  |
|            |------------------------------------------------------------|
|  CLT       | No. of jiffies CPU ran null job waiting for cache sweep    |
|            |------------------------------------------------------------|
|  CSD       | No. of times swap-out had to wait for cache sweep          |
|            |------------------------------------------------------------|
|  CRN       |             Cache sweep request sweep count                |
|            |------------------------------------------------------------|
|  CEC       |No. non-recoverable AR/ARX parity errors involving cache    |
|            |------------------------------------------------------------|
|  PTR       |             Retry word for AR/ARX parity trap              |
|            |------------------------------------------------------------|
|  TSD       |                      Obsolete                              |
|            |------------------------------------------------------------|
|  REP       |          Parity error/NXM reporting flag                   |
|            |     0 = report NXM error, -1 = report parity error         |
|            |------------------------------------------------------------|
|  NDB       | Number of times this CPU's doorbell was rung               |
|            |------------------------------------------------------------|
|  SBR       | Status blocks read on this CPU (see SR.xxx in S.MAC)       |
|            |      Unused               |        Bit settings            |
|            |------------------------------------------------------------|
|  BPF       |        Background performance analysis timer.              |
|            |  If meter is running, contains negative of the number      |
|            |      of clock ticks to next performance analysis update.   |
|            |------------------------------------------------------------|
|  FBI       |                     File blocks input (read)               |
|            |------------------------------------------------------------|
|  FBO       |                     File blocks output (written)           |
|            |------------------------------------------------------------|
|  SBI       |                    Swapping blocks input (read)            |
|            |------------------------------------------------------------|
|  SBO       |                   Swapping blocks output (written)         |
|            |------------------------------------------------------------|
|  SNC       |                   Number of CPU stopcodes                  |
|            |------------------------------------------------------------|
|  SND       |                    Number of DEBUG stopcodes               |
|            |------------------------------------------------------------|
|  SNJ       |                     Number of JOB stopcodes                |
|            |------------------------------------------------------------|
|  SJN       |                    Job number as last stopcode             |
|            |------------------------------------------------------------|
|  SNM       |    Name of last stopcode     | PC+1 of last stopcode       |
|            |------------------------------------------------------------|
|  SPN       |                  Program running at last stopcode          |
|            |------------------------------------------------------------|
|  SPP       |                   PPN of user at last stopcode             |
|            |------------------------------------------------------------|
|  STN       |                     TTY name at last stopcode              |
|            |------------------------------------------------------------|
|  SUP       |                 User PC at time of last stopcode           |
|            |------------------------------------------------------------|
                                                                  Page 26


|            |------------------------------------------------------------|
|  SUU       |                 UUO at time of last stopcode               |
|            |------------------------------------------------------------|
|  EJN       |               Job number at last parity/NXM error          |
|            |------------------------------------------------------------|
|  EPN       |                Program at last parity/NXM error            |
|            |------------------------------------------------------------|
|  PPI       |   Results of CONI PI, on parity/NXM interrupt              |
|            |------------------------------------------------------------|
|  TPI       |         Results of CONI PI, on page fail trap              |
|            |------------------------------------------------------------|
|  RQS       | Number of times scheduler interlock was requested          |
|            |                      when not owned.                       |
|            |------------------------------------------------------------|
|  TFI       |            Number of tape frames read on this CPU          |
|            |------------------------------------------------------------|
|  TFO       |          Number of tape frames written on this CPU         |
|            |------------------------------------------------------------|
|  SNI       |            Stopcodes that do not dump (Events)             |
             |------------------------------------------------------------|
             /                    Response subtable _*                    /
             |------------------------------------------------------------|
             /                   Memory parity subtable _*                /
             |------------------------------------------------------------|
             /                   Memory NXM subtable _*                   /
             |------------------------------------------------------------|
             /                   CPU status block subtable _*             /
             |------------------------------------------------------------|
             /                 SBDIAG status block subtable _*            /
             |------------------------------------------------------------|
             /                   Device status block subtable _*          /
             |------------------------------------------------------------|
             /       KL background performance analysis subtable _*       /
             |------------------------------------------------------------|
   ADR       |           Same as JBTADR (J) for current job               |
   (JOBADR)  |                                                            |
             |------------------------------------------------------------|
   REL       |               Highest rel addr for current user            |
             |------------------------------------------------------------|
   PC        /          Job PC when scheduler is called (2 words)         /
             |------------------------------------------------------------|
   XTM       | Time of last switch from monitor cycle to user job or back |
             |------------------------------------------------------------|
   LS2       |         Additional lost time (fractional jiffy)            |
             |------------------------------------------------------------|
   NL2       |         Additional null time (fractional jiffy)            |
             |------------------------------------------------------------|
                                                                  Page 27


             |------------------------------------------------------------|
   OH2       | Additional overhead time (fractional jiffy)                |
             |------------------------------------------------------------|
   TNT       |     Time interval since last at clock level                |
             |------------------------------------------------------------|
   HTM       |                Hung device time check                      |
             |------------------------------------------------------------|
   SEC       |     Seconds left before doing once-a-minute code           |
             |------------------------------------------------------------|
   RCU       /        Count of realtime CONSOs of skip chain (6 words)    /
             |------------------------------------------------------------|
   RIT       /        Realtime initialization table (6 words)             /
             |------------------------------------------------------------|
   DMI       |            Realtime dismiss instruction                    |
             |------------------------------------------------------------|
   CKF(1)    |      Non-zero when CLK interrupt (PI 7) requested          |
   (CLKFLG)  |                                                            |
             |------------------------------------------------------------|
   TMF(2)    |                Non-zero when APR clock ticked              |
   (TIMEF)   |                                                            |
             |------------------------------------------------------------|
   SCF(3)    |               Force scheduling from exec mode              |
             |------------------------------------------------------------|
   CHT       |           Flag to remember clock has ticked.               |
             |     Used to call queued I/O protocol routines.             |
             |------------------------------------------------------------|
   RTF       |    Non-zero when realtime reschedule is required           |
   SCDRTF    |                                                            |
             |------------------------------------------------------------|
   ISF       |                   "In-scheduler" flag                      |
             |------------------------------------------------------------|
   SUD       |   Address of scan table used during last scheduler scan    |
             |------------------------------------------------------------|
   HQU       |Non-zero if current job needs to be rescheduled for HPQ UUO |
             |------------------------------------------------------------|
   PLT       | Flag set if current clock tick is potentially lost time    |
             |------------------------------------------------------------|
   CLF       | Flag set if current clock tick is potentially lost time    |
             |         due to the state of the stack.                     |
             |------------------------------------------------------------|
   CL2       |                 Low order cache lost time                  |
             |------------------------------------------------------------|
   SDA       |         Number cache sweeps for core deallocation          |
             |------------------------------------------------------------|
                                                                  Page 28


             |------------------------------------------------------------|
   CSR       |       Cache sweep request flag for this CPU                |
             |------------------------------------------------------------|
   AEF       |                      APR error flag                        |
             |------------------------------------------------------------|
   SAC       |                   Saved copy of .CPAEF                     |
             |------------------------------------------------------------|
   APC       /     Current PC on detecting APR error (2 words)            /
             |------------------------------------------------------------|
   MDP       /             Memory parity error double-word PC             /
             |------------------------------------------------------------|
   PPD       /                   AR/ARX double-word PC                    /
             |------------------------------------------------------------|
   NJE       |              Error in null job if non-zero                 |
             |------------------------------------------------------------|
   SFC       |                    Scheduler fairness count                |
             |------------------------------------------------------------|
   SQF       |       Non-zero if current job from subqueues               |
             |------------------------------------------------------------|
   APR       |             Current user address break conditions          |
             |------------------------------------------------------------|
   IPI       |               Interval timer PI assignment                 |
             |------------------------------------------------------------|
   CN1       |    CONSO mask for APR interrupts user wants to handle.     |
             |------------------------------------------------------------|
   DTO       |                    Last DATAO PAG done                     |
             |------------------------------------------------------------|
   SP        /           Place to save P on APR interrupt (2 words)       /
             |------------------------------------------------------------|
   S17       /        Place to save AC17 on CLK interrupt (2 words)       /
             |------------------------------------------------------------|
   A17       |     20th (octal) word for storing ACs on parity trap       |
             |------------------------------------------------------------|
   LPP       |                 Last memory parity PC                      |
             |------------------------------------------------------------|
   LSB       |                       Obsolete                             |
             |------------------------------------------------------------|
   LCI       |        Time of last parity/NXM interrupt                   |
             |           caused by channel reference                      |
             |------------------------------------------------------------|
                                                                  Page 29


             |------------------------------------------------------------|
   PIP       |                  Pointer to real interrupt PC              |
             |------------------------------------------------------------|
   PSP       |       Parity/NXM sweep in progress on this CPU             |
             |------------------------------------------------------------|
   CHE       |       Channel error reporting in progress on this CPU      |
             |------------------------------------------------------------|
   TCX       |             Results of DATAI PAG, on error trap            |
             |------------------------------------------------------------|
   TCT       |             Triad counter for 60Hz leap jiffies            |
             |------------------------------------------------------------|
   PJB       |               Owner of performance meter (job no.)         |
             |------------------------------------------------------------|
   MJB       |                 Measured job of PERF.  UUO.                |
             |------------------------------------------------------------|
   MJ1       |                     Job enable condition                   |
             |------------------------------------------------------------|
   PMR       |           Non-zero means PERF. meter is running            |
             |------------------------------------------------------------|
   PAE       |        Used to store PERF. analysis enables                |
             |------------------------------------------------------------|
   PRQ       |    Flag used in testing and giving PERF. meter away        |
             |------------------------------------------------------------|
   APS       |Non-zero means ACCT and PERF. meters should be kept in sync.|
             |------------------------------------------------------------|
   MM0       | "Virtual PERF meter's" high order memory reference count   |
             |------------------------------------------------------------|
   MM1       |                     Low order mem ref count                |
             |------------------------------------------------------------|
   BPC       |           Background performance analysis (B.P.A.)         |
             |           sample interval (in ticks)                       |
             |------------------------------------------------------------|
   BPT       /B.P.A. saved RDTIME at start of current interval (2 words)  /
             |------------------------------------------------------------|
   TIM       |                  Clock interrupt flag for KL10s            |
             |------------------------------------------------------------|
   ETM       |    SOSN done on this location every minute, to make sure   |
             |        KL error chunks don't remain allocated              |
             |------------------------------------------------------------|
   EAD       |                 KL error chunk addresses                   |
             |Addr. of last KL error chunk | Addr. of first KL error chunk|
             |------------------------------------------------------------|
                                                                  Page 30


             |------------------------------------------------------------|
   KPB       /               KLINIK parameter buffer (6 words)            /
             |------------------------------------------------------------|
   20F       | Flags about RSX20F front end | Count of characters         |
             |                              | being output                |
             |------------------------------------------------------------|
   20S       /         Space for incoming line speeds (2 words)           /
             |------------------------------------------------------------|
   20B       / Buffer for 16-bit data to RSX20F (30 words)                /
             |------------------------------------------------------------|
   PTH       |       Parity/NXM trap occurred during cache sweep          |
             |------------------------------------------------------------|
   STE       |                 RDERA contents on sweep trap               |
             |------------------------------------------------------------|
   PTF       |Count of page table parity traps allowed between clock ticks|
             | (Used to crash system if too many.)                        |
             |------------------------------------------------------------|
   CA1       /                Power fail AC block 1 save area             /
             |------------------------------------------------------------|
   CA2       /                Power fail AC block 2 save area             /
             |------------------------------------------------------------|
   CA3       |                Power fail AC block 3 save area             /
             |------------------------------------------------------------|
   CA4       /                Power fail AC block 4 save area             /
             |------------------------------------------------------------|
   CTQ       |         SCNSER output queue header for CTY on this CPU     |
             |         (for KL10, is header for all RSX20F lines)         |
             |------------------------------------------------------------|
   QUE       |      Queue of DDBs for I/O requests on other CPUs.         |
             |      Emptied into CPUDSQ once per tick                     |
             |------------------------------------------------------------|
   SWP       |      Non-zero if swap request from another CPU             |
             |------------------------------------------------------------|
   QND       |              Address of last DDB in .CPQUE                 |
             |------------------------------------------------------------|
   SWD       |                 Flag for FILIO cache sweeps                |
             |------------------------------------------------------------|
   DRQ       |             Disks on this CPU need requeuing.              |
             |(-1 if disk requests for this CPU need to be requeued       |
             | to another CPU because this one is dead.                   |
             |------------------------------------------------------------|
                                                                  Page 31


|            |------------------------------------------------------------|
|  TAP       |              Tape waiting for cache sweep.                 |
|            |              0 if no tape waiting for sweep                |
|            |              -1 if tape I/O waiting for sweep              |
|            |              0,,-1 if tape waiting, DSKTIC did sweep       |
|            |------------------------------------------------------------|
|  CHX       |     This CPU's bit in TKBSTS word of MTA KDB,              |
|            |     indicating a sweep needs to be done.                   |
|            |------------------------------------------------------------|
|  PIB       |                Save PI state for NBFOFF                    |
|            |------------------------------------------------------------|
|  PIS       |                Save PI state for SYSPIN                    |
|            |------------------------------------------------------------|
|  DPI       |                Save PI state for DEVPIN                    |
|            |------------------------------------------------------------|
|  BTI       |                Save PI state for BTSOFF                    |
|            |------------------------------------------------------------|
|  IUT       |                   Uptime a second ago                      |
|            |------------------------------------------------------------|
|  NTF       |              NETSER software interrupt flag                |
|            |------------------------------------------------------------|
|  QTS       /                  QUESER variables (23 words)               /
|            |------------------------------------------------------------|
|  CPG       | Result of DATAI PAG, done by SVSETS with bits set          |
|            | so that DATAO will restore current AC set                  |
|            |------------------------------------------------------------|
|  ACA       | Address of 20 word block where SVSETS saved the AC set     |
|            |------------------------------------------------------------|
|  KPM       |                PM.KPM is set if MCA25                      |
|            |------------------------------------------------------------|
|  JCH       |    Job/context handle for the current job on this CPU      |
|            |------------------------------------------------------------|
|  CHN       /  Addr. of channel data block (CHN) for internal channels   /
|            /                KL10 only    (8 words)                      /
|            |------------------------------------------------------------|
|  PAT       /            Patch space (here to next page boundary)        /
|            +------------------------------------------------------------+
|


   Notes:

        1.  The subtables  are  defined  by  GETTAB  symbols,  and  their
            contents are listed in the TOPS-10 Monitor Calls Manual.                                       _______ _______ _____ ______

        2.  CKF-CLKFLG takes the place of a hardware interrupt flag.

        3.  TMF-TIMFF is  set  so  clock  interrupt  routines  will  know
            another jiffy has passed.

        4.  Normally, clock interrupts are dismissed when they  interrupt
            exec  mode.   SCF  is  set after monitor detects an error and
            desires to force rescheduling.

                                                                  Page 32


   7.0  CDT -- CONNECTED DEVICE TABLE



   Description:   Used to point to  DDBs  of  devices  connected  to  the
                  Multiplexed  I/O  Facility  (MPX).  This table contains
                  the connected device's UDX number and DDB  address  and
                  is sorted by UDX number.

                  The left half of the DEVXTR word of the MPX DDB  points
                  to the CDT table.

   Defined in:    MSGSER

   Used by:       MSGSER


             Map
             +------------------------------------------------------------+
             |       Size of table    |          No. of free slots        |
             |------------------------------------------------------------|
             |     UDX 1              |           DDB addr.               |
             |------------------------------------------------------------|
             |     UDX 2              |           DDB addr.               |
             |------------------------------------------------------------|
             |     UDX 2              |           DDB addr.               |
             |------------------------------------------------------------|
                                  .   .   .
                                                                  Page 33


   8.0  CHKTAB -- UUO CHECK BIT TABLE



   Description:   Contains bits for checking UUOs that can be executed on
                  any   CPU  (UU.CP1),  for  checking  effective  address
                  (UU.EA) and for flagging LOOKUP, ENTER, and RENAME UUOs
                  (UU.LER).

                  The table is in the same order as UUOTAB so the  UUOTAB
                  index in AC T2 serves to get the CHKTAB entry.

                  If a check bit is  specified  for  the  requested  UUO,
                  UUOCON goes to the UUOCHK routine in VMSER.

   Defined in:    UUOCON

             Map
             +------------------------------------------------------------+
             |           Check bit for 40 |       Check bit for 41        |
             |------------------------------------------------------------|
             |                  0         |               0               |
             |------------------------------------------------------------|
             |                  0         |               0               |
             |------------------------------------------------------------|
             |                  0         |       Check bit for 47        |
             |------------------------------------------------------------|
                                     .    .    .

   Because this table is accessed in half words, the bit definitions  are
   equivalent  for the right half and left half words.  The following bit
   definitions are based on the number of bits in the half word.

        Symbol    Bits      Description        ______    ____      ___________

         0        UU.CP1    UUO can be executed on any CPU.
        18

         7        UU.LER    Argument list is a LOOKUP/ENTER/RENAME block.
        25

        11        UU.EA     Check effective address.
        29
                                                                  Page 34


   9.0  CHKTBC -- CALL AND CALLI UUO CHECK BIT TABLE


   Description:   Contains validity check bits for CALL and  CALLI  UUOs.
                  This  table  is  in  the  same  order as UCLJMP, so the
                  UCLJMP index in AC T2 serves to get the  CHKTBC  entry.
                  If  a  check  bit  is  specified for the requested UUO,
                  UUOCON goes to the UUOCHK routine in VMSER.

   Defined in:    UUOCON

   Used by:       UUOCON, CPNSER


             Map
             +------------------------------------------------------------+
             |    Check bits for CALLI 0   |      Check bits for CALLI 1  |
             |------------------------------------------------------------|
             |    Check bits for CALLI 2   |      Check bits for CALLI 3  |
             |------------------------------------------------------------|
             |    Check bits for CALLI 4   |      Check bits for CALLI 5  |
             |------------------------------------------------------------|
                                       .   .   .

   Bit Definitions:

   Because the  table  is  organized  as  halfwords,  the  following  bit
   definitions apply for both left halfwords and right halfwords

   +--------------------------------------------------------------------+
   |CP1|   |   |NCL|WCC|NAL|LFT|LER|MNS|CEA|CAC| EA| Arg. list length   |
   +--------------------------------------------------------------------+

        Bits Name      Description        ____ ____      ___________

         0   UU.CP1    UUO can be executed on any CPU
        18
|       1    UU.SE1    UUO is executed in Section 1.
|       19

         3   UU.NCL    Negative argument (repeat) count is legal
        21

         4   UU.WCC    Working set can change
        22

         5   UU.NAL    Not allowed if locked
        23

         6   UU.LFT    Use left half of UUO for argument count
        24

         7   UU.LER    Argument list is a LOOKUP/ENTER/RENAME block
        25
                                                                  Page 35


         8   UU.MNS    User-supplied argument list length is  a  negative
                       value.
        26

         9   UU.CEA    Use contents of effective address as list length
        27

        10   UU.CAC    Use contents of UUO ac as list length  (modifiable
                       using UU.LFT).
        28

        11   UU.EA     Check effective address
        29

        30-35           Length of user's argument list

   If neither UUO.CEA nor UU.CAC is set, the list length  is  taken  from
   the CHKTBC table.
                                                                  Page 36


   10.0  CHN -- CHANNEL DATA BLOCK


   Description:   Contains information pertaining to all devices  on  one
                  data channel.

                  One Channel Data  Block  is  generated  dynamically  by
                  AUTCON  for each channel when the system is started and
                  when a new channel comes on-line.

   Defined in:    COMMOD

   Used by:       AUTCON, ERRCON, FILFND, FILIO, KLSER,  RNXKON,  RPXKON,
                  SYSINI, T78KON, TAPUUO, TDZKON, TMXKON, TMZKON, TX1KON
|
|  The format of the prototype CHN is illustrated in the following table.
|  Where  a different symbol is defined for right and left halfwords, the
|  left half symbol is followed by two commas (,,)  and  the  right  half
|  symbol is listed below it.
|
   Symbol     Map
             +------------------------------------------------------------+
   .CHNBSY   |   Number pending requests on this channel ( -1 is idle)    |
             |------------------------------------------------------------|
   .CHSYS,,  |      ADR of next CHN        |    Last UDB with error       |
   .CHLUE    |         0 if last           |                              |
             |------------------------------------------------------------|
   .CHICW    |              Initial control word on last error            |
             |------------------------------------------------------------|
   .CHFCW    |               Final control word after last error          |
             |------------------------------------------------------------|
   .CHCW2    |               Command word -2 on last error                |
             |------------------------------------------------------------|
   .CHCW1    |               Command word -1 on last error                |
             |------------------------------------------------------------|
   .CHCW0    |                Command word on last error                  |
             |------------------------------------------------------------|
   .CHDWZ    |                Data word -2 on last error                  |
             |------------------------------------------------------------|
   .CHDW1    |                Data word -1 on last error                  |
             |------------------------------------------------------------|
   .CHDW0    |                  Data word on last error                   |
             |------------------------------------------------------------|
   .CHMPE    |              Number of memory parity errors                |
             |------------------------------------------------------------|
   .CHDPE    |        Number of data parity errors (from device)          |
             |------------------------------------------------------------|
   .CHNXM    |       Number of non-existent memory errors or data         |
             |------------------------------------------------------------|
                                                                  Page 37


|            |------------------------------------------------------------|
|  .CHCSR,,  |    Bits to request CPU to   |     Last DDB Address         |
|  .CHLDE    |        sweep core           |                              |
|            |------------------------------------------------------------|
|  .CHTCW    |      Expected termination control word of last error       |
|            |------------------------------------------------------------|
|
|  (The remaining words apply only to disk channels.)
|
|            |------------------------------------------------------------|
|  CHNECT    |           Error count on current data transfer             |
|            |------------------------------------------------------------|
|  CHNRCT    |                 Current recalibrate count                  |
|            |------------------------------------------------------------|
|  CHNQUE    |       First DDB in TWQ      |     Job number of DDB        |
|            |------------------------------------------------------------|
|  CHNIFP(3) |          Initial fairness count for positioning            |
|            |------------------------------------------------------------|
|  CHNCFP    |          Current fairness count for positioning            |
|            |------------------------------------------------------------|
|  CHNIFT    |           Initial fairness count for transfers             |
|            |------------------------------------------------------------|
|  CHNCFT    |           Current fairness count for transfers             |
|            |------------------------------------------------------------|
|  CHNIFS    |              Initial swapping fairness count               |
|            |------------------------------------------------------------|
|  CHNCFS    |              Current swapping fairness count               |
|            |------------------------------------------------------------|
|  CHNNUM    |       Number of blocks currently being transferred         |
|            |------------------------------------------------------------|
|  CHNQUL    |              Length of XFER wait queue (TWQ)               |
|            |------------------------------------------------------------|
|  CHNTCW    |       Expected termination control word                    |
|            |------------------------------------------------------------|
|  CHNCUA    |              Current unit active on channel                |
|            |------------------------------------------------------------|
|  CHNRSC    |   Number of time DX20 on this channel was restarted        |
|            |------------------------------------------------------------|
|  CHNPCB    |   Addr. of Port Control Block for IPA-20 type channel      |
|            +------------------------------------------------------------+


   Notes:

        1.  The errors referred to in the Channel  Data  Block  are  both
            soft and hard errors.

        2.  TWQ = Transfer Wait Queue
|
|       3.  CHNIFP bytes are described below.
|
|       4.  CHNRSC applies only to internal channels.

                                                                  Page 38


   CHNIFP Byte Format
|
|            |------------------------------------------------------------|
|  CHNIFP    |22B|DX1|RH2|R11|LP2|CD2|MX|KLP|KNI|     |SWF|    IFC        |
|            |------------------------------------------------------------|
|              0   1   2   3   4   5  6   7   8  9-16  17  18-----------35
|


        Word      Bit       Byte      Meaning        ____      ___       ____      _______

        CHB22B    0         CP.22B    This is a 22-bit channel.
                  1         CP.DX1    This is a DX10 channel
                  2         CP.RH2    This is an RH20 channel.
                  3         CP.R11    This is a RH11.
                  4         CP.LP2    This is a LP20.
                  5         CP.CD2    This is a CD20.
|                 6         CP.MX     This  channel  can  start  multiple
|                                     transfers  at  the  same time (such
|                                     as, CI disks).
|                 7         CP.KLP    This is a CI-20 channel.
|                 8         CP.KNI    This is an NIA-20 channel.
|                 17        CP.SWF    Cache sweep  must  be  done  before
|                                     interrupt exit in FILIO.
        CHNIFP    18-35               Initial    fairness    count    for
                                      positioning.

                                                                  Page 39


   11.0  CHTABL -- SPECIAL CHARACTER TABLE



   Description:   One table entry for each  ASCII  character,  specifying
                  characteristics  and,  in  some cases, the address of a
                  special action  routine  for  processing  the  received
                  character.

                  Indexed by the ASCII value of the character.

   Defined in:    SCNSER

   Used by:       SCNSER, PTYSER

   Format of left half of each word:
   |--------------------------------------------------------------------|
   |SPO|  |PUNC|2PC|EPAR|VPOS|CRE|FILO|INVL|CNC|CRET|RIA|ALT|FIL|UAE|BRK|
   |--------------------------------------------------------------------|
     0  1-3  4   5    6    7    8    9   10  11   12  13  14  15  16  17

   Right half of each word may  contain  the  address  of  a  routine  to
   process the character upon receipt.

        Bit       Label          Meaning        ___       _____          _______

        0         CHSPO          Requires special checking on output
        1-3                      Undefined
        4         CHPUNC         Punctuation character
|       5         CH2PC          8-bit    character    that     has     a
|                                multi-character 7-bit expansion
        6         CHEPAR         Character is even parity (see Note 1)
        7         CHVPOS         Vertical positioning simulated with line
                                 feeds
        8         CHCRE          Gets CRLF after its <CTRL/x> echo
        9         CHFILO         Bit for output filler  routine  (not  in
                                 table)
|       10        CHINVL         Reserved 9-bit ASCII  character  (should
|                                never be received)
        11        CHCNC          This is <CTRL/C>
        12        CHCRET         This is carriage return
        13        CHRIA          RCV interrupt level action required (See
                                 Note 2)
        14        CHALT          This is an altmode
        15        CHFIL          Requires fillers at some speeds
        16        CHUAE          Echoes as <CTRL/x>
        17        CHBRK          This is a break character

   The format of CHTABL, the special character table, is described below.
   The  character's  ASCII  code  is followed by the printable characters
   (Char), the name of the character used in the code (Name), and the bit
   definitions  for  the  character  (Bits).   The  meanings  of  the bit
   settings are described on the previous page.  Note that  Bits  1-3  of
   each word are undefined.
                                                                  Page 40


   ASCII  Char  Name   Map (Bits)   _____  ____  ____   ___ ______
   Code   ____
                        0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
                      +----------------------------------------------------+
     000        NUL   | 1| 1|  | 1| 1|  |  |  |  |  | 1|  |  |  |  | RINUL |
                      |----------------------------------------------------|
     001   ^A   SOA   | 1| 1|  |  |  |  |  |  |  |  | 1|  |  | 1|  | RICA  |
                      |----------------------------------------------------|
     002   ^B   STX   | 1| 1|  |  |  |  |  |  |  |  | 1|  |  | 1|  | RICB  |
                      |----------------------------------------------------|
     003   ^C   ETX   | 1| 1|  | 1|  | 1|  |  | 1|  | 1|  |  | 1| 1| RICC  |
                      |----------------------------------------------------|
     004   ^D   EOT   | 1| 1|  |  |  |  |  |  |  |  | 1|  |  | 1|  | RICD  |
                      |----------------------------------------------------|
     005   ^E   ENQ   | 1| 1|  | 1|  |  |  |  |  |  |  |  |  | 1|  |       |
                      |----------------------------------------------------|
     006   ^F   ACK   | 1| 1|  | 1|  |  |  |  |  |  |  |  |  | 1|  |       |
                      |----------------------------------------------------|
     007   ^G   BEL   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  | 1|       |
                      |----------------------------------------------------|
     010   ^H   BS    | 1| 1|  |  |  |  |  |  |  |  | 1|  |  |  | 1| RIBSP |
|                     |----------------------------------------------------|
|    011   ^T   HT    | 1| 1|  | 1|  |  |  |  |  |  |  |  | 1|  |  |       |
                      |----------------------------------------------------|
     012   ^J   LF    | 1| 1|  | 1|  |  |  |  |  |  |  |  | 1|  | 1|       |
                      |----------------------------------------------------|
     013   ^K   VT    | 1| 1|  |  | 1|  |  |  |  |  |  |  | 1|  | 1|       |
                      |----------------------------------------------------|
     014   ^L   FF    | 1| 1|  | 1| 1|  |  |  |  |  |  |  | 1|  | 1|       |
                      |----------------------------------------------------|
     015   ^M   CR    | 1| 1|  |  |  |  |  |  |  | 1| 1|  | 1|  |  | RICM  |
                      |----------------------------------------------------|
     016   ^N   SO    | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|  |       |
                      |----------------------------------------------------|
     017   ^O   IS    | 1| 1|  | 1|  | 1|  |  |  |  | 1|  |  | 1|  | RICO  |
                      |----------------------------------------------------|
     020   ^P   DLE   | 1| 1|  |  |  |  |  |  |  |  | 1|  |  | 1|  | RICP  |
                      |----------------------------------------------------|
     021   ^Q   DC1   | 1| 1|  | 1|  |  |  |  |  |  | 1|  | 1| 1|  | RICQ  |
                      |----------------------------------------------------|
     022   ^R   DC2   | 1| 1|  | 1|  |  |  |  |  |  | 1|  | 1| 1| 1| RICR  |
                      |----------------------------------------------------|
     023   ^S   DC3   | 1| 1|  |  |  |  |  |  |  |  | 1|  | 1| 1|  | RICS  |
                      |----------------------------------------------------|
     024   ^T   DC4   | 1| 1|  | 1|  |  |  |  |  |  | 1|  | 1| 1| 1| RICT  |
                      |----------------------------------------------------|
     025   ^U   NAK   | 1| 1|  |  |  | 1|  |  |  |  | 1|  |  | 1| 1| RICU  |
                      |----------------------------------------------------|
     026   ^V   SYN   | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|  |       |
                      |----------------------------------------------------|
                                                                  Page 41


   ASCII  Char  Name      Map (Bits)   _____  ____  ____      ___ ______
   Code   ____
                        0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
                      |----------------------------------------------------|
|    027   ^W   ETB   | 1| 1|  | 1|  |  |  |  |  |  | 1|  |  | 1| 1| RIDEL |
                      |----------------------------------------------------|
     030   ^X   CAN   | 1| 1|  | 1|  |  |  |  |  |  |  |  |  | 1|  |       |
                      |----------------------------------------------------|
     031   ^Y   EM    | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|  |       |
                      |----------------------------------------------------|
     032   ^Z   SUB   | 1| 1|  |  |  | 1|  |  |  |  |  |  |  | 1| 1|       |
                      |----------------------------------------------------|
     033    $   ESC   | 1| 1|  | 1|  |  |  |  |  |  | 1| 1|  |  | 1| RIALT |
                      |----------------------------------------------------|
     034   ^\    FS   | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|  |       |
                      |----------------------------------------------------|
     035   ^]    GS   | 1| 1|  | 1|  |  |  |  |  |  |  |  |  | 1|  |       |
                      |----------------------------------------------------|
     036   ^^    RS   | 1| 1|  | 1|  |  |  |  |  |  |  |  |  | 1|  |       |
                      |----------------------------------------------------|
     037   ^_    US   | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|  |       |
                      |----------------------------------------------------|
|    040   (Space)    |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     041    |         |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     042    "         |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     043    #         |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     044    $         |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     045    %         |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     046    &         |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     047    '         |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     050    (         |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     051    )         |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     052    *         |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     053    +         |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     054    ,         |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     055    -         |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     056    .         |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     057    /         |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
                                                                  Page 42


   ASCII  Char  Name   Map (Bits)   _____  ____  ____   ___ ______
   Code   ____
                        0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
                      |----------------------------------------------------|
     060    0         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     061    1         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     062    2         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     063    3         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     064    4         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     065    5         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     066    6         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     067    7         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     070    8         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     071    9         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     072    :         |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     073    ;         |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     074    <         |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     075    =         |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     076    >         |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     077    ?         |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     100    @         |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     101    A         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     102    B         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     103    C         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     104    D         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     105    E         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     106    F         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     107    G         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     110    H         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
                                                                  Page 43


   ASCII  Char  Name   Map (Bits)   _____  ____  ____   ___ ______
   Code   ____
                        0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
                      |----------------------------------------------------|
     111    I         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     112    J         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     113    K         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     114    L         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     115    M         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     116    N         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     117    O         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     120    P         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     121    Q         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     122    R         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     123    S         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     124    T         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     125    U         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     126    V         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     127    W         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     130    X         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     131    Y         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     132    Z         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     133    [         |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     134    \         |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     135    ]         |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     136    ^         |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     137    _         |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     140    `         |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     141    a         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
                                                                  Page 44


   ASCII  Char  Name   Map (Bits)   _____  ____  ____   ___ ______
   Code   ____
                        0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
                      |----------------------------------------------------|
     142    b         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     143    c         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     144    d         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     145    e         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     146    f         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     147    g         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     150    h         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     151    i         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     152    j         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     153    k         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     154    l         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     155    m         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     156    n         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     157    o         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     160    p         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     161    q         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     162    r         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     163    s         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     164    t         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     165    u         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     166    v         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     167    w         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     170    x         |  |  |  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     171    y         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
     172    z         |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |       |
                      |----------------------------------------------------|
                                                                  Page 45


|  ASCII  Char  Name   Map (Bits)   _____  ____  ____   ___ ______
|  Code   ____
|                       0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
|                     |----------------------------------------------------|
|    173    {         |  | 1|  | 1|  |  |  |  |  |  |  |  |  |  |  |       |
|                     |----------------------------------------------------|
|    174    |         |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |       |
|                     |----------------------------------------------------|
|    175    }         | 1| 1|  | 1|  |  |  |  |  |  | 1| 1|  |  |  | RIALT*|
|                     |----------------------------------------------------|
|    176    ~         | 1| 1|  | 1|  |  |  |  |  |  | 1| 1|  |  |  | RIALT*|
|                     |----------------------------------------------------|
|    177        DEL   | 1| 1|  |  |  |  |  |  |  |  | 1|  |  |  | 1| RIDEL |
|                     |----------------------------------------------------|
|    200 (reserved)   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    201 (reserved)   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    202 (reserved)   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    203 (reserved)   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    204        IND   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    205        NEL   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    206        SSA   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    207        ESA   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    210        HTS   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    211        HTJ   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    212        VTS   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    213        PLD   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    214        PLU   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    215        RI    | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    216        SS2   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    217        SS3   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    220        DCS   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    221        PU1   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    222        PU2   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
                                                                  Page 46


|  ASCII  Char  Name   Map (Bits)   _____  ____  ____   ___ ______
|  Code   ____
|                       0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
|                     |----------------------------------------------------|
|    223        STS   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    224        CCH   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    225        MW    | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    226        SPA   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    227        EPA   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    230 (reserved)   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    231 (reserved)   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    232 (reserved)   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    233        CSI   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    234        ST    | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    235        OSC   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    236        PM    | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    237        APC   | 1 | 1| 1|  |  |  |  |  |  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    240 (reserved)   | 1 | 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    241        SP03  |   | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    242        SC04  |   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    243        SC02  |   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    244 (reserved)   | 1 | 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    245        SC05  |   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    246 (reserved)   | 1 | 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    247        SM24  |   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    250        SC01  |   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    251        SM52  |   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    252        SM21  |   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    253        SP17  |   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
                                                                  Page 47


|  ASCII  Char  Name   Map (Bits)   _____  ____  ____   ___ ______
|  Code   ____
|                        0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
|                     |----------------------------------------------------|
|    254 (reserved)   | 1 | 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    255 (reserved)   | 1 | 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    256 (reserved)   | 1 | 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    257 (reserved)   | 1 | 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    260        SM19  |   | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    261        SA02  |   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    262        NS02  |   | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    263        NS03  |   | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    264 (reserved)   | 1 | 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    265        SM17  |   | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    266        SM25  |   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    267        SM26  |   | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    270 (reserved)   | 1 | 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    271        NS01  |   | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    272        SM20  |   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    273        SP18  |   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    274        NF04  |   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    275        NF01  |   | 1| 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    276 (reserved)   | 1 | 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    277        SP16  |   | 1|  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    300        LA14  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    301        LA12  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    302        LA16  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    303        LA20  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    304        LA18  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
                                                                  Page 48


|  ASCII  Char  Name   Map (Bits)   _____  ____  ____   ___ ______
|  Code   ____
|                        0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
|                     |----------------------------------------------------|
|    305        LA28  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    306        LA52  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    307        LC42  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    310        LE14  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    311        LE12  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    312        LE16  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    313        LE18  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    314        LI14  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    315        LI12  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    316        LI16  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    317        LI18  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    320 (reserved)   | 1 | 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    321        LN20  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    322        LO14  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    323        LO12  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    324        LO16  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    325        LO20  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    326        LO18  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    327        LO52  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    330        LO62  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    331        LU14  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    332        LU12  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    333        LU16  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
                                                                  Page 49


|  ASCII  Char  Name   Map (Bits)   _____  ____  ____   ___ ______
|  Code   ____
|                       0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
|                     |----------------------------------------------------|
|    334        LU18  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    335        LY18  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    336 (reserved)   | 1 | 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    337        LS61  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    340        LA13  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    341        LA11  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    342        LA15  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    343        LA19  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    344        LA17  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    345        LA27  |   |  |  |  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    346        LA51  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    347        LC41  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    350        LE13  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    351        LE11  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    352        LE15  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    353        LE17  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    354        LI13  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    355        LI11  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    356        LI15  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    357        LI17  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    360 (reserved)   | 1 | 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    361        LN19  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    362        LO13  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
                                                                  Page 50


|  ASCII  Char  Name   Map (Bits)   _____  ____  ____   ___ ______
|  Code   ____
|                       0  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18---35
|                     |----------------------------------------------------|
|    363        LO11  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    364        LO15  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    365        LO19  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    366        LO17  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    367        LO51  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    370        LO61  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    371        LU13  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    372        LU11  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    373        LU15  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    374        LU17  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    375        LY17  |   |  | 1|  |  |  |  |  |  |  |  |  |  |  |  |      |
|                     |----------------------------------------------------|
|    376 (reserved)   | 1 | 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|      |
|                     |----------------------------------------------------|
|    377 (reserved)   | 1 | 1| 1|  |  |  |  | 1|  |  |  |  |  |  | 1|      |
|                     +----------------------------------------------------+
|
|  Notes:
|
|       1.  CHEPAR is set for entries whose ASCII character code contains
|           an even number of 1 bits.

        2.  Entries 2 and 20 will have CHRIA and the dispatch address set
            only if FTMIC is non-zero.

        3.  Character codes 175 (}) and 176 (~) are  converted  to  ASCII
            code 33 (ESC) only if SET TTY ALTMODE is in effect.

                                                                  Page 51


|  12.0  CHREQV -- CHARACTER EQUIVALENCE TABLE
|
|
|  Description:   Used by SCNSER to translate 8-bit ASCII  characters  to
|                 7-bit ASCII.  This table is indexed by character, where
|                 the offset is obtained from CHTABL,  and  is  used  for
|                 translation   only  when  the  octal  code  is  between
|                 200-377.
|
|                 The  Equivalence  Tables  (CHREQV   and   METEQV)   are
|                 formatted in 9-bit bytes, each byte containing an octal
|                 code for a 7-bit ASCII characters.  The bytes are  read
|                 in  reverse.   Therefore,  they are listed from left to
|                 right in the following table.
|
|  Defined in:    SCNSER
|
|  Used by:       SCNSER
|
|  ASCII   Name
|  Code               Byte 4      Byte 3      Byte 2       Byte 1
|                 +----------------------------------------------------+
|  200 (reserved) |   033      |  100      |    000     |    000       |
|                 |----------------------------------------------------|
|  201 (reserved) |   033      |  101      |    000     |    000       |
|                 |----------------------------------------------------|
|  202 (reserved) |   033      |  102      |    000     |    000       |
|                 |----------------------------------------------------|
|  203 (reserved) |   033      |  103      |    000     |    000       |
|                 |----------------------------------------------------|
|  204     IND    |   033      |  104      |    000     |    000       |
|                 |----------------------------------------------------|
|  205     NEL    |   033      |  105      |    000     |    000       |
|                 |----------------------------------------------------|
|  206     SSA    |   033      |  106      |    000     |    000       |
|                 |----------------------------------------------------|
|  207     ESA    |   033      |  107      |    000     |    000       |
|                 |----------------------------------------------------|
|  210     HTS    |   033      |  110      |    000     |    000       |
|                 |----------------------------------------------------|
|  211     HTJ    |   033      |  111      |    000     |    000       |
|                 |----------------------------------------------------|
|  212     VTS    |   033      |  112      |    000     |    000       |
|                 |----------------------------------------------------|
|  213     PLD    |   033      |  113      |    000     |    000       |
|                 |----------------------------------------------------|
|  214     PLU    |   033      |  114      |    000     |    000       |
|                 |----------------------------------------------------|
|  215     RI     |   033      |  115      |    000     |    000       |
|                 |----------------------------------------------------|
|  216     SS2    |   033      |  116      |    000     |    000       |
|                 |----------------------------------------------------|
                                                                  Page 52


|  ASCII   Name
|  Code               Byte 4      Byte 3      Byte 2       Byte 1
|                 |----------------------------------------------------|
|  217     SS3    |   033      |  117      |    000     |    000       |
|                 |----------------------------------------------------|
|  220     DCS    |   033      |  120      |    000     |    000       |
|                 |----------------------------------------------------|
|  221     PU1    |   033      |  121      |    000     |    000       |
|                 |----------------------------------------------------|
|  222     PU2    |   033      |  122      |    000     |    000       |
|                 |----------------------------------------------------|
|  223     STS    |   033      |  123      |    000     |    000       |
|                 |----------------------------------------------------|
|  224     CCH    |   033      |  124      |    000     |    000       |
|                 |----------------------------------------------------|
|  225     MW     |   033      |  125      |    000     |    000       |
|                 |----------------------------------------------------|
|  226     SPA    |   033      |  126      |    000     |    000       |
|                 |----------------------------------------------------|
|  227     EPA    |   033      |  127      |    000     |    000       |
|                 |----------------------------------------------------|
|  230 (reserved) |   033      |  130      |    000     |    000       |
|                 |----------------------------------------------------|
|  231 (reserved) |   033      |  131      |    000     |    000       |
|                 |----------------------------------------------------|
|  232 (reserved) |   033      |  132      |    000     |    000       |
|                 |----------------------------------------------------|
|  233     CSI    |   033      |  133      |    000     |    000       |
|                 |----------------------------------------------------|
|  234     ST     |   033      |  134      |    000     |    000       |
|                 |----------------------------------------------------|
|  235     OSC    |   033      |  135      |    000     |    000       |
|                 |----------------------------------------------------|
|  236     PM     |   033      |  136      |    000     |    000       |
|                 |----------------------------------------------------|
|  237     APC    |   033      |  137      |    000     |    000       |
|                 |----------------------------------------------------|
|  240 (reserved) |   137      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  241     SP03   |   041      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  242     SC04   |   174      |  010      |    143     |    000       |
|                 |----------------------------------------------------|
|  243     SC02   |   075      |  010      |    114     |    000       |
|                 |----------------------------------------------------|
|  244 (reserved) |   137      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  245     SC05   |   075      |  010      |    131     |    000       |
|                 |----------------------------------------------------|
|  246 (reserved) |   137      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  247     SM24   |   123      |  143      |    000     |    000       |
|                 |----------------------------------------------------|
|  250     SC01   |   170      |  010      |    117     |    000       |
|                 |----------------------------------------------------|
                                                                  Page 53


|  ASCII   Name
|  Code               Byte 4      Byte 3      Byte 2       Byte 1
|                 |----------------------------------------------------|
|  251     SM52   |   050      |  103      |    051     |    000       |
|                 |----------------------------------------------------|
|  252     SM21   |   137      |  010      |    141     |    000       |
|                 |----------------------------------------------------|
|  253     SP17   |   074      |  074      |    000     |    000       |
|                 |----------------------------------------------------|
|  254 (reserved) |   137      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  255 (reserved) |   137      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  256 (reserved) |   137      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  257 (reserved) |   137      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  260     SM19   |   157      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  261     SA02   |   137      |  010      |    053     |    000       |
|                 |----------------------------------------------------|
|  262     NS02   |   062      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  263     NS03   |   063      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  264 (reserved) |   137      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  265     SM17   |   165      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  266     SM25   |   120      |  162      |    000     |    000       |
|                 |----------------------------------------------------|
|  267     SM26   |   056      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  270 (reserved) |   137      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  271     NS01   |   061      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  272     SM20   |   137      |  010      |    157     |    000       |
|                 |----------------------------------------------------|
|  273     SP18   |   076      |  076      |    000     |    000       |
|                 |----------------------------------------------------|
|  274     NF04   |   061      |  057      |    064     |    000       |
|                 |----------------------------------------------------|
|  275     NF01   |   061      |  057      |    062     |    000       |
|                 |----------------------------------------------------|
|  276 (reserved) |   137      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  277     SP16   |   077      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  300     LA14   |   101      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  301     LA12   |   101      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  302     LA16   |   101      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
                                                                  Page 54


|  ASCII   Name
|  Code               Byte 4      Byte 3      Byte 2       Byte 1
|                 |----------------------------------------------------|
|  303     LA20   |   101      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  304     LA18   |   101      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  305     LA28   |   101      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  306     LA52   |   101      |  105      |    000     |    000       |
|                 |----------------------------------------------------|
|  307     LC42   |   054      |  010      |    103     |    000       |
|                 |----------------------------------------------------|
|  310     LE14   |   105      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  311     LE12   |   105      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  312     LE16   |   105      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  313     LE18   |   105      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  314     LI14   |   111      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  315     LI12   |   111      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  316     LI16   |   111      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  317     LI18   |   111      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  320 (reserved) |   137      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  321     LN20   |   116      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  322     LO14   |   117      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  323     LO12   |   117      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  324     LO16   |   117      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  325     LO20   |   117      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  326     LO18   |   117      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  327     LO52   |   117      |  105      |    000     |    000       |
|                 |----------------------------------------------------|
|  330     LO62   |   057      |  010      |    117     |    000       |
|                 |----------------------------------------------------|
|  331     LU14   |   125      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  332     LU12   |   125      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  333     LU16   |   125      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  334     LU18   |   125      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
                                                                  Page 55


|  ASCII   Name
|  Code               Byte 4      Byte 3      Byte 2       Byte 1
|                 |----------------------------------------------------|
|  335     LY18   |   131      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  336 (reserved) |   137      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  337     LS61   |   163      |  163      |    000     |    000       |
|                 |----------------------------------------------------|
|  340     LA13   |   140      |  010      |    141     |    000       |
|                 |----------------------------------------------------|
|  341     LA11   |   047      |  010      |    141     |    000       |
|                 |----------------------------------------------------|
|  342     LA15   |   136      |  010      |    141     |    000       |
|                 |----------------------------------------------------|
|  343     LA19   |   176      |  010      |    141     |    000       |
|                 |----------------------------------------------------|
|  344     LA17   |   042      |  010      |    141     |    000       |
|                 |----------------------------------------------------|
|  345     LA27   |   141      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  346     LA51   |   141      |  145      |    000     |    000       |
|                 |----------------------------------------------------|
|  347     LC41   |   054      |  010      |    143     |    000       |
|                 |----------------------------------------------------|
|  350     LE13   |   140      |  010      |    145     |    000       |
|                 |----------------------------------------------------|
|  351     LE11   |   047      |  010      |    145     |    000       |
|                 |----------------------------------------------------|
|  352     LE15   |   136      |  010      |    145     |    000       |
|                 |----------------------------------------------------|
|  353     LE17   |   042      |  010      |    145     |    000       |
|                 |----------------------------------------------------|
|  354     LI13   |   140      |  010      |    151     |    000       |
|                 |----------------------------------------------------|
|  355     LI11   |   047      |  010      |    151     |    000       |
|                 |----------------------------------------------------|
|  356     LI15   |   136      |  010      |    151     |    000       |
|                 |----------------------------------------------------|
|  357     LI17   |   042      |  010      |    151     |    000       |
|                 |----------------------------------------------------|
|  360 (reserved) |   137      |  000      |    000     |    000       |
|                 |----------------------------------------------------|
|  361     LN19   |   176       | 010       |   156      |   000       |
|                 |----------------------------------------------------|
|  362     LO13   |   140       | 010       |   157      |   000       |
|                 |----------------------------------------------------|
|  363     LO11   |   047       | 010       |   157      |   000       |
|                 |----------------------------------------------------|
|  364     LO15   |   136       | 010       |   157      |   000       |
|                 |----------------------------------------------------|
                                                                  Page 56


|  ASCII   Name
|  Code               Byte 4      Byte 3      Byte 2       Byte 1
|                 |----------------------------------------------------|
|  365     LO19   |   176       | 010       |   157      |   000       |
|                 |----------------------------------------------------|
|  366     LO17   |   042       | 010       |   157      |   000       |
|                 |----------------------------------------------------|
|  367     LO51   |   157       | 145       |   000      |   000       |
|                 |----------------------------------------------------|
|  370     LO61   |   057       | 010       |   157      |   000       |
|                 |----------------------------------------------------|
|  371     LU13   |   140       | 010       |   165      |   000       |
|                 |----------------------------------------------------|
|  372     LU11   |   047       | 010       |   165      |   000       |
|                 |----------------------------------------------------|
|  373     LU15   |   136       | 010       |   165      |   000       |
|                 |----------------------------------------------------|
|  374     LU17   |   042       | 010       |   165      |   000       |
|                 |----------------------------------------------------|
|  375     LY17   |   042       | 010       |   171      |   000       |
|                 |----------------------------------------------------|
|  376 (reserved) |   137       | 000       |   000      |   000       |
|                 |----------------------------------------------------|
|  377 (reserved) |   137       | 000       |   000      |   000       |
|                 +----------------------------------------------------+
                                                                  Page 57


   13.0  CIPWT -- CLOCK REQUEST QUEUE


   Description:   This table allows a monitor routine to be run  after  a
                  specific time interval.  One entry for each job number,
                  plus three more.

                  Position of entry in table is of no  importance.   Each
                  entry occupies 2 words.

                  Each count is decremented by clock-level service in the
                  monitor.    When  any  ountdown  reaches  0,  (or  goes
                  negative), the contents of the second word of the entry
                  are  put  into T1 and a PUSHJ is done to the address in
                  the left half of the first word.

                  CLOCK is a 36 bit byte pointer to  the  highest  in-use
                  entry.   Routines  which  make requests to be stored in
                  this table will reference  CLOCK.   When  an  entry  is
                  eliminated  from  the  table,  the last entry is copied
                  into its place, and CLOCK is decremented.

   Defined in:    COMMON

   Used by:       CLOCK1, DISSER, DLSINT, ERRCON, FILIO, PSISER,  RPXKON,
                  SCNSER, SYSINI, UUOCON, VBCSER

   Format of each two-word entry:
                                     .   .   .
             |------------------------------------------------------------|
             |     Routine address       |         Count down timer       |
             |------------------------------------------------------------|
             | R| C | S|                          Data                    |
             |------------------------------------------------------------|
                                     .   .   .


   The bits in the second word of each entry are defined as follows:

        Bit       Meaning        ___       _______

        0         Request is CPU-specific
        1-3       CPU number
        4         Scanned by CLOCK1
        5-35      Data
                                                                  Page 58


   14.0  COMTAB -- COMMAND TABLE


   Description:   Specifies legal command names.  There are corresponding
                  entries  in DISP that give routine address and legality
                  conditions for each command.

                  There is one entry for each monitor command.

                  Position in the table is of no significance, but COMTAB
                  and DISP entries must be in corresponding positions.

   Defined in:    COMMON

   Used by:       UUOCON, COMCON

   GETTAB Table:  .GTCOM (30)

   Format:
             +------------------------------------------------------------+
             |                    SIXBIT   /   CMD1     /                 |
             |------------------------------------------------------------|
             |                    SIXBIT   /   CMD2     /                 |
             |------------------------------------------------------------|
             |                    SIXBIT   /   CMD3     /                 |
             |------------------------------------------------------------|
                                      .   .   .
                                                                  Page 59


|  15.0  CSRTAB -- CONTEXT SAVE/RESTORE TRANSLATION TABLE
|
|
|  Description:   CSRTAB is used by the context service  module  (CTXSER)
|                 to save and restore certain job parameters.
|
|                 Each word in the CSRTAB corresponds to information that
|                 must be saved and restored with each context switch for
|                 every job.  When the  information  is  contained  in  a
|                 single word (for example, the user PC), the information
|                 is pointed to by the address in CSRTAB.
|
|                 Other types of information (such as the TTY DDB) cannot
|                 be  saved  and  restored  in a single word.  The CSRTAB
|                 entry for this kind of information contains a flag (Bit
|                 0 is set) to indicate that the effective address of the
|                 entry is the location of a subroutine  to  save/restore
|                 that information.
|
|                 Entries in CSRTAB are  defined  using  the  CTX  macro.
|                 Using  CSRTAB,  data  is  copied  to  and  from the job
|                 parameter portion  of  a  context  block,  starting  at
|                 offset .CTBPR (Beginning of the Parameter Block).  Each
|                 offset in the parameter block is assigned a name by the
|                 CTX macro.
|
|  Defined in:    CTXSER
|
|  Used by:       CTXSER
|
|  Format of CSRTAB Entry:
|
|            +------------------------------------------------------------+
|            | S | Z |              | @ | (AC) |      Address             |
|            +------------------------------------------------------------+
|
|
|  Every CSRTAB entry contains the following fields:
|
|
|       Bit       Symbol    Meaning        ___       ______    _______
|
|       0         S         A subroutine  is  used  to  save/restore  the
|                           data.
|
|       1         Z         Bit 0 is off, and the  data  word  is  zeroed
|                           after the save/restore.
|
|       13        @         Bit 0 is off,  and  hardware  indirection  is
|                           used to find the data word.
|
|       14-17     (AC)      Bit 0 is off, and hardware indexing  is  used
|                           to find the data word.
|
|       18-35     Address   If Bit 0 is off,  this  address  is  used  to
                                                                  Page 60


|                           calculate  the  effective address of the data
|                           word.  If Bit 0 is on, this is  the  location
|                           of the subroutine to save/restore data.
|
                                                                  Page 61


|  Format of the  CSRTAB  table  is  illustrated  below.   Each  word  is
|  described by:
|
|
|        o  Symbol is the symbol associated with the offset.
|
|        o  The setting of Bit 0, the S flag described above.
|
|        o  The setting of Bit 1, the Z flag described above.
|
|        o  Address is the symbol associated  with  the  word  where  job
|           parameters are saved.
|
|        o  Job information saved in the word at Address.
|
|
|  Symbol    Bits      Address       Job Information
|              0   1
|            +------------------------------------------------------------+
|  .CXSYS    | 1 | 0 |    CSRSYS   |    "From SYS" bit                    |
|            |------------------------------------------------------------|
|  .CXMON    | 1 | 0 |    CSRMON   |    Monitor mode bit, and others      |
|            |------------------------------------------------------------|
|  .CXSCX    | 0 | 1 | .PDSCX (W)  |    SAVCTX word                       |
|            |------------------------------------------------------------|
|  .CXBKM    | 1 | 0 |    CSRBKM   |    Terminal break mask               |
|            |   |   |             |    (saves 2 words)                   |
|            |------------------------------------------------------------|
|  .CXPIA    | 0 | 1 | JBTPIA (J)  |     PSI data base (PIT)              |
|            |------------------------------------------------------------|
|  .CXIPC    | 1 | 0 |    CSRIPC   |     IPCF data base (saves 11 words)  |
|            |------------------------------------------------------------|
|  .CXENQ    | 1 | 0 |    CSRENQ   |     ENQ/DEQ queue chain address      |
|            |------------------------------------------------------------|
|  .CXTTY    | 1 | 0 |    CSRTTY   |     TTY DDB (save 13 words)          |
|            |------------------------------------------------------------|
|  .CXSTS    | 1 | 0 |    CSRSTS   |     Job status                       |
|            |------------------------------------------------------------|
|  .CXST2    | 0 | 0 | JBTST2 (J)  |     Second job status word           |
|            |------------------------------------------------------------|
|  .CXSWP    | 0 | 0 | JBTSWP (J)  |     Swapped-out disk address         |
|            |------------------------------------------------------------|
|  .CXIMI    | 0 | 0 | JBTIMI (J)  |     Swapped-in image size            |
|            |------------------------------------------------------------|
|  .CXIMO    | 0 | 0 | JBTIMO (J)  |     Swapped-out image size           |
|            |------------------------------------------------------------|
|  .CXSGN    | 0 | 0 | JBTSGN (J)  |     High segment                     |
|            |------------------------------------------------------------|
|  .CXAD2    | 1 | 0 |   CSRAD2    |     JBTAD2                           |
|            |------------------------------------------------------------|
|  .CXPDB    | 0 | 0 | JBTPDB (J)  |     Number of funny pages            |
|            |------------------------------------------------------------|
|  .CXCHK    | 0 | 0 | JBTCHK (J)  |     Swapped-out checksum             |
|            |------------------------------------------------------------|
                                                                  Page 62


|  Symbol    Bits      Address       Job Information
|              0   1
|            |------------------------------------------------------------|
|  .CXPRG    | 0 | 0 | JBTNAM (J)  |     Name of program to run           |
|            |------------------------------------------------------------|
|  .CXPC     | 0 | 0 | JBTPC (J)   |     User PC                          |
|            |------------------------------------------------------------|
|  .CXDDB    | 0 | 0 | JBTDDB (J)  |     I/O wait DDB                     |
|            |------------------------------------------------------------|
|  .CXNAM    | 0 | 0 | .PDNAM (W)  |     Program file name                |
|            |------------------------------------------------------------|
|  .CXSTR    | 0 | 0 | .PDSTR (W)  |     Program's file structure         |
|            |------------------------------------------------------------|
|  .CXDIR    | 0 | 0 | .PDDIR (W)  |     Program's PPN                    |
|            |------------------------------------------------------------|
|  .CXSFD    | 0 | 0 | .PDSFD (W)  |     Program's SFD(s)                 |
|            |------------------------------------------------------------|
|  .CXSTM    | 0 | 0 | .PDSTM (W)  |     Time of last RESET               |
|            |------------------------------------------------------------|
|  .CXCMN    | 0 | 0 | .PDCMN (W)  |     Ptr to user-defined commands     |
|            |------------------------------------------------------------|
|  .CXUNQ    | 0 | 0 | .PDSJB (W)  |     Ptr to UNQTAB for user commands  |
|            |------------------------------------------------------------|
|  .CXSJB    | 0 | 1 | .PDSJB (W)  |     DECnet data base                 |
|            |------------------------------------------------------------|
|  .CXABS    | 0 | 0 | .PDABS (W)  |     Address break settings           |
|            |------------------------------------------------------------|
|  .CXTMI    | 0 | 0 | .PDTMI (W)  |     Virtual timer trap interval      |
|            |------------------------------------------------------------|
|  .CXTMC    | 0 | 0 | .PDTMC (W)  |     Virtual timer counter            |
|            |------------------------------------------------------------|
|  .CXSPS    | 1 | 0 |    CSRSPS   |     SET CPU command bits             |
|            |------------------------------------------------------------|
|  .CXVRT    | 0 | 0 | JBTVRT (J)  |     Program size for <CTRL/T>        |
|            |------------------------------------------------------------|
|  .CXSG2    | 0 | 0 | JBTSG2 (J)  |     Section no. for high segments    |
|            |------------------------------------------------------------|
|  .CXCVL    | 0 | 0 | .PDCVL (W)  |     Current phys. and virt. limits   |
|            |------------------------------------------------------------|
|  .CXLBS    | 1 | 0 |    CSRLBS   |     UUO setting for BIGBUF           |
|            |------------------------------------------------------------|
|  .CXRTD    | 1 | 0 |    CSRRTD   |     HPQ and HIBER settings           |
|            |------------------------------------------------------------|
|  .CXPAT    | 1 | 0 |    CSRPAT   |     Patch space                      |
|            +------------------------------------------------------------+
|
|
|  In the table illustrated above, the fields are:
|
|
|        o  Symbol is the symbol name associated with the  entry  in  the
|           table.   They  are  formatted  as  .CXxxx,  where  xxx is the
|           unique, three-character name, and is added to .CX by the  CTX
|           macro.
                                                                  Page 63


|        o  Bit 0  is  the  flag,  indicating  whether  a  data  word  is
|           saved/restored,  or  a  subroutine  is  called to perform the
|           save/restore operation.  If Bit 0 is on,  the  subroutine  is
|           pointed to by the symbolic address.
|
|
|        o  Bit 1 indicates whether a data word is  to  be  preserved  or
|           zeroed after the save/restore operation.  If Bit 0 is on, Bit
|           1 must be off.  If Bit 1 is on, the data word referred to  by
|           the  symbolic  address  will be zeroed after the save/restore
|           operation.
|
|
|        o  The address in the table is the symbolic location of the data
|           word  or  subroutine  (depending  on  Bit 0).  Data words are
|           subject to indirection and  indexing,  as  indicated  by  the
|           presence  of  (J)  or  (W)  after  the  symbol  above.  A (J)
|           indicates the address is the location of a job table, and the
|           exact  data  word to be saved/restored found by indexing into
|           the table using the job number ("J" = Job).  A (W)  indicates
|           the  data  word is in the job's Process Data Block (PDB);  it
|           is found using the location of the data word in the PDB.
|
|
|        o  The job information column in  the  above  table  contains  a
|           description  of  the  type  of job information to be saved or
|           restored.
|
|           Most of the entries in CSRTAB save one data  word.   However,
|           certain  subroutines save more that one word, as indicated in
|           the description of the job information  in  the  table  shown
|           above.
|
                                                                  Page 64


|  16.0  CSTTAB -- CUSTOMER-DEFINED COMMANDS TABLE
|
|
|  Description:   Specifies legal command names that have been defined in
|                 the  monitor  by  customer.   There  are  corresponding
|                 entries in DISPC that give routine address and legality
|                 conditions for each command.
|
|                 There is one entry for each monitor command.
|
|                 Position in the table is of no significance, but CSTTAB
|                 and DISPC entries must be in corresponding positions.
|
|  Defined in:    COMMON
|
|  Used by:       UUOCON, COMCON
|
|  Format:
|            +------------------------------------------------------------+
|            |                    SIXBIT   /   CMD1     /                 |
|            |------------------------------------------------------------|
|            |                    SIXBIT   /   CMD2     /                 |
|            |------------------------------------------------------------|
|            |                    SIXBIT   /   CMD3     /                 |
|            |------------------------------------------------------------|
|                                     .   .   .
                                                                  Page 65


   17.0  COMTB2 -- SET COMMAND TABLE


   Description:   When the command interpreter has determined that a  SET
                  command is to be executed it does a table lookup on the
                  SET command argument to determine the dispatch address.
                  The  SET  command argument table is named COMTB2 and is
                  in the same format as COMTAB.  The dispatch  table  for
                  the  SET  commands  is  named  DISP2.  COMTB2 and DISP2
                  entries must be in corresponding positions.

   Defined in:    COMMON

   Used by:       UUOCON,COMCON

   GETTAB Table:  .GTCM2 (43)

   Format:
             +------------------------------------------------------------+
             |                    SIXBIT   /   CMD1     /                 |
             |------------------------------------------------------------|
             |                    SIXBIT   /   CMD2     /                 |
             |------------------------------------------------------------|
             |                    SIXBIT   /   CMD3     /                 |
             |------------------------------------------------------------|
                                      .   .   .

                                                                  Page 66


   18.0  DDB -- DEVICE DATA BLOCK


   Description:   Contains information needed to perform I/O  operations.
                  One  such  block exists for each device or, in the case
                  of disk, one for each INIT or ASSIGN.

                  Number of entries in the DDB varies with the device.

                  Labels for DDBs are  defined  in  S.MAC.   Each  device
                  service  routine  contains  a DDB for that device.  For
                  devices with more  than  one  DDB,  the  DDBs  are  set
                  dynamically as needed or at system initialization time.
                  The new DDBs are modeled after the one contained in the
                  device service routine.

                  The label of a DDB entry is defined as the location  of
                  that  entry  relative  to  the  beginning of the block.
                  Such labels must be indexed by  an  AC  containing  the
                  address  of the beginning of the DDB.  AC F is normally
                  used for this purpose in the monitor.

                  The start of the DDB chain is accessible as GETTAB item
                  %CNDEV  from  a  user program, or in location DEVLST in
                  the monitor.  DDBs for some peripherals have their  own
                  tags  in  the  monitor  and  some  sub-chains  are also
                  tagged:

                  TTYLST - Start of TTY sub-chain
                  PTYLST - Start of PTY sub-chain
                  LPxDDB - Tag for LPTx on I/O bus
                  CRxDDB - Tag for CDRx on I/O bus
                  FLxDDB - Tag for LPTx off console front end
                  FCxDDB - Tag for CDRx off console front end

   Defined in:    Device service routines and in S.MAC

   Used by:       Device service routines
                                                                  Page 67


   Symbol     Map
             +------------------------------------------------------------+
   DEVNAM    |                   SIXBIT device name                       |
             |------------------------------------------------------------|
   DEVCHR*   |                   See bit definitions                      |
             |------------------------------------------------------------|
   DEVIOS*   |                   See bit definitions                      |
             |------------------------------------------------------------|
   DEVSER    |   Adr of next DDB           |Dispatch table address        |
             |------------------------------------------------------------|
   DEVMOD*   |                   See bit definitions                      |
             |------------------------------------------------------------|
   DEVLOG    |                  SIXBIT logical device name                |
             |------------------------------------------------------------|
   DEVBUF    |    Address of user's 3-word | Address of user's 3-word     |
             |    output buffer header     |   input buffer header        |
             |------------------------------------------------------------|
   DEVIAD*   |                   See bit definitions                      |
             |------------------------------------------------------------|
   DEVOAD*   |                   See bit definitions                      |
             |------------------------------------------------------------|
   DEVSTS    |             Word for device CONI                           |
             |------------------------------------------------------------|
   DEVSTA*   |              See bit definitions                           |
             |------------------------------------------------------------|
   DEVXTR*   |                 See bit definitions                        |
             |------------------------------------------------------------|
   DEVEVM*   |                 See bit definitions                        |
             |------------------------------------------------------------|
   DEVPSI    |    Enabled PSI conditions  |   Pending PSI interrupts      |
             |------------------------------------------------------------|
   DEVESE*   |                 See bit definitions                        |
             |------------------------------------------------------------|
   DEVHCW*   |                 See bit definitions                        |
             |------------------------------------------------------------|
   DEVCPU*   |                 See bit definitions                        |
             |------------------------------------------------------------|
   DEVJOB*   |                 See bit definitions                        |
             |------------------------------------------------------------|

   The remainder of the DDB is different for different types of  devices.
   The  TTY  DDB  is  continued  after  the  following description of the
   magtape and disk DDBs.

                                                                  Page 68


   The Disk and  Magtape  DDB  contain  the  following  words,  following
   DEVJOB:

             |------------------------------------------------------------|
   DEVFIL    |  File name on last LOOKUP/ENTER (arg to FNDFIL)            |
             |------------------------------------------------------------|
   DEVEXT,,  |     File extension on    |       Number blocks left in     |
   DEVLFT    |     last LOOKUP/ENTER    |       current group             |
             |------------------------------------------------------------|
   DEVPPN    |                 PPN on last LOOKUP/ENTER                   |
             |------------------------------------------------------------|
   DEVNBF    |   Number buffers swept for   |Buffers not swept for        |
             |------------------------------------------------------------|
   DEVSBF    |                  Saved value of DEVNBF                     |
             |------------------------------------------------------------|
   DEVCSN    |                 Cache sweep serial number                  |
             |------------------------------------------------------------|
   DEVISN    |                              |   Section no. for I/O       |
             |------------------------------------------------------------|

   The disk  DDB  follows.   The  magtape  DDB  is  continued  after  the
   remainder of the disk DDB.

   The disk DDB continues from offset DEVISN, as follows:
                                                                  Page 69


|            |------------------------------------------------------------|
|  DEVDMP    |               Current IOWD for dump mode                   |
|            |------------------------------------------------------------|
|  DEVRET    |             0             | Addr of current retrieval      |
|            |                           | pointer in DDB                 |
|            |------------------------------------------------------------|
|  DEVREL    | Relative block number in file to read or write next        |
|  DEVDIA    |                                                            |
|            |------------------------------------------------------------|
|  DEVUNI    | Addr of original UDB      | Addr of current UDB            |
|            |------------------------------------------------------------|
|  DEVUFB    |                           | Addr of UFD data block         |
|            |------------------------------------------------------------|
|  DEVSFD    |                           | Addr of NMB for father SFD     |
|            |------------------------------------------------------------|
|  DEVBLK    |     Logical block number in unit to read or write next     |
|            |------------------------------------------------------------|
|  DEVRSU    | -Num of unused pointer    | Addr of access table entry     |
|  DEVACC    |  positions in RIB         | for user channel               |
|            |------------------------------------------------------------|
|  DEVFLR    |    Block number of file which first in-core ptr points to  |
|            |------------------------------------------------------------|
|  DEVFUN*   |                     See bit definitions                    |
|            |------------------------------------------------------------|
|  DEVQUE    | Addr of next DDB in queue | Job number of DDB in LH        |
|            |------------------------------------------------------------|
|  DEVELB*   |                     See bit definitions                    |
|            |------------------------------------------------------------|
|  DEVLRL    |    Last DEVREL            |      Disk priority             |
|  DEVPRI    |                           |                                |
|            |------------------------------------------------------------|
|  DEVSPN    |                SIXBIT spooled file name                    |
|            |------------------------------------------------------------|
|  DEVSPM    |            Pointer to spooling parameter block             |
|            |------------------------------------------------------------|
|  DEVRIB*   |                    See bit definitions                     |
|            |------------------------------------------------------------|
|  DEVUPP    |                    "In-your-behalf" PPN                    |
|            |------------------------------------------------------------|
|  DEVCUR*   |                    See bit definitions                     |
|            |------------------------------------------------------------|
|  DEVGEN    |Generation number of UDB  |   Addr of core copy of RIBs     |
|            |------------------------------------------------------------|
|  DEVLNM    |Current SFD looking for   |   Logical name spec being used  |
|            |------------------------------------------------------------|
|  DEVCFS*   |                    See bit definitions                     |
|            |------------------------------------------------------------|
|  DEVRB1*   |       First retrieval pointer (Same format as RIB)         |
|            |------------------------------------------------------------|
|  DEVRB2*   |       Second retrieval pointer                             |
|            |------------------------------------------------------------|
|                                  .   .   .
|            |------------------------------------------------------------|
|  DEVRBn*   |       Last retrieval pointer in core                       |
|            |------------------------------------------------------------|
                                                                  Page 70


|  DEVDRB    |       Addr. of I/O Request Block for CI disks              |
|            +------------------------------------------------------------+
                                                                  Page 71


   The Magtape DDB has different words following DEVISN, as follows:

             |------------------------------------------------------------|
   TDVUDB    | UDB pointer               |     KDB pointer (prime)        |
   TDVKDB    |                           |                                |
             |------------------------------------------------------------|
   TDVSTS*   |                   See bit definitions                      |
             |------------------------------------------------------------|
   TDVIOR    |                   IORB to wait for                         |
             |------------------------------------------------------------|
   TDVSUL    |                   Saved user upper limit                   |
             |------------------------------------------------------------|
   TDVSLL    |                   Saved user lower limit                   |
             |------------------------------------------------------------|
   TDVSVM    |                    Saved M for dump mode                   |
             |------------------------------------------------------------|
   TDVREM    |                    Remainder for mode 16                   |
             |------------------------------------------------------------|

   The Terminal DDB (TTY DDB) differs from the disk and magtape DDBs.  It
   contains the following information after the DEVJOB word:

             |------------------------------------------------------------|
   DDBLDB    |       Unused              |       Address of attached LDB  |
             +------------------------------------------------------------+
                                                                  Page 72


   18.1  DEVCHR -- Device Characteristics Word

   |--------------------------------------------------------------------|
   |LPTL|CMDA|DATJ|DIBP|CNET|OFLN|C2IO|PDVTIM| PDVCNT |     | PBUFSZ    |
   |--------------------------------------------------------------------|
    0      1   2     3    4    5    6   7---9 10----16 17-18 19-------35

                            Byte                            ____
        Bits      Value     Pointer   Meaning        ____      _____     _______   _______

        0         400000    DVLPTL    Lowercase line printer
        1         200000    DVCMDA    Device  controlled   by   mountable
                                      device allocator
        2         100000    DVDATJ    Device allocated to job in DEVJOB
        3          40000    DVDIBP    Device is a batch PTY
        4          20000    DVCNET    Device controlled by NETSER
        5          10000    DVOFLN    Device off-line last  time  service
                                      routine polled
        6          4000     PDV2IO    Device can  do  simultaneous  input
                                      and output
        7-9       3400      PDVTIM    Code for hung device timeout
                                      0 means device cannot be hung,
                                      n means hung time is 2**n-1 seconds
        10-16     376       PDVCNT    Countdown  timer   for   the   hung
                                      device.  PDVCNT contains the number
                                      of seconds to go before considering
                                      device   hung.    This   value   is
                                      initialized every time  the  device
                                      is   serviced,   using   the   hung
                                      constant to determine the value.
        17-18                         Unused
        19-35     377777    PBUFSZ    Buffer size

                                                                  Page 73


   18.2  DEVIOS -- Device Input/Output Status Word



   |--------------------------------------------------------------------|
   | DEV1 | E| I| S| F| B| W| I| E|DT|BK|DE| A| DEV2 | C|WC| PIOMOD     |
   |--------------------------------------------------------------------|
    0--11  12 13 14 15 16 17 18 19 20 21 22 23  24-29 30 31 32--------35



                            Byte                            ____
        Bits      Value     Pointer   Meaning        ____      _____     _______   _______

        0-11                          Device-dependent bits  (see  Notes,
                                      below)
        12        40        IOEND     Service  routine  has   transmitted
                                      last data
        13        20        I/O       1 for output;  0 for input
        14        10        IOSTBL    Device error flag
        15        4         IOFST     Next item will be the first item of
                                      a buffer
        16        2         IOBEG     Virgin device
        17        1         IOW       Input/output wait
        18        400000    IOIMPM    Improper mode
        19        200000    IODERR    Device error
        20        100000    IODTER    Data error
        21        40000     IOBKTL    Block too large
        22        20000     IODEND    Data end encountered
        23        10000     IOACT     Device active
        24-29                         Device-dependent    bits    (listed
                                      below)
        30                  IOCON     Continuous
        31                  IOWC      Don't compute word count
        32-35               PIOMOD    Data mode codes:

                                      Code Symbol  Mode                                      ____ ______  ____

                                      0    A       ASCII
                                      1    AL      ASCII line
                                      2    PIMMOD  Packed image
                                      3    BYTMOD  Byte
                                      10   I       Image
                                      13   IB      Image binary
                                      14   B       Binary
                                      15   SD      Scope dump
                                      16   DR      Dump by records
                                      17   D       Dump across records
                                                                  Page 74


   Notes:

   Bits 0-11 and 24-29 of the DEVIOS word are defined differently for the
   type of device DDB.  Those bits are defined in the following lists:

   Disk DDB:


        Bits      Value     Symbol    Meaning        ____      _____     ______    _______

        0         400000    IOSMON    Monitor  I/O   request   (such   as
                                      reading a RIB)
        1         200000    IOSAU     File has AU resource
        2         100000    IOSUPR    Super-USETI/USETO being used
        3         40000     IOSDA     File has DA resource
        4         20000     IOSRIB    RIB is in monitor buffer
        5         10000     IOSRDC    File has read count up
        6         4000      IOSWLK    File    structure    is    software
                                      write-locked
        7         2000      IOSPBF    Partial buffer done
        8         1000      IOSFIR    First block of group being accessed
                                      (Compute or check retrieval pointer
                                      checksum)
        9         400       IOSSCE    Software checksum error encountered
        10        200       IOSHWE    Hardware write error encountered
        11        100       IOSHRE    Hardware read error encountered
        16        2         IOSHMS    Hung message already typed
        17        1         IOSRST    RESET or  RELEAS  done  on  spooled
                                      device
        28        200       UDSX       Super-USETO is formatting disk

        Magtape DDB:

        Bits      Value     Symbol    Meaning        ____      _____     ______    _______

        1         200000    OFFLIN    Unit is off-line
        2         100000    OFLUNH    Off-line unit is not ready
        3         40000     FINP      First input operation
        4         20000     LBLNED    Labelling action needed
        5         10000     LBLWAT    Waiting for labelling process
        6         4000      LBLSTP    Stop I/O because of error
        7         2000      FOUT      First output operation
        8         1000      LBLEOF    EOF encountered
        24        4000      IOBOT     Beginning of tape
        25        2000      IOTEND    End of tape
        26        1000      IOPAR     Write even parity if 1 on magtape
        27-28     600       PDENS     Density of magtape:
                  00                  Installation default
                  01                  200 BPI
                  10                  556 BPI
                  11                  800 BPI
        29        100       IONRCK    Read with no reread check

        TTY DDB:
                                                                  Page 75


        Bits      Value     Symbol    Meaning        ____      _____     ______    _______

        0         400000    TTYOUW    I/O wait is for output
        1         200000    FRCEND    Force EOF due to image mode timeout
        2         100000    IOLBKA    Saved value of IOSBKA when HALTed
        25        2000      IOSABS    Break on characters in  break  mask
                                      table
        26        1000      IOSBKA    Break on all characters
        27        400       IOSTEC    "Truth in echoing" mode
        28        200       IOSNEC    "No echo" mode
        29        100       IOSFCS    User wants all characters

        TSK DDB:

        Bits      Value     Symbol    Meaning        ____      _____     ______    _______

        4         20000     IOSUSO    UUOCON stopped  output  (no  output
                                      buffers available)
        5         10000     IOSUSI    UUOCON  stopped  input  (no   input
                                      buffers available)
        6         4000      IOSERR    I/O can't continue due to an error
        7         2000      IOSZAP    Device no longer owned by job
        8         1000      IOSCON    Device is connected
        9         400       IOSREL    Device has been released
        11        100       IOSDMR    Disable message reassembly
                                                                  Page 76


   18.3  DEVMOD -- Device Modes Word



   |--------------------------------------------------------------------|
   |DC|DS|CD|LP|AT|TF|TU|DI|LN|PT|PR|DT|AV|MT|TT|DR|IN|OU|AC|AP|I/O mode|
   |--------------------------------------------------------------------|
     0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20----35



          Bits    Value     Pointer   Meaning          ____    _____     _______   _______

            0     400000    DVDIRI    DECtape directory is in core
            1     200000    DVDSK     Disk
            2     100000    DVCDR     Card reader
            3     40000     DVLPT     Line printer
            4     20000     TTYATC    TTY attached to job if 1
            5     10000     TTYUSE    TTYDDB in use flag
            6     4000      TTYBIU    TTYDDB in use
            7     2000      DVDIS     Display (DIS) device
            8     1000      DVLNG     Device has long dispatch table
            9     400       DVPTP     Paper tape punch
           10     200       DVPTR     Paper tape reader
           11     100       DVDTA     DECtape
           12     40        DVAVAL    Device is available to this job
           13     20        DVMTA     Magnetic tape (rewind)
           14     10        DVTTY     Terminal
           15     4         DVDIR     Directory-oriented device
           16     2         DVIN      Device can do input
           17     1         DVOUT     Device can do output
           18     400000    ASSCON    Device assigned by ASSIGN command
           19     200000    ASSPRG    Device assigned by program, using a
                                      monitor call
        20-35     177777              If data mode n is legal,  bit  35-n
                                      is set.
                                                                  Page 77


   18.4  DEVIAD -- Input Buffer Word



   |--------------------------------------------------------------------|
   |  Device-dependent bits     |    Current input buffer address       |
   |--------------------------------------------------------------------|
    0-------------------------13 14-----------------------------------35



        Bits      Value     Symbol    Meaning        ____      _____     ______    _______

         0-13     777760              Device-dependent    bits    (listed
                                      below)
        14-35               PDVIAD    Address  of  current  user's  input
                                      buffer  (exec  virtual  address  if
                                      EVM, user virtual address if not in
                                      EVM).

   Disk DDB:

        Bits      Value     Symbol    Meaning        ____      _____     ______    _______

          0-2     700000    DEYCOD    File status code (from UNISTS):

                                      Code Symbol  Meaning                                      ____ ______  _______
                                      0    ICOD    Idle
                                      3    PWCOD   Position wait
                                      4    PCOD    Positioning
                                      5    TWCOD   Transfer wait
                                      6    TCOD    Transferring

            3     400000    DEYSCN    SFD scanning (/SCAN) in effect
            4     200000    DEPLPC    Last RIB pointer is in core
          5-8     17000     DEYFNC    Highest allowed function with file:

                                      Code Symbol  Meaning                                      ____ ______  _______
                                       1   FNCEXC  Execute only
                                       2   FNCRED  Read
                                       3   FNCALL  Allocate
                                       4   FNCDLL  Deallocate
                                       5   FNCAPP  Append
                                       6   FNCUDP  Update
                                       7   FNCCRE  Create
                                      10   FNCSUP  Supersede
                                      11   FNCTRN  Truncate
                                      12   FNCCAT  Change attributes
                                                   except name,
                                                   directory,
                                                   and privileges.
                                      13   FNCDEL  Delete
                                      14   FNCCNM  Change name
                                      15   FNCCPR  Change privileges
                                                                  Page 78


         9-12     740       DEYEUN    Logical unit, within structure,  of
                                      error

   DECtape DDB:

        Bits      Value     Symbol    Meaning        ____      _____     ______    _______

          1-2     300000    IADPTR    Number of  channels  on  which  the
                                      device is initiated.

   Magtape DDB:

        Bits      Value     Symbol    Meaning        ____      _____     ______    _______

         0        400000    OFLHNG    Hung device
         9        400       MTSNAR    Set if user disabled RETRY
        10        200       IOSRTY    No retry on error
        11        100       IOSCPZ    I/O being started on a  queued  I/O
                                      request

                                                                  Page 79


   18.5  DEVOAD -- Output Buffer Word



   |--------------------------------------------------------------------|
   | Device-dependant bits   |        Current output buffer address     |
   |--------------------------------------------------------------------|
    0---------------------13  14--------------------------------------35



        Bits      Value     Symbol    Meaning        ____      _____     ______    _______

         0-13     777760              Device-dependent    bits    (listed
                                      below)
        14-35               PDVOAD    Address of  current  user's  output
                                      buffer  (exec virtual address if in
                                      EVM, user virtual address if not in
                                      EVM).

   Disk DDB:


        Bits      Value     Symbol    Meaning        ____      _____     ______    _______

            0     400000    DEPSWP    SWPSER DDB
            1     200000    DEPLIB    LOOKUP from LIB/SYS
          2-8     177000    DEYRLC    Offset into RIB of first  retrieval
                                      pointer stored in DEVRB1
            9     400       DEPUWZ    USETO writing zeros to extend file
           10     200       DEPPP0    Zero PPN was specified in UUO
           11     100       DEPFDA    FILDAE should be called on CLOSE

   Magtape DDB:

        Bits      Value     Symbol    Contents        ____      _____     ______    ________

         0-13     777760    PBUFRM    Maximum  frame  count  from  TAPOP.
                                      UUO function

   TTY DDB:

        Bits      Value     Symbol    Contents        ____      _____     ______    ________

         1-12     377740    BYTCNT    Remaining    byte     count     for
                                      asynchronous (non-blocking) output.

   DECtape DDB:

        Bits      Value     Symbol    Contents        ____      _____     ______    ________

          0-6     774000    SLPNTR    Dead-reckoning   sleep   time,   in
                                      seconds.

                                                                  Page 80


|  18.6  DEVSTA -- Device Station Word
|
|
|
|  |--------------------------------------------------------------------|
|  |SP|AD|LE|RA|TYP|IB|  SPL  |AI|IN|ON|EC|MS|EV|DR|DL|     |  PDVSTA   |
|  |--------------------------------------------------------------------|
|    0  1  2  3 4-9 10 11---17 18 19 20 21 22 23 24 25 26-29 30-------35
|
|
|
|       Bits      Value     Symbol    Meaning        ____      _____     ______    _______
|
|           0     400000    DEPSPL    DDB is for a spooled device
|           1     200000    DEPADY    Disk in 10/11 compatibility mode
|           2     100000    DEPLEN    Variable length buffers
|           3     40000     DEPRAS    Device has restricted assignment
|         4-9     37400     PDVTYP    Device type
|          10     200       DEPIBC    Inhibit clearing output buffers
|       11-17     177                 Spool bits:
|
|                 Mask      Symbol    Device                  ____      ______    ______
|
|                 37        .SPALL    Bit mask for defined spool bits
|                 20        .SPCDR    Card reader spool bit
|                 10        .SPCDP    Card punch spool bit
|                  4        .SPPTP    Paper tape punch spool bit
|                  2        .SPPLT    Plotter spool bit
|                  1        .SPLPT    Line printer spool bit
|
|       Bits      Value     Symbol    Meaning        ____      _____     ______    _______
|
|          18     400000    DEPAIO    Doing asynchronous input/output
|          19     200000    DEPIND    Input not yet done (asynch I/O)
|          20     100000    DEPOND    Output not yet done (asynch I/O)
|          21     40000     DEPECS    On if a non-superceding enter
|          22     20000     DEPMSG    This device controlled by MSGSER
|          23     10000     DEPEVM    Device doesn't need EVM
|          24      4000     DEPDER    Disable  error  recovery  on   this
|                                     device
|          25      2000     DEPDEL    Disable  error  logging   on   this
|                                     device
|       26-29     1700                Unused
|       30-35     77        PDVSTA    Station number (node) of device

                                                                  Page 81


   18.7  DEVXTR -- Extra Word


   The DEVXTR contains different information for different types of DDBs.
   The format for each type of DDB is listed below:

        MPX:  DDB:

        Bits      Value               Contents        ____      _____               ________

         0-17     777777              Address of connected device table
        18-35     777777              Number of connected devices

   MPX-Controlled Device DDB:

        Bits      Value               Contents        ____      _____               ________

         0-17     777777              I/O flags (same  as  left  half  of
                                      USRJDA)
        18-35     777777              Address  of  MPX:   DDB  to   which
                                      device is connected

   Magtape DDB:

        Bits      Value     Symbol    Contents        ____      _____     ______    ________

          0-2     700000    TDYHNI    Initial value of queued/asynch  I/O
                                      hung timer.

          3-5     70000     TDYHNG    Current value of queued/asynch  I/O
                                      hung timer.  The value of TDYHNG is
                                      the number of times a queued I/O or
                                      asynchronous  I/O  request  can get
                                      hung device errors if  it  has  not
                                      been  actually  started,  before  a
                                      hung  device   condition   actually
                                      occurs.

         6-35               Unused

                                                                  Page 82


   18.8  DEVEVM -- Exec Virtual Memory Word



   |--------------------------------------------------------------------|
   |   PIEVM      |    PIEVMS     |     POEVM       |   POEVMS          |
   |--------------------------------------------------------------------|
    0-----------8  9-----------17  18------------26  27---------------35



        Bits      Value     Symbol    Contents        ____      _____     ______    ________

          0-8     777000    PIEVM     Page number of  this  device's  EVM
                                      for buffered input
         9-17     777       PIEVMS    Number of pages  of  EVM  allocated
                                      for buffered input
        18-26     777000    POEVM     Page number of  this  device's  EVM
                                      for buffered output
        27-35     777       POEVMS    Number of pages  of  EVM  allocated
                                      for buffered output




   18.9  DEVESE -- Extended Software Error Word

   |--------------------------------------------------------------------|
   |      Next DDB      |  PI Level |  CNDSIZ       |  PDVESE           |
   |--------------------------------------------------------------------|
    0-----------------17 18-------19  20 ---------26 27---------------35



        Bit       Value     Symbol    Meaning        ___       _____     ______    _______

         0-17     777777              Address of next DDB in pending  PSI
                                      chain
        18-19     600000              PSI interrupt level
        20-26     177000              PSI vector offset
        27-35     777       PDVESE    Extended software error status

                                                                  Page 83


|  18.10  DEVHCW -- Device Hardware Characteristics Word
|
|
|  |--------------------------------------------------------------------|
|  | L | P | VFT | CST | TYP |  TYU  |     |    Character set name      |
|  |--------------------------------------------------------------------|
|    0   1   2--5  6--8  9--11 12--14 15-17 18------------------------35
|
|
|
|       Bits      Symbol    Contents        ____      ______    ________
|
|           0     HC.LCP    Lowercase printer
|           1     HC.PGC    Printer has page counter
|         2-5     HC.VFT    VFU type, one of the following codes:
|
|                 Code      Symbol    Meaning                  ____      ______    _______
|
|                 0         .HCVTO    Optical (paper tape) VFU
|                 1         .HCVTD    Direct access VFU (DAVFU)
|                 2         .HCVTN    No VFU (handled by hardware)
|
|         6-8     HC.CST    Character set  type,  one  of  the  following
|                           codes:
|
|                 Code      Symbol    Meaning                  ____      ______    _______
|
|                 0         .HCC64    64-character set
|                 1         .HCC95    95-character set
|                 2         .HCC28    128-character set
|                 3         .HCCVR    Variable character set
|
|        9-11     HC.TYP    Line  printer  type,  one  of  the  following
|                           codes:
|
|                 Code      Symbol Meaning                  ____      ______ _______
|
|                 0         .HCTUK    Unknown
|                 1         .HCTBX    BA10
|                 2         .HCTLC    LP100
|                 3         .HCT20    LP20
|
|       12-14     .HCTYU    Line printer  class,  one  of  the  following
|                           codes:
|
|                 Code      Symbol    Meaning                  ____      ______    _______
|
|                 0         .HCUUK    Unknown or unspecified
|                 1         .HCULP    LP05-type
|                 2         .HCULN    LN01-type
|
|       18-35     HC.CSN    Character set name (SIXBIT/nnn/)

                                                                  Page 84


   18.11  DEVCPU -- CPU Word


   |--------------------------------------------------------------------|
   |CPF|CPS|PCL| CPU|              |  Addr of interrupt interlock       |
   |--------------------------------------------------------------------|
    0-2 3-5 6-8 9-11  12---------17  18-------------------------------35



        Bits      Value     Symbol    Contents        ____      _____     ______    ________

         0-2      700000    DEYCPF    CPU number of  primary  CPU  owning
                                      device.   DEYCPF=7 when any CPU can
                                      do I/O  to  the  device.   In  this
                                      case, DEYPCL will contain 0.
         3-5      70000     DEYCPS    CPU number of secondary CPU  owning
                                      device
         6-8      7000      DEYPCL    CPU number  of  CPU  doing  I/O  to
                                      device
         9-11     700       DEYCPU    CPU number of CPU that did last  IN
                                      or OUT UUO
        18-35                         Address  of   UUO/interrupt   level
                                      interlock word




   18.12  DEVJOB -- Job Word

|
|  |--------------------------------------------------------------------|
|  |               |      PUNIT       |     PCTXN      |       PJOBN    |
|  |--------------------------------------------------------------------|
|   0-------------8 9---------------17 18------------26 27------------35
|
|
|
|       Bits      Symbol    Contents        ____      ______    ________
|
|         0-8               Reserved
|        9-17     PUNIT     Unit number.
|       18-35     PJCHN     Byte pointer to job context handle for INITed
|                           devices (includes both context number and job
|                           number).
|       18-26     PCTXN     Byte pointer to  context  number  for  INITed
|                           devices.
|       27-35     PJOBN     Job number of device owner
                                                                  Page 85


   18.13  DEVFUN -- UDB Pointer (Disk DDB Only)


   |--------------------------------------------------------------------|
   | S | L |                       |  UDB address to which first        |
   |   |   |                       |  retrieval pointer points          |
   |--------------------------------------------------------------------|
     0   1   2------------------17   18------------------------------35



        Bits      Value     Symbol    Contents        ____      _____     ______    ________

            0     400000    DEPFFS    File found by scanning (/SCAN)
            1     200000    DEPFFL    File found in LIB or SYS
         2-17     177777              Unused
        18-35     777777              Address of UDB for unit,  to  which
                                      first   retrieval  pointer  in  DDB
                                      points (DEVRB1)




   18.14  DEVELB -- Error Information


   (Disk DDBs only)

   |--------------------------------------------------------------------|
   | Error bits |         First logical block number of bad region      |
   |--------------------------------------------------------------------|
    0---------8  9----------------------------------------------------35



        Bits      Value     Symbol    Contents        ____      _____     ______    ________

           3      400000    BAPOTR    Other  error  (neither  BAPDTR  nor
                                      BAPHDR)
           4      200000    BAPDTR    Data error
           5      100000    BAPHDR    Search or header compare error
        9-35                          Logical   block   number,    within
                                      structure, of start of bad region

                                                                  Page 86


   18.15  DEVRIB -- Current RIB Information


   (Disk DDBs only)

   |--------------------------------------------------------------------|
   | E |   Count   |   Unit |           Cluster address                 |
   |--------------------------------------------------------------------|
     0   1--------8 9-----12 13---------------------------------------35



        Bits      Value     Symbol    Contents        ____      _____     ______    ________

            0     400000              Extended RIB
          1-8     377000    DEYRBC    Count of RIBs
         9-12     740       DEYRBU    Unit within structure
        13-35               DEYRBA    Cluster address within unit




   18.16  DEVCUR -- Current Unit Information


   (Disk DDBs only)

   |--------------------------------------------------------------------|
   |RAD|PRV|RRC|RHC|PHO|LBF| DEYNB1 | DEYNBB  | Address of current UDB  |
   |--------------------------------------------------------------------|
     0   1   2   3   4   5   6----11 12-----17 18---------------------35



        Bits      Value     Symbol    Contents        ____      _____     ______    ________

            0     400000    DEPRAD    Rename in progress
            1     200000    DEPPRV    Don't check privileges on LOOKUP
            2     100000    DEPRRC    Auto-rewrite of RIB on change
            3     40000     DEPRHC    RIB had changed
            4     20000     DEPPHO    Physical-only set in INIT
            5     10000     DEPLBF    Use large buffers
         6-11     7700      DEYNB1    Number of blocks in first buffer
        12-17     77        DEYNBB    Number of blocks per buffer
        18-35     777777              Address of current UDB doing I/O

                                                                  Page 87


   18.17  DEVFCS -- CFP-Supplied Word


   (Disk DDBs only)

   |--------------------------------------------------------------------|
   |                               | P |  CFP-supplied on LOOKUP        |
   |--------------------------------------------------------------------|
    0---------------------------16   17 18---------------------------35



        Bits      Value     Symbol    Contents        ____      _____     ______    ________

           17     1         DEPCFS    CFP can be supplied by program
        18-35     777777              CFP from LOOKUP UUO




   18.18  DEVRBn -- Retrieval Pointer


   (Disk DDBs only)

   |--------------------------------------------------------------------|
   |     Cluster count   |       Checksum     |       Cluster address   |
   |--------------------------------------------------------------------|

   Widths of these fields are defined symbolically, and may be  different
   for each file structure.  Byte pointer is in structure data block.

        Field               Byte Pointer        _____               ____ _______

        Cluster count       STYCNP
        Checksum            STYCKP
        Cluster address     STYCLP (23 bits maximum)

        If cluster count = 0, the word actually is one of the following:

         o  Pointer to new unit, if bit  18  =  1.   Bits  19-35  specify
            logical unit number within file structure.

         o  EOF flag, if whole word is zero.

                                                                  Page 88


        18.19  TDVSTS -- Status Information Word


        (Magtape DDBs only)

        |--------------------------------------------------------------------|
        |0|1| |3|TDYDEN | TDYMOD |                         | TDYMD1 | TDYDN1 |
        |--------------------------------------------------------------------|
         0 1 2 3 4-----7  8----10 11--------------------28  29---31  32---35



        Bits      Value     Symbol    Contents        ____      _____     ______    ________

            0     400000    D.RDBK    Read backwards
            1     200000    D.NRLT    Read next record at low threshold
            2                         Unused
            3     40000     D.EPAR    Even parity
          4-7     36000     TDYDEN    Tape density used
         8-10     1600      TDYMOD    Tape data format from  TAPOP.   UUO
                                      function .TFMOD
        11-28                         Unused
        29-31     160       TDYMD1    Tape data format  from  SET  FORMAT
                                      command
        32-35     17        TDYDN1    Tape  density  from   TAPOP.    UUO
                                      function .TFDEN
                                                                  Page 89


   19.0  DEVDSP -- DEVICE DISPATCH TABLE


   Description:   Table  of  JRSTs  to  routines  that  perform   various
                  device-dependent    functions.     For   each   device,
                  corresponding table entries go to routines to perform a
                  specific function.

                  The first nine  entries  are  present  in  each  device
                  service  routine.   Tables  that contain the additional
                  entries are referred to as long dispatch tables.

   Defined in:    Device Service Routines

   Used by:       COMMON, COMNET, MSGSER, SYSINI, UUOCON

   The format of each word in this table is a JRST instruction, where the
   subroutine will perform one of the following functions:

             Label of entry          Relative
             (Relative to DEVDSP)    Address      Function

             +------------------------------------------------------------+
             | DOFL                 |    -5    | Is device offline        |
             |------------------------------------------------------------|
             | DDVO                 |    -4    | DEVOP. UUO               |
             |------------------------------------------------------------|
             | DSZ                  |    -3    | Return buffer size       |
             |------------------------------------------------------------|
             | DINI                 |    -2    | Device and service       |
             |                      |          | routine initialization   |
             |------------------------------------------------------------|
             | DHNG                 |    -1    | "Hung device" action     |
             |------------------------------------------------------------|
             | DRL                  |     0    | Release (table base      |
             |                      |          | adr - DEVDSP)            |
             |------------------------------------------------------------|
             | DCL                  |     1    | CLOSE, CLOSE output      |
             |------------------------------------------------------------|
             | DOU                  |     2    | OUTPUT operation         |
             |------------------------------------------------------------|
             | DIN                  |     3    | INPUT operation          |
             |------------------------------------------------------------|
             | DEN (1)              |     4    | ENTER operation          |
             |------------------------------------------------------------|
                                                                  Page 90


             |------------------------------------------------------------|
             | DLK                  |     5    | LOOKUP operation         |
             |------------------------------------------------------------|
             | DDO                  |     6    | DUMP mode output         |
             |------------------------------------------------------------|
             | DDI                  |     7    | DUMP mode input          |
             |------------------------------------------------------------|
             | DSO                  |    10    | USETO operation          |
             |------------------------------------------------------------|
             | DSI                  |    11    | USETI operation          |
             |------------------------------------------------------------|
             | DGF                  |    12    | UGETF operation          |
             |------------------------------------------------------------|
             | DRN                  |    13    | RENAME operation         |
             |------------------------------------------------------------|
             | DCLI                 |    14    | CLOSE input - dump mode  |
             |------------------------------------------------------------|
             | DCLR                 |    15    | UTPCLR UUO               |
             |------------------------------------------------------------|
             | DMT (1)              |    16    | MTAPE operation          |
             +------------------------------------------------------------+


   Labels for table entries, relative to the base address, are defined in
   S.MAC.

   Notes:

        1.  Only a "long dispatch table" contains entries  DEN  and  DMT.
            The  long  dispatch  table  is  used  for  directory-oriented
            devices (DECtape, disk, and labelled magtape).

        2.  The actual tables are defined in the device service routines.
            The base address of the device dispatch table is contained in
            the corresponding Device Data Block, in  the  right  half  of
            DEVSER.

        3.  The device dispatch table labels are normally indexed  by  AC
            T4,  which  must  contain the base address of the appropriate
            table.  The dispatch is  usually  performed  by  a  PUSHJ  P,
            Dxxx(T4)  where  Dxxx represents the label of the appropriate
            table entry.

        4.  Before attempting to dispatch to any  of  the  long  dispatch
            table  entries, the monitor checks the DVLNG bit of DEVMOD in
            the Device Data Block for that device.

        5.  The actual names of the tables are xyzDSP where  xyz  is  the
            three-letter  name of the device (for example, PTRDSP for the
            paper tape reader).

                                                                  Page 91


|  20.0  DISK CACHE DATA STRUCTURE
|
|
|  Description:   The data structures described in this section are  used
|                 by the monitor to implement a software disk cache.
|
|                 The basic data structure consists of two  doubly-linked
|                 lists,  a  list header, and a hash table.  Each node in
|                 the list contains forward  and  backward  pointers  for
|                 each  of  the  two  lists  to  which  it is linked (the
|                 pointers are .CBNHB, .CBPHB, .CBNAB, and .CBPAB), a UDB
|                 address  (.CBUDB),  a  block  number  (.CBBLK),  and  a
|                 pointer to the address in  FRECOR  (.CBDAT)  where  the
|                 block  is  stored.   For  statistics purposes, the node
|                 also contains a count of the number of times this block
|                 has been hit since it was in the cache, named (.CBHIT).
|
|                 The list header points to the two  linked  lists.   The
|                 first  linked  list  is  the  access  list.   The  most
|                 recently accessed block is at the  head  of  the  list;
|                 the  least  recently accessed block is at the bottom of
|                 the  list.    This   list   is   linked   through   the
|                 .CBNAB/.CBPAB  words.   The  second  linked list is the
|                 free list.  It contains a list of all blocks  that  are
|                 not  currently in use, and as such do not appear in the
|                 hash list described below.  This list is linked through
|                 the .CBNHB/.CBPHB words.
|
|                 The  hash  table  consists   of   pointers   into   the
|                 .CBNHB/.CBPHB  list  for  the  corresponding  list  for
|                 blocks that hash to the same position.  Thus, the  hash
|                 table  is  really a number of separate list headers for
|                 the lists of blocks that hash to that position  in  the
|                 hash table.
|
|                 At initialization time (CSHINI),  all  the  blocks  are
|                 allocated and linked into the free list.  They are also
|                 linked into the access list.  The  hash  table  entries
|                 are linked to themselves because the table is empty.
|
|                 To find an entry, given its UDB and block number,  hash
|                 the block into the hash table, and, using that entry as
|                 a list head, follow the list until you find a match  or
|                 return  to  the  header.  This is done with the routine
|                 CSHFND.  In general, these lists are one or two  blocks
|                 in length.
|
|                 The  main  cache  handling  routine  is  CSHIO,   which
|                 simulates  I/O  from  the  cache,  doing  the necessary
|                 physical I/O to fill and write the  cache.   Note  that
|                 this  is write-through cache, so no sweeps are required
|                 and the data in the cache always reflects the blocks on
|                 disk.
                                                                  Page 92


|  Format of CBHEAD List Header:
|
|  Symbol     Map
|            +------------------------------------------------------------+
|  .CBNHB    |       Pointer to first block in free list                  |
|            |------------------------------------------------------------|
|  .CBPHB    |          Pointer to last block in free list                |
|            |------------------------------------------------------------|
|  .CBNAB    |       Pointer to first block in access list                |
|            |------------------------------------------------------------|
|  .CBPAB    |          Pointer to last block in access list              |
|            +------------------------------------------------------------+
|
|
|  The following items are cached:  RIBs, UDF data, SFD data, and SATs.
|
|  Format of Two-Word CBHSHT Hash Table Entry:
|
|  Symbol     Map
|            +------------------------------------------------------------+
|  .CBNHB    |         Pointer to first hash block in this chain          |
|            |------------------------------------------------------------|
|  .CBPHB    |         Pointer to last hash block in this chain           |
|            +------------------------------------------------------------+
|
|
|  Format of Each List Entry:
|
|  Symbol     Map
|            +------------------------------------------------------------+
|  .CBNHB    |         Pointer to next hash block in this chain           |
|            |------------------------------------------------------------|
|  .CBPHB    |         Pointer to previous hash block in this chain       |
|            |------------------------------------------------------------|
|  .CBNAB    |         Pointer to next accessed block                     |
|            |------------------------------------------------------------|
|  .CBPAB    |         Pointer to previous accessed block                 |
|            |------------------------------------------------------------|
|  .CBUDB    |         UDB of unit containing this block                  |
|            |------------------------------------------------------------|
|  .CBBLK    |                    Block number                            |
|            |------------------------------------------------------------|
|  .CBDAT    |          Pointer to 128(8) words for this disk block       |
|            |------------------------------------------------------------|
|  .CBHIT    |         Count of hits for this disk block                  |
|            +------------------------------------------------------------+
|
                                                                  Page 93


|  21.0  DISP AND DISP2 -- COMMAND DISPATCH TABLES
|
|
|  Description:   Specify dispatch routine  addresses  for  each  monitor
|                 command.  The DISP table contains addresses for monitor
|                 commands, and DISP2 contains addresses for monitor  SET
|                 commands.   Entries  correspond  to  command  names  in
|                 COMTAB;  the offset of the command  in  COMTAB  is  the
|                 index into DISP and DISP2.
|
|  Defined in:    COMMON
|
|  Used by:       COMCON
|
|            Map
|            +------------------------------------------------------------+
|            |        Dispatch address for command 1                      |
|            |------------------------------------------------------------|
|            |        Dispatch address for command 2                      |
|            |------------------------------------------------------------|
|            |        Dispatch address for command 3                      |
|            |------------------------------------------------------------|
|                                   .   .   .
                                                                  Page 94


|  22.0  DISPC -- CUSTOMER-DEFINED COMMAND DISPATCH TABLE
|
|
|  Description:   Specify   dispatch   routine   addresses    for    each
|                 customer-defined  monitor  command.  Entries correspond
|                 to command names in CSTTAB;  the offset of the  command
|                 in CSTTAB is the index into DISPC.
|
|  Defined in:    COMMON
|
|  Used by:       COMCON
|
|            Map
|            +------------------------------------------------------------+
|            |        Dispatch address for command 1                      |
|            |------------------------------------------------------------|
|            |        Dispatch address for command 2                      |
|            |------------------------------------------------------------|
|            |        Dispatch address for command 3                      |
|            |------------------------------------------------------------|
|                                   .   .   .
                                                                  Page 95


   23.0  DSCTAB -- DATASET CONTROL TABLE


   Description:   Contains information required for  timing  function  on
                  datasets.   One  entry  for  each  data  set that needs
                  timing.  Index is contained in Line Data Block,  LDBBY2
                  word.

   Defined in:    COMDEV, COMMON, SCNSER


   Each word in DSCTAB is formatted as follows:


             |------------------------------------------------------------|
             |HWC|SWC|FAI|NCR|BLI|DLW|DLF|DLC|EON| Time |  LINTAB Index   |
             |------------------------------------------------------------|
               0   1   2   3   4   5   6   7   8  12--17  18------------35



        Bits      Symbol    Meaning        ____      ______    _______

            0     DSCHWC    When last heard from,  the  hardware  carrier
                            was on
            1     DSCSWC    Software considers carrier to be on
            2     DSCFAI    Carrier went off, but may be brief failure
            3     DSCNCR    New carrier flag;  on briefly for clock sync
            4     DSCBLI    Blind flag;  ignore everything for 1 second
            5     DSCDLW    Dialer wait;  waiting for results from dialer
            6     DSCDLF    Dialer fail;  unsuccessful dialer attempt
            7     DSCDLC    Dialer complete;  successful dialer action
            8     DSCEON    End of number;  sent all digits to dialer
        12-17     DSTIMP    Time field for functions that require timing
        18-35               Line number for this dataset (LINTAB index)
                                                                  Page 96


|  24.0  ENQ/DEQ BLOCKS
|
|
|  Description:   Contains information about the ENQ/DEQ facility  for  a
|                 job.   The  Q-Block  describes the user request for ENQ
|                 resources.  The Lock Block describes the specific locks
|                 requested.
|
|                 In the following block descriptions, the symbol for the
|                 left  half of the word is listed first, and below it is
|                 the symbol for the right half of the word.
|
|  The format of the Q-block is:
|
|  Symbol    Map
|            +------------------------------------------------------------+
|  .QBLJQ    | Back ptr to last Q-block   |  Forward ptr to next Q-block  |
|  .QBNJQ    | for this job               |  for this job                 |
|            |------------------------------------------------------------|
|  .QBJCH    |    Job context handle      | Channel no.  |  Flags         |
|            |                            | (.QBCHN)     |  (.QBFLG)      |
|            |------------------------------------------------------------|
|  .QBLQ     |  Ptr to last Queue Block   |  Ptr to next Queue Block      |
|  .QBNQ     |  for this lock             |  for this lock                |
|            |------------------------------------------------------------|
|  .QBLQR    |  Ptr to last multiple      |  Ptr to next multiple         |
|  .QBNQR    |  Q-Block                   |  Q-Block                      |
|            |------------------------------------------------------------|
|  .QBRID    |  Request-id                |  No. requested from pool      |
|  .QBNRP    |                            |                               |
|            |------------------------------------------------------------|
|  .QBGRP    |  Group no.                 |  Ptr to Lock Block            |
|  .QBLB     |                            |                               |
|            |------------------------------------------------------------|
|  .QBCHK    |  Ptr to next Q-block       |  Mask Block                   |
|  .QBMSK    |  to be checked for deadlock|                               |
|            +------------------------------------------------------------+
|
                                                                  Page 97


|  The format of the Lock Block is:
|
|            +------------------------------------------------------------+
|  .LBLHS    | Back ptr to last           |  Ptr to next                  |
|  .LBNHS    | Lock Block in hash chain   |  Lock Block in hash chain     |
|            |------------------------------------------------------------|
|  .LBLEN    | Length of Lock Block       |  Flags                        |
|  .LBFLG    |                            |                               |
|            |------------------------------------------------------------|
|  .LBLQ     | Ptr to last Q-Block        | Ptr to next Q-Block           |
|  .LBNQ     | in chain                   | in chain                      |
|            |------------------------------------------------------------|
|  .LBLVL    |     Level number           | Addr of Access Table          |
|  .LBACC    |                            | (-2, -3, or 400000+jobn       |
|            |------------------------------------------------------------|
|  .LBPUL    |     Number in pool         | Number available              |
|  .LBAVL    |                            |                               |
|            |------------------------------------------------------------|
|  .LBTIM    |                      Time stamp                            |
|            |------------------------------------------------------------|
|  .LBTLN    |  Length of Table Block     |  Lock-associated Table        |
|  .LBTBL    |                            |                               |
|            |------------------------------------------------------------|
|  .LBNMS    |  Number of words in        |      Timer                    |
|  .LBPLT    |  Mask Block                |                               |
|            |------------------------------------------------------------|
|  .LBTXT    |                   ASCIZ text, or                           |
|            |                   500000,,0+user-code, or                  |
|            |                   36-bit user code                         |
|            +------------------------------------------------------------+
|
                                                                  Page 98


   25.0  EPT -- EXEC PROCESS TABLE


   Description:   Contains information about the  executive  process  and
                  points  to  important  addresses, like page maps.  This
                  table has been called the Exec Page Map Page (EPMP)  in
                  the  past.   However,  the  EPT  is not a page map.  It
                  points  to  the  appropriate  page   maps   and   other
                  hardware-related instructions.

                  Each CPU constants GETTAB  table  (.GTCnC)  contains  a
                  word (%CCTOS) that points to that CPU's EPT.

   Defined in:    COMMON.MAC

             +-----------------------------------------------------------+
     0       /          Eight channel logout areas (4 words each)        /
             |-----------------------------------------------------------|
    40       |                  I/O Page Fail trap                       |
             |-----------------------------------------------------------|
    41       |                       Unused                              |
             |-----------------------------------------------------------|
    42       /              Priority interrupt instructions              /
             /                     (16 words)                            /
             |-----------------------------------------------------------|
    60       /                  Channel fill words                       /
             /                      (4 words)                            /
             |-----------------------------------------------------------|
             /                         Unused                            /
             |-----------------------------------------------------------|
    140      /                 4  DTE control blocks                     /
             /                     (10 words each)                       /
             |-----------------------------------------------------------|
    200      /                        Unused                             /
             |-----------------------------------------------------------|
    421      |               Arithmetic overflow trap instruction        |
             |-----------------------------------------------------------|
    422      |             Push down list overflow trap instruction      |
             |-----------------------------------------------------------|
    423      |                Trap 3 trap instruction                    |
             |-----------------------------------------------------------|
             /                         Unused                            /
             |-----------------------------------------------------------|
    510      |            Time base for high-precision runtime           |
             |                        (2 words)                          |
             |-----------------------------------------------------------|
    512      |                Performance analysis counter               |
             |                        (2 words)                          |
             |-----------------------------------------------------------|
                                                                  Page 99


             |-----------------------------------------------------------|
    514      |          Interval timer interrupt instruction             |
             |-----------------------------------------------------------|
             /                         Unused                            /
             |-----------------------------------------------------------|
    540      |              Address of Section 0 exec page map           |
             |-----------------------------------------------------------|
    541      /              Address of Sections 1-37 exec page maps      /
             /                 One word for each section                 /
             |-----------------------------------------------------------|
    600-777  /                         Unused                            /
             +-----------------------------------------------------------+

                                                                 Page 100


   26.0  EXE FORMAT SAVE FILES


   Defined in:    S.MAC

   Used by:       COMCON, SEGCON

   Description:   The old .SAV, .LOW, .SHR, .HGH and .XPN files have been
                  replaced by the .EXE type in order to provide a unified
                  format for saved core image files.  This type  of  file
                  consists of two distinct but related portions:


                  1.  Information about the structure of the file

                  2.  The data in the file


                  The file  information  is  organized  into  a  variable
                  number  of  chunks.   Each  chunk  begins  with  a word
                  containing an identifier code in the left half and  the
                  length  of  the chunk in the right half.  At this time,
                  the defined codes are:

                  1.  Directory:  1776

                  2.  End:  1777

                  Other  chunks  may  be  added  later  as  they   become
                  necessary.   The  save  file  starts  with  a directory
                  followed by one or more pages of data.   All  pages  of
                  data  are stored on page boundaries in exactly the form
                  they will be loaded into  the  virtual  address  space.
                  There is no zero compression within pages;  only entire
                  pages will be compressed.

                  The format of the directory is:

             Map
             +------------------------------------------------------------+
             |           1776             |          Size of directory    |
             |------------------------------------------------------------|
             |           Flags            |       File page number        |
             |------------------------------------------------------------|
             |           Repeat           |      Process page number      |
             |------------------------------------------------------------|
             /             Enough data to describe all pages              /
             +------------------------------------------------------------+

   Word 0 has 1776 in the left half and the  size  of  the  directory  in
   words in the right half.

   Word 1 has flag bits in the leftmost nine bits and a file page  number
   in  the  right 27 bits.  If the file page number is zero then the page
   is allocated but zero.  The flag bits are:
                                                                 Page 101


        Symbol    Bits      Description        ______    ____      ___________

        0         SV%HIS    Set if this is part of the hiseg
        1         SV%SHR    Set if this page is sharable
        2         SV%WRT    Set if the page may be written
        3         SV%CON    Page is concealed (access by PORTAL only)

   Word 2 has a repeat count in its leftmost nine bits for one less  than
   the  number  of  consecutive  file  and memory pages described by this
   pointer.  The rightmost nine bits describe the  process  address  into
   which  this  page should be loaded.  Descriptors in the same format as
   words 1 and 2 are provided for every contiguous piece of  the  process
   space with identical access bits.
                                                                 Page 102


   27.0  FETTBL -- TABLE OF BITS FOR MONITOR FEATURES


   Description:   Contains bits for feature test switches.

   Defined in:    UUOCON (local symbol)

   Used by:       UUOCON

   GETTAB Table:  .GTFET (71)

             Map
             +------------------------------------------------------------+
             |              Miscellaneous UUO features                    |
             |------------------------------------------------------------|
             |           Real time and scheduling features                |
             |------------------------------------------------------------|
             |                  Command features                          |
             |------------------------------------------------------------|
             |                Accounting features                         |
             |------------------------------------------------------------|
             |             Error control and options                      |
             |------------------------------------------------------------|
             |            Non-I/O debugging features                      |
             |------------------------------------------------------------|
             |                File system features                        |
             |------------------------------------------------------------|
             |               Internal disk features                       |
             |------------------------------------------------------------|
             |                  Scanner features                          |
             |------------------------------------------------------------|
             |            Miscellaneous I/O features                      |
             |------------------------------------------------------------|
             |      Miscellaneous I/O features (second word)              |
             |------------------------------------------------------------|
             |       Internal disk features (second word)                 |
             |------------------------------------------------------------|
             |         File system features (second word)                 |
             |------------------------------------------------------------|
             |      Miscellaneous UUO features (second word)              |
             +------------------------------------------------------------+

                                                                 Page 103


   28.0  FRAGMENT TABLE


   Description:   Contains data needed in order to swap in  a  fragmented
                  core  image.   Set  up  as  required  when segments are
                  swapped out.  JBTSWP points to first fragment table for
                  a given segment.

   Used by:       SCHED1, SEGCON, SWPSER, VMSER

           Map
           +------------------------------------------------------------+
           |      Size                 |     |   U    |     Address     |
           |------------------------------------------------------------|
            0-----------------------17  18-21 23----24 25-------------35

   The bits in the fragment entry are defined below:


        Bits      Contents        ____      ________

         0-17     Number of pages in fragment
        20-22     Unit index into SWPTAB
        23-35     Logical page within unit where fragment starts

   Notes:

        1.  A zero word indicates end of table.

        2.  Fragment tables are built from  four-word  blocks.   If  more
            than  one block is required, and they are not contiguous, the
            last word of the preceding block contains -1 in the left half
            and the address of the next table in the right half.

                                                                 Page 104


   29.0  HOM -- HOME BLOCK


   Description:   Block on each disk unit or  pack  that  contains  vital
                  statistics  that cannot be "built in" when a monitor is
                  generated.  These are primarily parameters of the  unit
                  or pack and the structure to which it belongs.

   Defined in:    COMMOD

   Used by:       MONBTS, ONCMOD, REFSTR

   Symbol     Map
             +------------------------------------------------------------+
   HOMNAM    | SIXBIT      /HOM/        (Written by MAP program.)         |
             |------------------------------------------------------------|
   HOMHID    | SIXBIT unit ID           (Written by MAP program.)         |
             |------------------------------------------------------------|
   HOMPHY*   |Physical disk address of | Physical disk address of the     |
             | this block on this unit |  other Home blk on this unit     |
             |------------------------------------------------------------|
   HOMSRC    | Position of this structure in System Search List           |
             | -1 means not in System Search List                         |
             |------------------------------------------------------------|
   HOMSNM    | SIXBIT structure name     0 = not in file structure        |
             |------------------------------------------------------------|
   HOMNXT    |Unit ID for next unit in STR    0 = last or only unit       |
             |------------------------------------------------------------|
   HOMPRV    |Unit ID for previous unit in STR  (0=last or only unit)     |
             |------------------------------------------------------------|
   HOMLOG    | SIXBIT logical unit name within structure                  |
             |------------------------------------------------------------|
   HOMLUN    | Logical unit number within structure                       |
             |------------------------------------------------------------|
   HOMPPN    | PPN that refreshed structure under timesharing, or 0       |
             |------------------------------------------------------------|
   HOMHOM    | Logical block # for Home | Logical block # within unit     |
             |    block within unit     |   for extra Home block          |
             |------------------------------------------------------------|
   HOMGRP    | No. blocks per group to try for on output (not clusters)   |
             |------------------------------------------------------------|
   HOMBSC    | No. blocks per supercluster on this unit                   |
             |------------------------------------------------------------|
   HOMSCU    | No. superclusters per unit                                 |
             |------------------------------------------------------------|
   HOMCNP    |  Byte pointer for cluster count in retrieval pointers      |
             |------------------------------------------------------------|
   HOMCKP    |  Byte pointer for checksum in retrieval pointers           |
             |------------------------------------------------------------|
   HOMCLP    | Byte pointer for cluster address in retrieval pointers     |
             |------------------------------------------------------------|
   HOMBPC    | No. blocks per cluster for this structure                  |
             |------------------------------------------------------------|
                                                                 Page 105


             |------------------------------------------------------------|
   HOMK4S    | No. K words for swapping on this unit                      |
             | 0 means no swapping                                        |
             |------------------------------------------------------------|
   HOMREF    | Non-zero if file structure must be refreshed               |
             |------------------------------------------------------------|
   HOMSIC    | No. SAT blocks in core                                     |
             |------------------------------------------------------------|
   HOMSID    | Unit ID of next unit in active swapping list               |
             | 0 if last or not in active swapping list                   |
             |------------------------------------------------------------|
   HOMSUN    | Logical unit # in active swapping list                     |
             | -1 if not in swapping list                                 |
             |------------------------------------------------------------|
   HOMSLB    | First logical block # for swapping on this unit            |
             |------------------------------------------------------------|
   HOMCFS    | Swapping class for unit                                    |
             |------------------------------------------------------------|
   HOMSPU    | No. SAT blocks per unit                                    |
             |------------------------------------------------------------|
   HOMOVR    | Overdraw limit per user on this structure                  |
             |------------------------------------------------------------|
   HOMGAR    | Upper bound on total reserved blocks guaranteed to user    |
             |------------------------------------------------------------|
   HOMSAT    |                    SAT.SYS *                               |
             |------------------------------------------------------------|
   HOMHMS    |                    HOME.SYS *                              |
             |------------------------------------------------------------|
   HOMSWP    |                    SWAP.SYS *                              |
             |------------------------------------------------------------|
   HOMMNT    |                    MAINT.SYS *                             |
             |------------------------------------------------------------|
   HOMBAD    |                    BADBLK.SYS *                            |
             |------------------------------------------------------------|
   HOMCRS    |                    CRASH.EXE *                             |
             |------------------------------------------------------------|
   HOMSNP    |                    SNAP.SYS *                              |
             |------------------------------------------------------------|
   HOMRCV    |                    RECOV.SYS *                             |
             |------------------------------------------------------------|
   HOMSUF    |                    SYS [1,4].UFD *                         |
             |------------------------------------------------------------|
   HOMPUF    |                    PRINTR [3,3].UFD *                      |
             |------------------------------------------------------------|
   HOMMFD    |                    MFD [1,1].UFD *                         |
             |------------------------------------------------------------|
   HOMPT1    | First retrieval pointer for MFD for this unit's structure  |
             |------------------------------------------------------------|
   HOMUN1    | Logical unit # where MFD starts                            |
             |------------------------------------------------------------|
   HOMLEN    /Table of lengths of files created by refresh (6 words)      /
             / Needed by CRS, SNP, RCV, and UFDs (in that order)          /
             |------------------------------------------------------------|
                                                                 Page 106


             |------------------------------------------------------------|
   HOMUTP    | Unit type on which Home block was written                  |
             | (see UNYUTP)                                               |
             |------------------------------------------------------------|
   HOMRIP    | Reserved for use by RIPOFF                                 |
             |------------------------------------------------------------|
   HOMKLB    / 20 words used by console front end in KL10 systems         /
             |------------------------------------------------------------|
   HOMFEA    | FE-file address for KS10                                   |
             |------------------------------------------------------------|
   HOMFES    | FE-file size for KS10                                      |
             |------------------------------------------------------------|
   HOMTCS    | Tracks/cylinder/sector for KS10                            |
             |------------------------------------------------------------|
   HOMKLE    | Used to find files for bootstrap/dump                      |
             |------------------------------------------------------------|
   HOMK4C    | K for CRASH.EXE                                            |
             |------------------------------------------------------------|
   HOMPVS    | Word containing bit which says private structure           |
             |------------------------------------------------------------|
   HOMSDL    | Position of structure in system dump list                  |
             |------------------------------------------------------------|
   HOMOPP    | PPN of structure owner                                     |
             |------------------------------------------------------------|
   HOMMSU    | Reserved for use by DIGITAL                                |
             |------------------------------------------------------------|
   HOMCUS    / Reserved for customer definition (4 words)                 /
             |------------------------------------------------------------|
   HOMVID    / Volume-ID (12 PDP-11 bytes = 3 words)                      /
             |------------------------------------------------------------|
   HOMOWN    | Owner name                                                 |
             |------------------------------------------------------------|
   HOMVSY    | System type (TOPS-10)                                      |
             |------------------------------------------------------------|
   HOMCOD    |          0             |  (Unlikely code) 707070           |
             |------------------------------------------------------------|
   HOMSLF    |          0             |  This blk # in unit               |
             |                        |  (not cluster)                    |
             +------------------------------------------------------------+


   Notes:

         o  This value is the logical block number of first RIB.

         o  HOMSNM (structure name) is ignored by the  monitor  when  the
            structure is mounted.

         o  HOMSNM, HOMNXT, HOMPRV, and HOMLUN are checked by the monitor
            at  system  startup;   and  by  PULSAR when the unit comes on
            line, to determine whether a complete structure is  available
            that can be mounted.
                                                                 Page 107


         o  An extra copy of the Home block is maintained on each unit in
            case  the original becomes unreadable.  These two Home blocks
            which must be at  specific  places  known  to  the  software.
            Currently, they are blocks 1 and 10 (decimal) of each unit.

         o  Each file structure has one Home  file  HOME.SYS.   It  is  a
            "Sparse  File"  with  retrieval information in first block of
            each group.  However, only the second block of each group  (1
            cluster)  has data, the remaining blocks (if any) are 0.  The
            Home block is constructed so that each group is on a separate
            unit.

         o  Home blocks are limited to the  first  262,000  blocks  on  a
            unit.   Knowing  the  logical block address of Home blocks is
            useful only to recovery programs when file structure has been
            clobbered.    Most  programs  will  read  Home  blocks  using
            HOME.SYS.

         o  HOMREF is set by ONCE-only code and when some  parameter  for
            this unit has been changed.  It is checked when the system is
            started and by PULSAR when the pack is mounted.

         o  The bytes in HOMPHY are described below:


   HOMPHY Byte Definitions

   |--------------------------------------------------------------------|
   |          C       |  S   |  A   |             C       |  S   |  A   |
   |--------------------------------------------------------------------|
    0---------------7  8---12 13--17 18-----------------25 26--30 31--35


        Byte      Meaning        ____      _______

        C         Cylinder address
        S         Surface
        A         Sector address

                                                                 Page 108


   30.0  INTTAB -- INTERRUPT ROUTINE TABLE


   Description:   Contains descriptive information about  each  interrupt
                  routine.   One  entry, of two words, for each interrupt
                  routine.

                  Position  of  an  entry  in  the   table   is   of   no
                  significance.

   Defined in:    COMMON

   Used by:       COMMON, ONCE

             +------------------------------------------------------------+
   Device 1  | D | DDB count | CPU# | PI channel | Interrupt routine adr  |
             |------------------------------------------------------------|
             |     | Station # |  DDB Length    | Prototype DDB address   |
             |------------------------------------------------------------|
   Device 2  | D | DDB count | CPU# | PI channel | Interrupt routine adr  |
             |------------------------------------------------------------|
             |     | Station # |  DDB Length    | Prototype DDB address   |
             |------------------------------------------------------------|
                                   .   .   .
             |------------------------------------------------------------|
   Device n  | D | DDB count | CPU# | PI channel | Interrupt routine adr  |
             |------------------------------------------------------------|
             |     | Station # |  DDB Length    | Prototype DDB address   |
             +------------------------------------------------------------+

   Format of each two-word entry:

   Word 0


   |--------------------------------------------------------------------|
   | D |  DDB count  |  CPU#  |  PI channel  |   Interrupt routine adr  |
   |--------------------------------------------------------------------|
     0  1----------11 12----14 15----------17 18----------------------35

   Bit 0 = 1 for any type of DECtape routine.


   Word 1

   |--------------------------------------------------------------------|
   |      |  Station #  |    DDB Length |       Prototype DDB address   |
   |--------------------------------------------------------------------|
     0---2 3----------8   9-----------17 18---------------------------35

   Notes:

        1.  INTTAB entries are set up by the ASGINT and ASGSV1 macros  in
            COMMON according to parameters specified in HDWCNF.MAC.
                                                                 Page 109


        2.  Table is used by  INTLOP  in  ONCE  to  build  the  interrupt
            routine chain for each channel.

        3.  Used by ONCE-only code in COMMON to set  up  multiple  Device
            Data Blocks.

        4.  The interrupt routine address is the address of the CONSO  in
            the skip chain.

                                                                 Page 110


   31.0  JBTADR -- JOB ADDRESS TABLE


   Description:   Contains the core address and length for  each  segment
                  in  core.   One entry for each job number and each high
                  segment number.

   Defined in:    COMMON

   Used by:       CDPSER, CLOCK1, COMCON, CORE1, CPNSER, DISSER,  DTASRN,
                  ERRCON,  FILIO,  KLSER, LOKCON, METCON, REFSTR, SCHED1,
                  SEGCON, SWPSER, SYSINI, UUOCON, VMSER

   GETTAB Table:  .GTADR (1)
|
|
|            +------------------------------------------------------------+
|  Job 0     |    Length -1                 |    Relocation address       |
|            |------------------------------------------------------------|
|  Job 1     |    Length -1                 |    Relocation address       |
|            |------------------------------------------------------------|
|                                      .   .   .
|            |------------------------------------------------------------|
|  Job n     |    Length -1                 |    Relocation address       |
|            |------------------------------------------------------------|
|  High      |                              |                             |
|  Segment   |        0                     |    Relocation address       |
|  n+1       |                              |                             |
|            |------------------------------------------------------------|
|  n+2       |        0                     |    Relocation address       |
|            |------------------------------------------------------------|
|                                       .   .   .
|
|
|  Notes:
|
|       1.  A job that is not in core has zero in its entry.
|
|       2.  This table is the same as JBTDAT.
|
|       3.  The left half of JBTADR contains the highest page  number  in
|           the job's Section 0 page map.
|
|       4.  For low segments, the right half of  JBTADR  contains  .JDAT.
|           For high segments, the symbolic contents of the right half is
|           .VJDT.
|
|           If the segment is locked into  contiguous  memory  locations,
|           JBTADR  contains the first physical page number where the job
|           resides.
|
|       5.  The Length field applies only to the  job's  low  segment  in
|           Section 0.
|
                                                                 Page 111


   32.0  JBTAD2 -- SECOND JOB ADDRESS TABLE


   Description:   This table contains the first physical page number  for
                  each job's low segment.  This table is kept so that the
                  monitor can obtain the page number when the job is  not
                  currently  mapped or the UPT is in error.  There is one
                  entry per job.

   Defined in:    COMMON

   Used by:       CORE1, ERRCON, KLSER, LOKCON, VMSER


             +------------------------------------------------------------+
   Job 0     |                           |    First physical page         |
             |------------------------------------------------------------|
   Job 1     |                           |    First physical page         |
             |------------------------------------------------------------|
                                    .    .    .
             |------------------------------------------------------------|
   Job n     |                           |    First physical page         |
             +------------------------------------------------------------+

                                                                 Page 112


   33.0  JBTCHK -- SEGMENT CHECKSUM TABLE


   Description:   Used to assure correct  read-in  of  swapped  segments.
                  One  entry  for  each  job  number and high seg number.
                  Indexed by job number or high segment number.

                  Each entry contains the first word of the corresponding
                  segment when that segment is swapped out.

   Defined in:    COMMON

   Used by:       SWPSER

             +------------------------------------------------------------+
   Job 0     |                  Checksum 0                                |
             |------------------------------------------------------------|
   Job 1     |                  Checksum 1                                |
             |------------------------------------------------------------|
   Job 2     |                  Checksum 2                                |
             |------------------------------------------------------------|
                                 .    .    .
             |------------------------------------------------------------|
   Job n     |                  Checksum n                                |
             |------------------------------------------------------------|
   High      |                                                            |
   Segment   |                  Checksum n+1                              |
   n+1       |                                                            |
             |------------------------------------------------------------|
   n+2       |                  Checksum n+2                              |
             |------------------------------------------------------------|
                                .     .    .
                                                                 Page 113


|  34.0  JBTCLM -- JOB CORE LIMITS
|
|
|  Description:   Contains the core limit for each job.   Right  half  is
|                 JBTDDB.
|
|  Defined in:    COMMON
|
|  Used by:       COMCON, CORE1, VMSER
|
|  See also:      JBTDDB
|
|
|            +------------------------------------------------------------+
|  Job 0     |    Core limit for job        |    JBTDDB                   |
|            |------------------------------------------------------------|
|  Job 1     |    Core limit for job        |    JBTDDB                   |
|            |------------------------------------------------------------|
|                                      .   .   .
|            |------------------------------------------------------------|
|  Job n     |    Core limit for job        |    JBTDDB                   |
|            +------------------------------------------------------------+
|
                                                                 Page 114


   35.0  JBTCQ -- JOB QUEUES TABLE


   Description:   Contains the master  job  queues.   Each  queue  is  an
                  ordered  list  of  job numbers corresponding to all the
                  jobs in some particular status.  There are two sets  of
                  queues,  one for jobs that are in core and one for jobs
                  that are swapped out.

                  The index in the positive direction relative  to  JBTCQ
                  is  by job number.  The index in the negative direction
                  is the queue number for the in-core master  queues  and
                  the queue number offset by the maximum number of queues
                  for the out-of-core master queues.

                  Each queue is an  ordered  list  of  job  numbers.   In
                  JBTCQ,  each  queue  is  represented  by  a forward and
                  backward linked  ring  of  table  entries.   Each  ring
                  begins  and  ends  with  a  "queue header" entry at the
                  position equal to the negative  queue  number.   A  job
                  number  in the queue is represented by the entry at the
                  position equal to the job number.  This entry  contains
                  pointers  to  the  preceding  entry  and  the following
                  entry, thus establishing a unique position for that job
                  number within the queue.

   Defined in:    COMMON

   Used by:       SCHED1, SYSINI

             +------------------------------------------------------------+
    -MAXQ -3 |     Last job in queue     |       First job in queue       |
             |------------------------------------------------------------|
    -MAXQ -2 |     Last job in queue     |       First job in queue       |
             |------------------------------------------------------------|
    -MAXQ -1 |     Last job in queue     |       First job in queue       |
             |------------------------------------------------------------|
    -MAXQ                             .  .  .
             |------------------------------------------------------------|
          -3 |     Last job in queue     |    First job in queue          |
             |------------------------------------------------------------|
   Queue  -2 |     Last job in queue     |       First job in queue       |
   Number    |------------------------------------------------------------|
          -1 |     Last job in queue     |       First job in queue       |
             |------------------------------------------------------------|
    JBTCQ  0 |     Last job in queue     |       First job in queue       |
             |------------------------------------------------------------|
           1 |  Number of previous job   |       Number of next job       |
             |------------------------------------------------------------|
   Job     2 |  Number of previous job   |       Number of next job       |
   Number    |------------------------------------------------------------|
           3 |  Number of previous job   |       Number of next job       |
             |------------------------------------------------------------|
                                   .   .   .
                                                                 Page 115


   Notes:


        1.  Every job number will be in one and only one queue.

        2.  It is possible for a queue to contain  no  job  numbers.   In
            this  case,  the  queue  header  entry  contains a pointer to
            itself, the negative queue number, in both halves.

                                                                 Page 116


   36.0  JBTCSQ -- SUBQUEUES TABLE


   Description:   Contains the PQ2 subqueues that partition  PQ2  into  a
                  number of ordered classes.  Each subqueue (or subclass)
                  is an ordered subset of PQ2 job  numbers,  all  of  the
                  same class.

   Defined in:    COMMON

   Used by:       SCHED1, SYSINI

             +------------------------------------------------------------+
     -SQn    |     Last job in subqueue  |       First job in subqueue    |
   Subqueue  |------------------------------------------------------------|
   Number                             .  .  .
             |------------------------------------------------------------|
     -SQ1    |     Last job in subqueue  |       First job in subqueue    |
             |------------------------------------------------------------|
     -SQ0    |     Last job in subqueue  |       First job in subqueue    |
             |------------------------------------------------------------|
   JBTCSQ    |                                                            |
             |------------------------------------------------------------|
           1 |  Number of previous job   |       Number of next job       |
             |------------------------------------------------------------|
   Job     2 |  Number of previous job   |       Number of next job       |
   Number    |------------------------------------------------------------|
           3 |  Number of previous job   |       Number of next job       |
             |------------------------------------------------------------|
                                   .   .   .
   Notes:

        1.  Every job number in PQ2 will be in one and only one subqueue.

        2.  It is possible for a subqueue to contain no job numbers.   In
            this  case,  the  subqueue header entry contains a pointer to
            itself, the negative subqueue number, in both halves.

        3.  The number of classes partitioning PQ2 is specified at MONGEN
            time.

        4.  When the scheduler scans  these  subqueues,  it  does  so  in
            order, starting with SQ0 (class 0).

                                                                 Page 117


|  37.0  JBTDDB -- DDB REQUESTED BY JOB
|
|
|  Description:   One entry for each job,  containing  JBTCLM  (job  core
|                 limit)  in  the  left half, and the DDB that the job is
|                 waiting for, in the right half.
|
|  Defined in:    COMMON
|
|  Used by:       COMCON
|
|  See also:      JBTCLM
|
|
|            +------------------------------------------------------------+
|  Job 0     |    JBTCLM                    |    DDB requested            |
|            |------------------------------------------------------------|
|  Job 1     |    JBTCLM                    |    DDB requested            |
|            |------------------------------------------------------------|
|                                      .   .   .
|            |------------------------------------------------------------|
|  Job n     |    JBTCLM                    |    DDB requested            |
|            +------------------------------------------------------------+
|
                                                                 Page 118


   38.0  JBTDEV -- HIGH SEGMENT DEVICE TABLE


   Description:   One entry for each high segment.
|
|                 The entry is the high segment's physical device name or
|                 file structure name.  (Job number entries are not used,
|                 and overlap the high end of the JBTPPN table.)

   Defined in:    COMMON

   Used by:       SEGCON, UUOCON

   GETTAB Table:  .GTDEV (24)
|
|  High      +------------------------------------------------------------+
|  Segment   |                  Physical device name                      |
|       n+1  |                  or file structure name                    |
|            |------------------------------------------------------------|
|       n+2  |                  Physical device name                      |
|            |                  or file structure name                    |
|            |------------------------------------------------------------|
|                               .     .    .
|
                                                                 Page 119


|  39.0  JBTDTC -- JOB REQUESTING DECTAPE DDB
|
|
|  Description:   Contains one entry for each job, with the address of  a
|                 master DECtape DDB in the left half, and the right half
|                 contains JBTIPC.  JBTDDB is non-zero when  the  job  is
|                 waiting for a DECtape DDB, in DT resource wait state.
|
|  Defined in:    COMMON
|
|  Used by:       DTASER, SCHED1
|
|  See also:      JBTIND
|
|
|            +------------------------------------------------------------+
|  Job 0     | Master DECtape DDB address   |    JBTIPC                   |
|            |------------------------------------------------------------|
|      1     | Master DECtape DDB address   |    JBTIPC                   |
|            |------------------------------------------------------------|
|                                      .   .   .
|            |------------------------------------------------------------|
|      n     | Master DECtape DDB address   |    JBTIPC                   |
|            +------------------------------------------------------------+
|
                                                                 Page 120


|  40.0  JBTIMI -- JOB PAGE COUNT
|
|
|  Description:   One  entry  for  each  job  containing  the  number  of
|                 physical   pages  in  the  user  portion  of  the  job,
|                 referenced by byte pointer IMGIN.
|
|  Defined in:    COMMON
|
|  Used by:       CORE1, SCHED1, SEGCON, SWPSER, VMSER
|
|  See also:      JBTIMO
|
|
|            +------------------------------------------------------------+
|  Job 0     |  |  NZSICN |  NZSSCN  |   Physical page count of user area |
|            |------------------------------------------------------------|
|  Job 1     |  |  NZSICN |  NZSSCN  |   Physical page count of user area |
|            |------------------------------------------------------------|
|                                      .   .   .
|            |------------------------------------------------------------|
|  Job n     |  |  NZSICN |  NZSSCN  |   Physical page count of user area |
|            +------------------------------------------------------------+
|
|  Bit definitions:
|
|                 Byte                  ____
|       Bits      Pointer   Contents        ____      _______   ________
|
|         0-2               Reserved
|         3-8     NZSICN    Number of pages to allocate  on  swap-in  for
|                           Non-Zero Section (NZS) maps.
|        9-14     NZSSCN    Number of pages allocated to NZS page maps.
|       15-35     IMGIN     Number of physical pages in user  portion  of
|                           job.
|
                                                                 Page 121


|  41.0  JBTIMO -- SWAPPED-OUT PAGE COUNT
|
|
|  Description:   Contains the number of physical  pages  in  swapped-out
|                 job (that is, the number of pages on disk).  This table
|                 is referenced by byte pointers IMGOUT.
|
|  Defined in:    COMMON
|
|  Used by:       CORE1, SEGCON, SWPSER, VMSER
|
|  See also:      JBTIMI
|
|
|            +------------------------------------------------------------+
|  Job 0     |                              | No. of pages on disk        |
|            |------------------------------------------------------------|
|  Job 1     |                              | No. of pages on disk        |
|            |------------------------------------------------------------|
|                                      .   .   .
|            |------------------------------------------------------------|
|  Job n     |                              | No. of pages on disk        |
|            +------------------------------------------------------------+
|
|
|       Bits      Symbol    Contents        ____      ______    ________
|
|       0-14                Reserved
|
|       15-35     IMGOUT    Page count
                                                                 Page 122


|  42.0  JBTIPC -- REQUESTED IPCF INTERLOCK
|
|
|  Description:   Contains one entry for each job.  Each  entry  contains
|                 JBTDTC  in  the  left half, and the address of the Exec
|                 IPCF interlock that the job is waiting for in the right
|                 half.  The right half is non-zero when the job is in IP
|                 resource wait state.
|
|  Defined in:    COMMON
|
|  Used by:       SCHED1, IPCSER
|
|  See also:      JBTDTC
|
|
|            +------------------------------------------------------------+
|  Job 0     |    JBTDTC                    |    Interlock address        |
|            |------------------------------------------------------------|
|  Job 1     |    JBTDTC                    |    Interlock address        |
|            |------------------------------------------------------------|
|                                      .   .   .
|            |------------------------------------------------------------|
|  Job n     |    JBTDTC                    |    Interlock address        |
|            +------------------------------------------------------------+
|
                                                                 Page 123


|  43.0  JBTJIL -- JUST-SWAPPED-IN LIST
|
|
|  Description:   Special queue containing jobs in  PQ2  that  have  just
|                 been  swapped in and have not expired their time slice.
|                 The format of the queue table is similar to JBTCQ, that
|                 is  indexed in the positive direction by job number and
|                 the negative direction by queue number.  The two  queue
|                 headers are regular (timesharing) and background batch.
|
|  Defined in:    COMMON
|
|  Used by:       SCHED1, SYSINI
|
|  See also:      JBTOLS
|
|                +-------------------------------------------------------+
|  JBTJIL        |  Last job in queue         |  First job in queue      |
|                |-------------------------------------------------------|
|  Job    1      |  No. of previous job       |  No. of next job         |
|                |-------------------------------------------------------|
|         2      |  No. of previous job       |  No. of next job         |
|                |-------------------------------------------------------|
|         3      |  No. of previous job       |  No. of next job         |
|                |-------------------------------------------------------|
|                                         .   .   .
|                |-------------------------------------------------------|
|         n      |  No. of previous job       |  No. of next job         |
|                +-------------------------------------------------------+
|
|
|  Notes:
|
|  The scheduler will search the  timesharing  queue  for  job  selection
|  ahead  of  PQ2  a  certain percentage of the time.  This percentage is
|  called the response fairness factor  and  may  be  modified  from  the
|  default value of 10% by the SCHED. UUO.
                                                                 Page 124


|  44.0  JBTJRQ -- REQUEUE LIST
|
|
|  Description:   A singly linked first in last out list of jobs  waiting
|                 to be requeued.  The right half of JBTJRQ points to the
|                 first entry in the queue.  The remainder of  the  table
|                 is indexed by job number with each entry containing the
|                 job number of the next job in the queue.
|
|  Defined in:    COMMON
|
|  Used by:       CLOCK1, SCHED1
|
|
|                +-------------------------------------------------------+
|  JBTJRQ        |                        |  No. of 1st job in the list  |
|                |-------------------------------------------------------|
|  Job  1        |            No. of next job in the list                |
|                |-------------------------------------------------------|
|       2        |            No. of next job in the list                |
|                |-------------------------------------------------------|
|       3        |            No. of next job in the list                |
|                |-------------------------------------------------------|
|                                     .   .   .
|                |-------------------------------------------------------|
|       n        |            No. of next job in the list                |
|                +-------------------------------------------------------+
|
                                                                 Page 125


|  45.0  JBTLIM -- JOB TIME LIMIT TABLE
|
|
|  Description:   One  entry  per  job,  indexed  by  job  number.    Bit
|                 definitions  are  found  in S.MAC.  JBTLIM is assembled
|                 only if FTTLIM is non-zero.
|
|  Defined in:    COMMON
|
|  Used by:       CLOCK1, COMCON, CORE1, FILFND, IPCSER, SCNSER, UUOCON
|
|  GETTAB Table:  .GTLIM (40)
|
|                +-------------------------------------------------------+
|  Job 0         |LTL|   LCR   | LBT | LSY |       JB.LTM                |
|                |-------------------------------------------------------|
|      1         |LTL|   LCR   | LBT | LSY |       JB.LTM                |
|                |-------------------------------------------------------|
|      2         |LTL|   LCR   | LBT | LSY |       JB.LTM                |
|                |-------------------------------------------------------|
|                                     .   .   .
|                |-------------------------------------------------------|
|      n         |LTL|   LCR   | LBT | LSY |       JB.LTM                |
|                +-------------------------------------------------------+
|
|
|       Bit       Mask      Pointer   Content        ___       ____      _______   _______
|
|           0     JB.LTL              Set if time  limit  set  by  forced
|                                     DETACH.
|         1-9     JB.LCR    JBYLCR    User core limit (in pages).
|          10     JB.LBT              Batch job.
|          11     JB.LSY              Set when program came from SYS.
|       12-35     JB.LTM    JBLTM     Time  limit   in   jiffies   (0   =
|                                     infinite).
                                                                 Page 126


|  46.0  JBTLOC -- JOB LOCATION TABLE
|
|
|  Description:   One entry per job number;  indexed by job number.
|
|                 The first entry in the table  is  the  central  station
|                 number.
|
|                 The table is used by the  LOCATE  command  and  by  the
|                 NEWJOB routine in COMMON to locate a job at the station
|                 number of its controlling terminal.
|
|                 JBTLOC is assembled only if FTNET is non-zero.
|
|  Defined in:    COMMON
|
|  Used by:       AUTCON, COMCON, COMDEV, IPCSER, NETSER, PTYSER, SYSINI,
|                 UUOCON
|
|  GETTAB Table:  .GTLOC (26)
|
|                +-------------------------------------------------------+
|                |             Central site station number               |
|                |-------------------------------------------------------|
|  Job  1        |                   Job location                        |
|                |-------------------------------------------------------|
|       2        |                   Job location                        |
|                |-------------------------------------------------------|
|       3        |                   Job location                        |
|                |-------------------------------------------------------|
|                                    .   .   .
|                |-------------------------------------------------------|
|       n        |                   Job location                        |
|                +-------------------------------------------------------+
|
                                                                 Page 127


|  47.0  JBTNAM -- JOB NAME TABLE
|
|
|  Description:   Tells SIXBIT name of each segment;  typically, this  is
|                 the  file  it came from.  One entry for each job number
|                 or high segment number.  Indexed by job number or  high
|                 segment number.  JBTPRG is the same table.
|
|  Defined in:    COMMON
|
|  Used by:       CLOCK1, COMCON, ERRCON, FILFND, IPCSER, KLSER,  LPTSER,
|                 NETSER, PTYSER, SCNSER, SEGCON, TAPUUO, TSKSER, UUOCON
|
|  GETTAB Table:  .GTPRG (3)
|
|
|                +-------------------------------------------------------+
|    Job    0    |                                                       |
|                |-------------------------------------------------------|
|           1    |                  SIXBIT/segment1/                     |
|                |-------------------------------------------------------|
|           2    |                  SIXBIT/segment2/                     |
|                |-------------------------------------------------------|
|           3    |                  SIXBIT/segment3/                     |
|                |-------------------------------------------------------|
|                                     .    .    .
|                |-------------------------------------------------------|
|           n    |                  SIXBIT/segmentn/                     |
|                |-------------------------------------------------------|
|  High          |                  SIXBIT/segmentn+1/                   |
|  Segment n+1   |                                                       |
|                |-------------------------------------------------------|
|          n+2   |                  SIXBIT/segmentn+2/                   |
|                |-------------------------------------------------------|
|                                    .    .    .
|
                                                                 Page 128


|  48.0  JBTOLS -- JOB OUTPUT LIST
|
|
|  Description:   Special  queues  containing  jobs  in  PQ2  which  have
|                 exceeded  their time slice and consequently have become
|                 eligible for swap out.  The format of the  queue  table
|                 is  similar  to  that  of  JBTCQ,  in that the table is
|                 indexed in the positive direction by  job  number,  and
|                 the  negative direction by queue number.  The two queue
|                 headers are regular output (timesharing) and background
|                 batch.
|
|  Defined in:    COMMON
|
|  Used by:       SCHED1, SYSINI
|
|  See also:      JBTJIL
|
|                +-------------------------------------------------------+
|  JBTOBQ        |  Last job in queue         |  First job in queue      |
|                |-------------------------------------------------------|
|  JBTOLQ        |  Last job in queue         |  First job in queue      |
|                |-------------------------------------------------------|
|  JBTOLS        |  Last job in queue         |  First job in queue      |
|                |-------------------------------------------------------|
|  Job    1      |  No. of previous job       |  No. of next job         |
|                |-------------------------------------------------------|
|         2      |  No. of previous job       |  No. of next job         |
|                |-------------------------------------------------------|
|         3      |  No. of previous job       |  No. of next job         |
|                |-------------------------------------------------------|
|                                         .   .   .
|                |-------------------------------------------------------|
|         n      |  No. of previous job       |  No. of next job         |
|                +-------------------------------------------------------+
|
|
|  Notes:
|
|  Once a job enters JBTOLS it has a higher priority for swap out.
                                                                 Page 129


|  49.0  JBTPC -- USER MODE PC
|
|
|  Description:   Contains user program  counter  for  each  job  in  the
|                 system.
|
|  Defined in:    COMMON
|
|                 Used by:  CLOCK1, COMCON, ERRCON, UUOCON
|
|  GETTAB Table:  .GTPC (152)
|
|                +-------------------------------------------------------+
|  Job     0     |                      Full-word PC                     |
|                |-------------------------------------------------------|
|          1     |                      Full-word PC                     |
|                |-------------------------------------------------------|
|          2     |                      Full-word PC                     |
|                |-------------------------------------------------------|
|                                         .   .   .
|                |-------------------------------------------------------|
|          n     |                      Full-word PC                     |
|                +-------------------------------------------------------+
|
                                                                 Page 130


   50.0  JBTPDB -- PROCESS DATA BLOCK TABLE


   Description:   One entry per job, indexed by job  number.   The  right
                  half  contains  the  address of this job's Process Data
                  Block.

   Defined in:    COMMON

   Used by:       CLOCK1, COMCON, DATMAN, ERRCON, IPCSER, KLSER,  MOSSER,
                  NETSER, SCHED1, SCMUUO, UUOCON, VMSER

   GETTAB Table:  .GTPDB (162)

                 +-------------------------------------------------------+
   Job     0     |      |   IFYPGS |  NFYPGS |        PDB address        |
                 |-------------------------------------------------------|
           1     |      |   IFYPGS |  NFYPGS |        PDB address        |
                 |-------------------------------------------------------|
           2     |      |   IFYPGS |  NFYPGS |        PDB address        |
                 |-------------------------------------------------------|
                                      .    .    .
                 |-------------------------------------------------------|
           n     |      |   IFYPGS |  NFYPGS |        PDB address        |
                 +-------------------------------------------------------+


   Bit definitions:

        Bit       Symbol    Contents        ___       ______    ________

          0-5               Reserved
         6-11     IFYPGS    Byte pointer to the  number  of  funny  pages
                            allocated on swap-in.
        12-17     NFYPGS    Byte pointer to the  number  of  funny  pages
                            allotted to the user.
        18-35               PDB address.

                                                                 Page 131


   51.0  JBTPIA -- SOFTWARE PROGRAM INTERRUPT TABLE


   Description:   Contains flags and pointers to program interrupt  table
                  for  each  job  that  is  using the programmed software
                  interrupt facility.

   Defined in:    COMMON

   Used by:       IPCSER, PSISER, UUOCON

                 +-------------------------------------------------------+
   Job      0    | ON | OFF |              | Interrupt table address     |
                 |-------------------------------------------------------|
            1    | ON | OFF |              | Interrupt table address     |
                 |-------------------------------------------------------|
            2    | ON | OFF |              | Interrupt table address     |
                 |-------------------------------------------------------|
                                      .    .    .
                 |-------------------------------------------------------|
            n    | ON | OFF |              | Interrupt table address     |
                 +-------------------------------------------------------+


   Bit definitions:

        Bit 0 is set if the PI system is on for this job.

        Bit 1 is set if the PI system is turned off until this job issues
        a DEBRK.
                                                                 Page 132


   52.0  JBTPPN -- PROJECT PROGRAMMER NUMBER TABLE


   Description:   Contains the project programmer number for each  logged
                  in job.  if the high segment came from disk, this table
                  contains the PPN for path pointer of the directory from
                  which the high segment came.

   Defined in:    COMMON

   Used by:       CLOCK1, COMCON, ERRCON, FILFND, FILIO, FILUUO,  IPCSER,
                  KLSER,  LPTSER, NETSER, SCLINK, SCNSER, SEGCON, TAPUUO,
                  TSKSER, UUOCON,

   GETTAB Table:  .GTPPN (2)


                 +-------------------------------------------------------+
     Job    0    |                                                       |
                 |-------------------------------------------------------|
            1    |                Project-programmer number              |
                 |-------------------------------------------------------|
            2    |                Project-programmer number              |
                 |-------------------------------------------------------|
            3    |                Project-programmer number              |
                 |-------------------------------------------------------|
                                      .    .    .
                 |-------------------------------------------------------|
            n    |                Project-programmer number              |
                 |-------------------------------------------------------|
   High          |                   0 or path pointer                   |
   Segment n+1   |                                                       |
                 |-------------------------------------------------------|
           n+2   |                   0 or path pointer                   |
                 |-------------------------------------------------------|
                                     .    .    .

                                                                 Page 133


   53.0  JBTPRV -- JOB PRIVILEGE BITS


   Description:   Tells privileges allowed each job.  One entry for  each
                  job  number,  indexed  by  job number.  Bits are set by
                  LOGIN from ACCT.SYS File as modified  by  customer  for
                  his particular installation.

   Defined in:    COMMON.  Bits defined in S.UNV.

   Used by:       CLOCK1, COMCON, COMMOD, CPNSER, FILFND, IPCSER,  RTTRP,
                  UUOCON

   GETTAB Table:  .GTPRV (6)

   Each entry in JBTPRV is formatted as follows:

   |--------------------------------------------------------------------|
   |IPC|DPR|MET|POK|CCC| HPQ |NSPL|ENQ|  |RTT|LOCK|TRPS|SPYA|SPYM|      |
   |--------------------------------------------------------------------|
     0  1-2  3   4   5  6-9    10   11 12  13  14   15   16   17  18--35

        Bits      Symbol    Meaning        ____      ______    _______

            0     JP.IPC    Job allowed to use IPCF priv.  functions
          1-2     JP.DPR    Highest disk priority allowed to the job
            3     JP.MET    Job allowed to use METER UUO
            4     JP.POK    Job allowed to use POKE UUO
            5     JP.CCC    Job allowed to change CPU specifications
          6-9     PVHPQ     Largest HPQ run queue for this job
           10     PVNSPL    Job allowed to unspool devices
           11     JP.ENQ    Job allowed to use ENQ/DEQ
           12               Unused
           13     PVRTT     Job allowed to use RTTRP UUO
           14     PVLOCK    Job allowed to use LOCK UUO
           15     PVTRPS    Job allowed to use TRPSET UUO
           16     PVSPYA    Job allowed to  spy  at  all  of  core  using
                            SPY/PEEK UUOs
           17     PVSPYM    Job allowed to spy at monitor using  SPY/PEEK
                            UUOs
        18-35               Reserved for customer-defined privileges

                                                                 Page 134


   54.0  JBTRQT -- JOB RUN-QUEUE TIME TABLE


   Description:   One entry per job number.   Contains  a  count  of  the
                  number of ticks a job was in PQ1 or PQ2.

   Defined in:    COMMON

   Used by:       CLOCK1, SCHED1, UUOCON

   GETTAB Table:  .GTTRQ (53)

                 +-------------------------------------------------------+
   Job     0     |              "Want to run" time                       |
                 |-------------------------------------------------------|
           1     |              "Want to run" time                       |
                 |-------------------------------------------------------|
           2     |              "Want to run" time                       |
                 |-------------------------------------------------------|
                                   .    .    .
                 |-------------------------------------------------------|
           n     |              "Want to run" time                       |
                 +-------------------------------------------------------+


   Notes:

        JBTRQT is assembled only  if  FTRSP  is  non-zero,  and  is  also
        updated  only  if  the  monitor  is patched at location RQTPAT to
        enable it.
                                                                 Page 135


   55.0  JBTRSP -- RESPONSE TIME TABLE


   Description:   This table contains one entry per job number, including
                  the null job.  The null job entry is not referenced.

   Defined in:    COMMON.  Bits are defined in S.UNV.

   Used by:       CLOCK1, UUOCON

   GETTAB Table:  .GTRSP (50)

                 +-------------------------------------------------------+
   Job      0    | C | O | I | R | X |       Time job started waiting    |
                 |-------------------------------------------------------|
            1    | C | O | I | R | X |       Time job started waiting    |
                 |-------------------------------------------------------|
            2    | C | O | I | R | X |       Time job started waiting    |
                 |-------------------------------------------------------|
                                     .   .   .
                 |-------------------------------------------------------|
            n    | C | O | I | R | X |       Time job started waiting    |
                 +-------------------------------------------------------+


        Bit       Name      Description        ___       ____      ___________

        0         JR.RCR    Recorded first CPU use
        1         JR.ROR    Recorded TTY output UUO
        2         JR.RIR    Recorded TTY input UUO
        3         JR.RRR    Recorded CPU quantum exceeded requeue
        4         JR.RXR    Recorded first of above 3 responses

   The bits are set to 1 when the type of response is recorded;  set to 0
   when user types in.

   Notes:


        1.  The entries in the right half of this table are  the  uptimes
            at  which  the  user  began  to wait for system response.  If
            zero, the user is not waiting.  Entries are made in the table
            when  the  user's  job comes out of TTY Input Wait or types a
            command that runs a program.  The entries  are  used  by  the
            scheduler   to  calculate  entries  in  each  CPU's  response
            subtable.

        2.  JBTRSP is assembled only if FTRSP is non-zero.

                                                                 Page 136


   56.0  JBTRTD -- REAL TIME DEVICES


   Description:   Contains real time status bits in  the  left  half  for
                  HPQs  and  hibernate-wake.   The  right half contains a
                  count of the real time devices owned by the job.

   Defined in:    COMMON

   Used by:       CLOCK1, IPCSER, PTYSER, RTTRP, SCMUUO, SCNSER,  SYSINI,
                  UUOCON

   GETTAB Table:  .GTRTD (37)

                 +-------------------------------------------------------+
   Job      0    |          Status bits               |   Count          |
                 |-------------------------------------------------------|
            1    |          Status bits               |   Count          |
                 |-------------------------------------------------------|
            2    |          Status bits               |   Count          |
                 |-------------------------------------------------------|
                                       .     .     .
                 |-------------------------------------------------------|
            n    |          Status bits               |   Count          |
                 +-------------------------------------------------------+


        Bit       Symbol    Meaning        ___       ______    _______

            0     MONHBR    Only an exec process can wake job
            1     IPCACE    IPCF event enable
          2-5     HPQSPT    Console command setting of HPQ for job
          6-9     HPQPNT    Current HPQ position of job
           10     WAKEB     Wake bit - set if wake job by HIBER
           11     IOACE     I/O activity enable
           12     PTYWUE    PTY activity enable
           13     TTIALE    TTY activity enable - line mode
           14     TTIACE    TTY activity enable - character mode
        15-17     HIBPRT    Hibernate protection code for job
        27-35               Count of number of realtime devices owned  by
                            job
                                                                 Page 137


   57.0  JBTSCD -- SUBQUEUE (CLASS) TABLE


   Description:   Contains each job's class type, indexed by job  number;
                  one entry for each job.

   Defined in:    COMMON

   Used by:       CLOCK1, SCHED1, UUOCON

   GETTAB Table:  .GTJTC (120)

                 +-------------------------------------------------------+
   Job     0     |X|            |  Class #   |       JS.TYP              |
                 |-------------------------------------------------------|
           1     |X|            |  Class #   |       JS.TYP              |
                 |-------------------------------------------------------|
           2     |X|            |  Class #   |       JS.TYP              |
                 |-------------------------------------------------------|
                                    .    .    .
                 |-------------------------------------------------------|
           n     |X|            |  Class #   |       JS.TYP              |
                 +-------------------------------------------------------+


        Symbol    Bits      Description        ______    ____      ___________

            0     JS.PQ2    Job is in PQ2
        13-17     JS.CLS    Job's scheduler class
                  JBYCLS
        27-35     JS.TYP    Job's scheduler type
                                                                 Page 138


   58.0  JBTSFD -- SUB-FILE DIRECTORY TABLE



   Description:   One  entry  per  job  holding  search  list   and   SFD
                  information.

   Defined in:    COMMOD

   Used by:       COMMON, FILFND, FILUUO

                 +-------------------------------------------------------+
   Job     0     | LIB: PPB addr     | X | S |   NMB addr        | U | S |
                 |-------------------------------------------------------|
           1     | LIB: PPB addr     | X | S |   NMB addr        | U | S |
                 |-------------------------------------------------------|
           2     | LIB: PPB addr     | X | S |   NMB addr        | U | S |
                 |-------------------------------------------------------|
                                       .   .   .
                 |-------------------------------------------------------|
           n     | LIB: PPB addr     | X | S |   NMB addr        | U | S |
                 +-------------------------------------------------------+


        Bits      Label     Meaning        ____      _____     _______

         0-15               Address of library PPN PPB
           16     JBPXSY    Search NEW before SYS
           17     JBPSYS    Search SYS after DSK
        18-33               High-order 16 bits of address of default  SFD
                            NMB  or  0.   The  NMB must be on a four-word
                            boundary;   therefore,  bits  34-35  of   the
                            address must be zero.
           34     JBPUFB    Bits 18-33 point to a PPB.
           35     JBPSCN    Scanning is on.
                                                                 Page 139


   59.0  JBTSGN -- SEGMENT TABLE


   Description:   Tells which high segment, if any, each job is using, or
                  which  job  that  high  segment  was  last  or is being
                  swapped in for.  One entry  for  each  segment  number.
                  Indexed by job number or segment number.

   Defined in:    COMMON

   Used by:       CLOCK1, COMCON, CORE1, CPNSER, ERRCON,  IPCSER,  KLSER,
                  LOKCON, METCON, SCHED1, SEGCON, UUOCON, VMSER

   GETTAB Table:  .GTSGN (14)


                 +-------------------------------------------------------+
   Job      0    |SP|SH|UW|ME|CO|LO|NC|SE|NO|RE|GT|    0    | High seg # |
                 |-------------------------------------------------------|
            1    |SP|SH|UW|ME|CO|LO|NC|SE|NO|RE|GT|    0    | High seg # |
                 |-------------------------------------------------------|
            2    |SP|SH|UW|ME|CO|LO|NC|SE|NO|RE|GT|    0    | High seg # |
                 |-------------------------------------------------------|
            3    |SP|SH|UW|ME|CO|LO|NC|SE|NO|RE|GT|    0    | High seg # |
                 |-------------------------------------------------------|
                                      .    .    .
                 |-------------------------------------------------------|
            n    |SP|SH|UW|ME|CO|LO|NC|SE|NO|RE|GT|    0    | High seg # |
                 |-------------------------------------------------------|
   High          |           0             |     Low Segment             |
   Segment n+1   |                         |                             |
                 |-------------------------------------------------------|
           n+2   |           0             |     Low Segment             |
                 |-------------------------------------------------------|
                                     .    .    .


   The bit definitions that may be set for low segment entries are listed
   below:

        Bits      Symbol    Description        ____      ______    ___________

            0     SPYSEG    High segment is physical core (see SPY UUO).
            1     SHRSEG    High segment is sharable.  The SHRSEG bit  is
                            also  kept  in the JBTSTS entry for that high
                            segment.
            2     UWPOFF    User mode write protect is off.
            3     MEDDLE    User has meddled with sharable program.
            4     CORCNT    High  segment's  in-core   count   has   been
                            incremented
            5     LOKSEG    The high  segment  this  job  is  sharing  is
                            locked in core.
            6     NCSH      High segment is not cached.
            7     SEGMB     UPT needs updating because the  high  segment
                            locked by another job.
                                                                Page 140


            8     NOCSH     High segment is not cached because it is  not
                            writeable.
            9     REDOMP    High segment is  part  of  UPT  needs  to  be
                            rewritten
           10     GTSSEG    High segment was obtained with a GETSEG UUO.
        13-17               Zero, so can read "@JBTSGN" to compare  right
                            half.
        18-35               If SPYSEG set, highest physical address  user
                            may   see.    If   no   high  segment,  zero.
                            Otherwise,  high  segment  number  associated
                            with this job.

   For high segment entries, the left half is 0 and  bits  18-35  contain
   the low segment for which the high segment was/is being swapped in.

                                                                 Page 141


|  60.0  JBTSG2 -- HIGH SEGMENT SECTION NUMBERS
|
|
|  Description:   One word for each high segment, containing the  section
|                 numbers where the high segment is stored.
|
|  Defined in:    COMMON
|
|  Used by:       K?SER, SEGCON, VMSER
|
|                +-------------------------------------------------------+
|  High      1   |  Section # |                                          |
|  Segment       |-------------------------------------------------------|
|  Number    2   |  Section # |                                          |
|                |-------------------------------------------------------|
|            3   |  Section # |                                          |
|                |-------------------------------------------------------|
|                                 .    .    .
|                |-------------------------------------------------------|
|            n   |  Section # |                                          |
|                +-------------------------------------------------------+
|
|  Bits 0-5 contain the section number where the high segment is stored.
|
                                                                 Page 142


|  61.0  JBTSHR -- HIGH SEGMENT SHARER COUNT
|
|
|  Description:   Contains one word for each high  segment.   Indexed  by
|                 high  segment  number, JBTSHR contains the total number
|                 of jobs (sharers) using the high segment.
|
|  Defined in:    COMMON
|
|  Used by:       K?SER, SEGCON, VMSER
|
|                +-------------------------------------------------------+
|  High       1  |                Total Sharer Count                     |
|  Segment       |-------------------------------------------------------|
|  Number     2  |                Total Sharer Count                     |
|                |-------------------------------------------------------|
|             3  |                Total Sharer Count                     |
|                |-------------------------------------------------------|
|                                   .    .    .
|                |-------------------------------------------------------|
|                |                                                       |
|             n  |                Total Sharer Count                     |
|                +-------------------------------------------------------+
|

                                                                 Page 143


   62.0  JBTSPL -- SPOOL CONTROL TABLE


   Description:   Contains  input  file  name  counter,   devices   being
                  spooled, and disk priority for the job.

   Defined in:    COMMON

   Used by:       CLOCK1, COMCON, COMMOD, FILUUO, IPCSER, UUOCON

   GETTAB Table:  .GTSPL (36)

                 +-------------------------------------------------------+
   Job       1   | Input file name counter | DSK priority | Spool devices|
   Number        |-------------------------------------------------------|
             2   | Input file name counter | DSK priority | Spool devices|
                 |-------------------------------------------------------|
             3   | Input file name counter | DSK priority | Spool devices|
                 |-------------------------------------------------------|
                                      .    .    .
                 |-------------------------------------------------------|
             n   | Input file name counter | DSK priority | Spool devices|
                 +-------------------------------------------------------+


        Bits      Symbol    Meaning        ____      ______    _______

         0-17     JB.SIN    Spooled input name counter.

        24-26     JS.DPR    Current disk priority
                  JBYPRI

        27-35     JB.SPL    Spooling bits:

           27     JB.DFR    Deferred spooling
           31     JB.CDR    Card reader spooling
           32     JB.CDP    Card punch spooling
           33     JB.PTP    Papertape punch spooling
           34     JB.PLT    Plotter spooling
           35     JB.LPT    Line printer spooling
                                                                 Page 144


   63.0  JBTSPS -- SECOND PROCESSOR STATUS


   Description:   Assembled in multiprocessor systems to indicate  second
                  processor status.  One entry for each job number.

   Defined in:    COMMON

   Used by:       COMDEV, CPNSER, UUOCON

   GETTAB Table:  .GTSPS (54)

                 +-------------------------------------------------------+
   Job       0   |    Bits set by monitor    |  GETTAB bits for 6 CPUs   |
   Number        |-------------------------------------------------------|
             1   |    Bits set by monitor    |  GETTAB bits for 6 CPUs   |
                 |-------------------------------------------------------|
             2   |    Bits set by monitor    |  GETTAB bits for 6 CPUs   |
                 |-------------------------------------------------------|
                                      .     .    .
                 |-------------------------------------------------------|
             n   |    Bits set by monitor    |  GETTAB bits for 6 CPUs   |
                 +-------------------------------------------------------+


        Bit       Label     Meaning        ___       _____     _______

         0                  Not runnable on CPU5
         1                  Not runnable on CPU4
         2                  Not runnable on CPU3
         3                  Not runnable on CPU2
         4        SP.NR1    Not runnable on CPU1
         5        SP.NR0    Not runnable on CPU0
         6                  Current job on CPU5
         7                  Current job on CPU4
         8                  Current job on CPU3
         9                  Current job on CPU2
        10                  Current job on CPU1
        11                  Current job on CPU0
        12        SP.ROP    Job forced to policy CPU when policy CPU dies
        14        SP.CC1    Set if <CTRL/C>  was  typed  or  if  <CTRL/D>
                            breakpoints  are  enabled, and job is running
                            on another CPU to  force  context  switch  to
                            policy CPU.
        24                  SET CPU command bit for CPU5
        25                  SET CPU command bit for CPU4
        26                  SET CPU command bit for CPU3
        27                  SET CPU command bit for CPU2
        28        SP.SC1    SET CPU command bit for CPU1 (OK  as  far  as
                            user  is concerned to run on this CPU even if
                            stopped or not scheduling)
        29        SP.SC0    SET CPU command bit for CPU0
        30                  Can run on CPU5
        31                  Can run on CPU4
        32                  Can run on CPU3
                                                                 Page 145


        33                  Can run on CPU2
        34        SP.CR1    Can run on CPU1
        35        SP.CR0    Can run on CPU0
                                                                 Page 146


   64.0  JBTSTS -- STATUS TABLE


   Description:   Contains status information about  each  job  and  high
                  segment.   One  entry for each job number and each high
                  segment number.  Indexed by job number or high  segment
                  number.

                  See also:  AVALTB, QBITS, Job  Queues  and  Wait  State
                  Codes

   Defined in:    COMMON.  Bits defined in S.UNV.

   Used by:       CLOCK1, COMCOM, CORE1, CP1SER, DISSER, ERRCON,  FILFND,
                  FILIO,  FILUUO,  IPCSER,  KILOCK,  KISER, KLSER, KSSER,
                  METCON, MTXSER, NULSEG, PSISER, PTYSER, REMDSX,  RTTRP,
                  SCHED1, SCNSER, SEGCON, SYSINI, UUOCON, VBCSER, VMSER

   GETTAB Table:  .GTSTS (0)


                 +-------------------------------------------------------+
     Job    0    |                Job status bits                        |
                 |-------------------------------------------------------|
            1    |                Job status bits                        |
                 |-------------------------------------------------------|
            2    |                Job status bits                        |
                 |-------------------------------------------------------|
                                     .    .    .
                 |-------------------------------------------------------|
     Job    n    |                Job status bits                        |
                 |-------------------------------------------------------|
   High          |                High segment status bits               |
   Segment n+1   |                                                       |
                 |-------------------------------------------------------|
           n+2   |                High segment status bits               |
                 |-------------------------------------------------------|
                                     .    .    .

   Status bits for job number entries are listed in Section ?.?.   Status
   bits for high segment entries are described in Section ?.?.

   Left Half of Job Number Entries:

        Bits      Label     Meaning        ____      _____     _______

            0     RUN       Set if user wants job to run.
            1     CMWB      Job in Command Wait
            2     JXPN      Job  must  be  swapped  out  because  it   is
                            expanding,  and  there  is not enough room in
                            core.
            3     JNA       This job number is assigned.
            4     JERR      Monitor detected error has occurred.
            5     NSWP      Job is not to be swapped.
            6     SHF       Monitor is waiting to  shuffle  or  swap  out
                                                                 Page 147


                            this job.
            7     SWP       1 if job swapped out or in transit.
            8     NSHF      Job is not to be shuffled.
            9     CNTRLC    <CTRL/C> typed while in monitor mode and  not
                            in TTY input wait - delay stopping job.
        10-14     BSTS      Specifies transfer table to requeue  job  for
                            current  conditions.   See  AVLQTB, QBITS for
                            the names of the tables.   These  are  system
                            dependent  values  as  not all queues will be
                            assembled for all systems.   The  value  here
                            may be used to count 12-bit bytes into STSTBL
                            to get the SIXBIT queue name.  See  also  Job
                            Queues and Wait State Codes.
           15     JLOG      Job logged in.
           16     JRQ       Job has changed state and must be  queued  at
                            clock  level  before  rescheduling  can  take
                            place.
           17     JACCT     Privileged  system  CUSP  which   cannot   be
                            interrupted.
           18     CLKR      Job has clock request in.
           19     LOK       Job is being locked in core.
           20     JDC       Job has typed "DCORE."
           21     UTRP      Trap to USER on UUO exit (reenter DDT).
           22     JDCON     Job in <CTRL/C>  state  waiting  to  continue
                            from error.
           23     JS.DEP    DAEMON error pause.
           24               Reserved for use by DIGITAL.
           25     JS.XO     Execute-only core image.
           26     JS.RUU    RUN UUO or command in progress.
           27     JS.MPE    Memory parity error for job.
           28     JS.BPT    <CTRL/D> DDT breakpoint is enabled.
           29     JS.DPM    DAEMON problem message needed.
           30     JS.ASA    Use shadow ACs for UUO args instead  of  user
                            ACs.
           31     JS.XOR    Run   UUO   or   command   in   progress   on
                            execute-only file.
           32     JS.RQR    Reset quantum run time.
           33     JS.SFL    Stop job if disk is full.
           34     JS.NXM    Some  page  in  user's   address   space   is
                            contained in non-existent memory.
           35     JS.NTO    Non-blocking terminal output.


   Left half of High Seg Entries:

        Bit       Symbol    Meaning        ___       ______    _______

            0     SNA       This high seg number assigned.
            1     SHRSEG    Sharable segment (also kept in JBTSGN).
            2     JXPN      High segment is expanding and must be swapped
                            out.
            3     SS.SYS    Hiseg came from SYS.
            4     SERR      High segment swap read error.
            5     NSWP      This high seg is not to be swapped.
            7     SWP       1 if segment swapped out or in transit.
                                                                 Page 148


            8     NSHF      High segment cannot be shuffled.
         9-17               Segment access privilege bits - same as  disk
                            file.
           18     JS.SFE    Hiseg came from an EXE file.
        19-35     JBYICC    In-core  count  of  jobs  using   this   high
                            segment.
                                                                 Page 149


   65.0  JBTST2 -- JOB STATUS TABLE 2


   Description:   Contains   status   information   about    each    job.
                  (Extensions  to  the  JBTSTS  table.)  Indexed  by  job
                  number.

   Defined in:    COMMON.  Bits defined in S.MAC.

   Used by:       CLOCK1, COMCON,  FILFND  KASER,  KISER,  KLSER,  KSSER,
                  SCHED1, SEGCON, UUOCON

   GETTAB Table:  .GTST2 (117)

                 +-------------------------------------------------------+
   Job       0   |    Status bits    | E| M| A| Code| EW| PC| Q#| O| R| S|
   Number        |-------------------------------------------------------|
             1   |    Status bits    | E| M| A| Code| EW| PC| Q#| O| R| S|
                 |-------------------------------------------------------|
             2   |    Status bits    | E| M| A| Code| EW| PC| Q#| O| R| S|
                 |-------------------------------------------------------|
                                    .    .    .
                 |-------------------------------------------------------|
             n   |    Status bits    | E| M| A| Code| EW| PC| Q#| O| R| S|
                 +-------------------------------------------------------+


        Bit       Label     Meaning        ___       _____     _______

            0     JS.IPQ    On if job is in a processor queue.
|         1-2     JS.DEB    Deferred echo bits
|           3     JS.SAC    Context auto-save requested by COMCON
            4     JS.OLS    Job owns locked structure
            5     JS.SIP    On if swapping I/O is in  progress  for  this
                            job
            6     JS.FPS    On if long KA-10 floating point  instructions
                            should  be simulated (FORCE was JXPN to avoid
                            forgetting FORCE was cleared)
            7     JS.NNQ    On if not to  assign  new  quantum  value  on
                            swap-in.   Set  when  job  GETSEGs  a swapped
                            segment.
            8     JS.BBJ    On if job is from background batch.
            9     JS.CSQ    On if job is changing subqueue due to  SCHED.
                            UUO.
           10     JS.IGS    In GETSEG (doing a GETSEG UUO).
           11     JS.HNG    Job  stayed  in  FORCE  too   long,   causing
                            temporary  or permanent system hang.  Cleared
                            when swapped in or out.
           12     JS.BPR    Bypass program to run checking if  set.   The
                            current RUN command is allowed despite .PDPGM
                            (used for KJOB).
           13     JS.FXO    File   daemon   made    this    core    image
                            execute-only.
           14     JS.CFX    Call file daemon on program exit.
           15     JS.HIB    This job is hibernating
                                                                 Page 150


           16     JS.NCS    On if the cache bits are not to be turned  on
                            in this job's map.
           17     JS.EXE    A new save (EXE file) is underway,  or  on  a
                            GET,  the  LOOKUP  on  the  EXE  file failed.
                            (Prevents EXE file from being read  in  again
                            for the low segment.)
           18     JS.MIG    Job has migrated  to  another  swapping  unit
                            when   a   disk  controller  is  being  taken
                            off-line (FTDHIA).
           19     JS.ABP    An address break page fault occurred  because
                            of a reference to this user's virtual address
                            space during UUO processing.
        20-24     JBYEWT    ESLEEP reason:

                            Code Symbol    Reason                            ____ ______    ______

                            1    EV.TKW    Tape controller
                            2    EV.REW    Rewind
                            3    EV.LBL    Label processing
                            4    EV.NET    Network device
                            5    EV.NTC    Network terminal connect
                            6    EV.STC    Network station control
                            7    EV.DTE    DTE I/O
                            10   EV.KDP    KDP I/O
                            11   EV.IPC    IPCF system process receive
                            12   EV.FEI    Front end device input
                            13   EV.FEO    Front end device output
                            14   EV.D60    DN60 device
                            15   EV.DCN    DECnet connect I/O
                            16   EV.DMR    DMR I/O

           25     EWAKEB    EWAKE called (wakeup waiting)
           26     JS.RPC    If = 1, run program in .PDPGM on <CTRL/C>
        27-32     PJBST2    Queue number.  Also called PJBST1 (for
                            indexing by T1).
           33     JS.OOO    User ran out of order. Stop when gives up
                            last resource.
           34     JS.TFO    Job forced out by timer.
           35     JS.SCN    Job was scanned to run by at least one CPU
                            during last tick.

  F h[